{"version":3,"sources":["app/modules/ECommerce/_redux/specifications/specificationsActions.js","app/modules/ECommerce/_redux/specifications/specificationsCrud.js","app/modules/ECommerce/_redux/remarks/remarksActions.js","app/modules/ECommerce/_redux/remarks/remarksCrud.js","app/modules/ECommerce/pages/users/users-loading-dialog/UsersLoadingDialog.js","app/modules/ECommerce/_redux/users/usersCrud.js","app/modules/ECommerce/_redux/users/usersActions.js","app/modules/ECommerce/pages/users/UsersUIHelpers.js","app/modules/ECommerce/pages/users/UsersUIContext.js","app/modules/ECommerce/pages/users/user-delete-dialog/UserDeleteDialog.js","app/modules/ECommerce/pages/users/users-delete-dialog/UsersDeleteDialog.js","app/modules/ECommerce/pages/users/users-fetch-dialog/UsersFetchDialog.js","app/modules/ECommerce/pages/users/users-update-status-dialog/UsersUpdateStatusDialog.js","app/modules/ECommerce/pages/users/users-table/column-formatters/ActionsColumnFormatter.js","app/modules/ECommerce/pages/users/users-table/UsersTable.js","app/modules/ECommerce/pages/users/users-grouping/UsersGrouping.js","app/modules/ECommerce/pages/users/UsersCard.js","app/modules/ECommerce/pages/users/UsersPage.js","app/modules/ECommerce/pages/users/user-edit/UserEditForm.js","app/modules/ECommerce/pages/users/user-specifications/SpecificationsUIHelper.js","app/modules/ECommerce/pages/users/user-specifications/SpecificationsUIContext.js","app/modules/ECommerce/pages/users/user-specifications/specification-edit-dialog/SpecificationEditForm.js","app/modules/ECommerce/pages/users/user-remarks/RemarksUIContext.js","app/modules/ECommerce/pages/users/user-remarks/remark-edit-dialog/RemarkEditForm.js","app/modules/ECommerce/pages/users/user-edit/UserEdit.js","app/modules/ECommerce/pages/users/UsersPages.js"],"names":["actions","specificationsSlice","fetchSpecifications","queryParams","productId","dispatch","startCall","callType","callTypes","list","axios","post","requestFromServer","then","response","data","totalCount","entities","specificationsFetched","catch","error","clientMessage","catchError","fetchSpecification","id","action","specificationId","get","specification","specificationFetched","specificationForEdit","undefined","deleteSpecification","delete","specificationDeleted","createSpecification","specificationForCreation","specificationCreated","updateSpecification","put","specificationUpdated","deleteSpecifications","ids","specificationsDeleted","remarksSlice","fetchRemarks","remarksFetched","fetchRemark","remarkId","remark","remarkFetched","remarkForEdit","deleteRemark","remarkDeleted","createRemark","remarkForCreation","remarkCreated","updateRemark","remarkUpdated","deleteRemarks","remarksDeleted","UsersLoadingDialog","isLoading","useSelector","state","users","listLoading","shallowEqual","useEffect","text","PRODUCTS_URL","API_URL","usersSlice","fetchUsers","pageNumber","filter","pageSize","sortField","sortOrder","params","page","page_size","ordering","count","results","next","URL","searchParams","usersFetched","fetchUser","userId","user","supplier","user_manufacturer","user_user","userFetched","userForEdit","deleteUser","userDeleted","createUser","userForCreation","userCreated","updateUser","userUpdated","updateUsersStatus","status","usersStatusUpdated","deleteUsers","usersDeleted","UserStatusCssClasses","defaultSorted","dataField","order","sizePerPageList","value","initialFilter","name","UsersUIContext","createContext","useUsersUIContext","useContext","Consumer","UsersUIProvider","usersUIEvents","children","useState","setQueryParamsBase","setIds","setQueryParams","useCallback","nextQueryParams","prevQueryParams","isFunction","isEqual","newUserButtonClick","openEditUserPage","openDeleteUserDialog","openDeleteUsersDialog","openFetchUsersDialog","openUpdateUsersStatusDialog","Provider","UserDeleteDialog","show","onHide","usersUIContext","usersUIProps","useMemo","useDispatch","actionsLoading","Modal","aria-labelledby","variant","Header","closeButton","Title","Body","Footer","type","onClick","className","UsersDeleteDialog","length","selectedUsers","_users","forEach","find","el","push","UsersFetchDialog","map","key","style","width","manufacture","model","UsersUpdateStatusDialog","setStatus","onChange","e","target","ActionsColumnFormatter","cellContent","row","rowIndex","OverlayTrigger","overlay","Tooltip","src","toAbsoluteUrl","UsersTable","currentState","columns","sort","sortCaret","formatter","columnFormatters","formatExtraData","classes","headerClasses","minWidth","paginationOptions","custom","totalSize","uiHelpers","sizePerPage","pagination","paginationFactory","paginationProps","paginationTableProps","wrapperClasses","bootstrap4","bordered","remote","keyField","onTableChange","getHandlerTableChange","selectRow","getSelectRow","UsersGrouping","UsersCard","title","UsersPage","history","newUsersButtonClick","ADMIN_ROUTE","openEditUsersPage","path","match","UserEditSchema","withAsyncPaginate","Creatable","Yup","shape","first_name","min","max","required","last_name","email","password","UserEditForm","btnRef","saveUser","enableReinitialize","initialValues","validationSchema","onSubmit","values","handleSubmit","component","Input","placeholder","label","display","ref","SpecificationsUIContext","specId","RemarksUIContext","dueDate","nullable","useStylesSnackbarContent","CheckCircleIcon","WarningIcon","ErrorIcon","InfoIcon","makeStyles","theme","success","backgroundColor","green","palette","dark","info","primary","main","warning","amber","icon","fontSize","iconVariant","opacity","marginRight","spacing","message","alignItems","SnackbarContentWrapper","props","onClose","other","SnackbarContent","clsx","aria-describedby","IconButton","aria-label","color","Close","initUser","UserEdit","suhbeader","useSubheader","setTitle","setMessage","messageType","setMessageType","open","setOpen","_title","useRef","backToUsersList","handleCloseSnackbar","event","reason","current","click","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","UsersPages","fallback"],"mappings":"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","file":"static/js/11.4a614b93.chunk.js","sourcesContent":["import * as requestFromServer from \"./specificationsCrud\";\r\nimport {specificationsSlice, callTypes} from \"./specificationsSlice\";\r\n\r\nconst {actions} = specificationsSlice;\r\n\r\nexport const fetchSpecifications = (queryParams, productId) => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.list }));\r\n  if (!productId) {\r\n    return dispatch(\r\n      actions.specificationsFetched({ totalCount: 0, entities: null })\r\n    );\r\n  }\r\n\r\n  return requestFromServer\r\n    .findSpecifications(queryParams, productId)\r\n    .then(response => {\r\n      const { totalCount, entities } = response.data;\r\n      dispatch(actions.specificationsFetched({ totalCount, entities }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't find specifications\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.list }));\r\n    });\r\n};\r\n\r\nexport const fetchSpecification = id => dispatch => {\r\n  if (!id) {\r\n    return dispatch(\r\n      actions.specificationFetched({ specificationForEdit: undefined })\r\n    );\r\n  }\r\n\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .getSpecificationById(id)\r\n    .then(response => {\r\n      const specification = response.data;\r\n      dispatch(\r\n        actions.specificationFetched({ specificationForEdit: specification })\r\n      );\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't find specification\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const deleteSpecification = id => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .deleteSpecification(id)\r\n    .then(response => {\r\n      dispatch(actions.specificationDeleted({ id }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't delete specification\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const createSpecification = specificationForCreation => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .createSpecification(specificationForCreation)\r\n    .then(response => {\r\n      const { specification } = response.data;\r\n      dispatch(actions.specificationCreated({ specification }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't create specification\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const updateSpecification = specification => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .updateSpecification(specification)\r\n    .then(() => {\r\n      dispatch(actions.specificationUpdated({ specification }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't update specification\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const deleteSpecifications = ids => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .deleteSpecifications(ids)\r\n    .then(() => {\r\n      dispatch(actions.specificationsDeleted({ ids }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't delete specifications\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n","import axios from \"axios\";\r\n\r\nexport const SPECIFICATIONS_URL = \"api/specifications\";\r\n\r\n// CREATE =>  POST: add a new specifications to the server\r\nexport function createSpecification(specification) {\r\n  return axios.post(SPECIFICATIONS_URL, { specification });\r\n}\r\n\r\n// READ\r\n// Server should return filtered specifications by productId\r\nexport function getAllProductSpecificationsByProductId(productId) {\r\n  return axios.get(`${SPECIFICATIONS_URL}?productId=${productId}`);\r\n}\r\n\r\nexport function getSpecificationById(specificationId) {\r\n  return axios.get(`${SPECIFICATIONS_URL}/${specificationId}`);\r\n}\r\n\r\n// Server should return sorted/filtered specifications and merge with items from state\r\n// TODO: Change your URL to REAL API, right now URL is 'api/specificationsfind/{productId}'. Should be 'api/specifications/find/{productId}'!!!\r\nexport function findSpecifications(queryParams, productId) {\r\n  return axios.post(`${SPECIFICATIONS_URL}find/${productId}`, { queryParams });\r\n}\r\n\r\n// UPDATE => PUT: update the specification\r\nexport function updateSpecification(specification) {\r\n  return axios.put(`${SPECIFICATIONS_URL}/${specification.id}`, {\r\n    specification\r\n  });\r\n}\r\n\r\n// DELETE => delete the specification\r\nexport function deleteSpecification(specificationId) {\r\n  return axios.delete(`${SPECIFICATIONS_URL}/${specificationId}`);\r\n}\r\n\r\n// DELETE specifications by ids\r\nexport function deleteSpecifications(ids) {\r\n  return axios.post(`${SPECIFICATIONS_URL}/deleteSpecifications`, { ids });\r\n}\r\n","import * as requestFromServer from \"./remarksCrud\";\r\nimport {remarksSlice, callTypes} from \"./remarksSlice\";\r\n\r\nconst {actions} = remarksSlice;\r\n\r\nexport const fetchRemarks = (queryParams, productId) => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.list }));\r\n  if (!productId) {\r\n    return dispatch(actions.remarksFetched({ totalCount: 0, entities: null }));\r\n  }\r\n\r\n  return requestFromServer\r\n    .findRemarks(queryParams, productId)\r\n    .then(response => {\r\n      const { totalCount, entities } = response.data;\r\n      dispatch(actions.remarksFetched({ totalCount, entities }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't find remarks\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.list }));\r\n    });\r\n};\r\n\r\nexport const fetchRemark = id => dispatch => {\r\n  if (!id) {\r\n    return dispatch(actions.remarkFetched({ remarkForEdit: undefined }));\r\n  }\r\n\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .getRemarkById(id)\r\n    .then(response => {\r\n      const remark = response.data;\r\n      dispatch(actions.remarkFetched({ remarkForEdit: remark }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't find remark\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const deleteRemark = id => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .deleteRemark(id)\r\n    .then(response => {\r\n      dispatch(actions.remarkDeleted({ id }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't delete remark\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const createRemark = remarkForCreation => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .createRemark(remarkForCreation)\r\n    .then(response => {\r\n      const { remark } = response.data;\r\n      dispatch(actions.remarkCreated({ remark }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't create remark\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const updateRemark = remark => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .updateRemark(remark)\r\n    .then(() => {\r\n      dispatch(actions.remarkUpdated({ remark }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't update remark\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const deleteRemarks = ids => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .deleteRemarks(ids)\r\n    .then(() => {\r\n      dispatch(actions.remarksDeleted({ ids }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't delete remarks\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n","import axios from \"axios\";\r\n\r\nexport const REMARKS_URL = \"api/remarks\";\r\n\r\n// CREATE =>  POST: add a new remark to the server\r\nexport function createRemark(remark) {\r\n  return axios.post(REMARKS_URL, { remark });\r\n}\r\n\r\n// READ\r\n// Server should return filtered remarks by productId\r\nexport function getAllProductRemarksByProductId(productId) {\r\n  return axios.get(`${REMARKS_URL}?productId=${productId}`);\r\n}\r\n\r\nexport function getRemarkById(remarkId) {\r\n  return axios.get(`${REMARKS_URL}/${remarkId}`);\r\n}\r\n\r\n// Server should return sorted/filtered remarks and merge with items from state\r\n// TODO: Change your URL to REAL API, right now URL is 'api/remarksfind/{productId}'. Should be 'api/remarks/find/{productId}'!!!\r\nexport function findRemarks(queryParams, productId) {\r\n  return axios.post(`${REMARKS_URL}find/${productId}`, { queryParams });\r\n}\r\n\r\n// UPDATE => PUT: update the remark\r\nexport function updateRemark(remark) {\r\n  return axios.put(`${REMARKS_URL}/${remark.id}`, { remark });\r\n}\r\n\r\n// DELETE => delete the remark\r\nexport function deleteRemark(remarkId) {\r\n  return axios.delete(`${REMARKS_URL}/${remarkId}`);\r\n}\r\n\r\n// DELETE Remarks by ids\r\nexport function deleteRemarks(ids) {\r\n  return axios.post(`${REMARKS_URL}/deleteRemarks`, { ids });\r\n}\r\n","import React, {useEffect} from \"react\";\r\nimport {shallowEqual, useSelector} from \"react-redux\";\r\nimport {LoadingDialog} from \"../../../../../../_metronic/_partials/controls\";\r\n\r\nexport function UsersLoadingDialog() {\r\n  const { isLoading } = useSelector(\r\n    state => ({ isLoading: state.users.listLoading }),\r\n    shallowEqual\r\n  );\r\n  useEffect(() => {}, [isLoading]);\r\n  return <LoadingDialog isLoading={isLoading} text=\"Loading ...\" />;\r\n}\r\n","import axios from \"axios\";\r\nimport { API_URL } from '../../../../pages/helper/api'\r\n\r\nexport const PRODUCTS_URL = API_URL + \"user\";\r\n\r\n// CREATE =>  POST: add a new user to the server\r\nexport function createUser(user) {\r\n  return axios.post(`${API_URL}/create-admin-user`, { ...user });\r\n}\r\n\r\n// READ\r\nexport function getAllUsers({pageNumber, filter, pageSize, sortField, sortOrder}) {\r\n  return axios.get(PRODUCTS_URL,  {\r\n    params: {...filter, page:pageNumber, page_size: pageSize, ordering: (sortOrder == 'asc') ? sortField : '-'+sortField}\r\n  });\r\n}\r\n\r\nexport function getUserById(userId) {\r\n  return axios.get(`${PRODUCTS_URL}/${userId}`);\r\n}\r\n\r\n// Method from server should return QueryResultsModel(items: any[], totalsCount: number)\r\n// items => filtered/sorted result\r\nexport function findUsers(queryParams) {\r\n  return axios.post(`${PRODUCTS_URL}/find`, { queryParams });\r\n}\r\n\r\n// UPDATE => PUT: update the procuct on the server\r\nexport function updateUser(user) {\r\n  return axios.put(`${PRODUCTS_URL}/${user.id}/`, { ...user });\r\n}\r\n\r\n// UPDATE Status\r\nexport function updateStatusForUsers(ids, status) {\r\n  return axios.post(`${PRODUCTS_URL}/updateStatusForUsers`, {\r\n    ids,\r\n    status\r\n  });\r\n}\r\n\r\n// DELETE => delete the user from the server\r\nexport function deleteUser(userId) {\r\n  return axios.delete(`${PRODUCTS_URL}/${userId}`);\r\n}\r\n\r\n// DELETE Users by ids\r\nexport function deleteUsers(ids) {\r\n  return axios.post(`${PRODUCTS_URL}/delete-all/`, { ids });\r\n}\r\n","import * as requestFromServer from \"./usersCrud\";\r\nimport { usersSlice, callTypes } from \"./usersSlice\";\r\n\r\nconst {actions} = usersSlice;\r\n\r\nexport const fetchUsers = queryParams => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.list }));\r\n  return requestFromServer\r\n    .getAllUsers(queryParams)\r\n    .then(response => {\r\n      const { count, results, next } = response.data;\r\n      let pageNumber = null;\r\n      if(next) {\r\n        let url = new URL(next);\r\n        pageNumber = url.searchParams.get('page') ;\r\n      }\r\n      dispatch(actions.usersFetched({ count, results, pageNumber }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't find users\";\r\n      return dispatch(actions.catchError({ error, callType: callTypes.list }));\r\n    });\r\n};\r\n\r\nexport const fetchUser = id => dispatch => {\r\n  if (!id) {\r\n    return dispatch(actions.userFetched({ userForEdit: undefined }));\r\n  }\r\n\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .getUserById(id)\r\n    .then(response => {\r\n      const user = {\r\n        ...response.data, \r\n        supplier:response.data.supplier ? response.data.supplier.id : \"\",\r\n        user_manufacturer:response.data.user_manufacturer ? response.data.user_manufacturer.id : \"\",\r\n        user_user:response.data.user_user ? response.data.user_user.id : \"\",\r\n      };\r\n\r\n      dispatch(actions.userFetched({ userForEdit: user }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't find user\";\r\n      return dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const deleteUser = id => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .deleteUser(id)\r\n    .then(response => {\r\n      dispatch(actions.userDeleted({ id }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't delete user\";\r\n      return dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const createUser = userForCreation => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .createUser(userForCreation)\r\n    .then(response => {\r\n      const { data } = response;\r\n      dispatch(actions.userCreated({ user:data }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't create user\";\r\n      return dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const updateUser = user => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .updateUser(user)\r\n    .then(() => {\r\n      dispatch(actions.userUpdated({ user }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't update user\";\r\n      return dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const updateUsersStatus = (ids, status) => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .updateStatusForUsers(ids, status)\r\n    .then(() => {\r\n      dispatch(actions.usersStatusUpdated({ ids, status }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't update users status\";\r\n      return dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const deleteUsers = ids => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .deleteUsers(ids)\r\n    .then(() => {\r\n      dispatch(actions.usersDeleted({ ids }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't delete users\";\r\n      return dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n","export const UserStatusCssClasses = [\"danger\", \"success\", \"info\", \"\"];\r\nexport const UserStatusTitles = [\"Inactive\", \"Active\"];\r\nexport const UserConditionCssClasses = [\"success\", \"danger\", \"\"];\r\nexport const UserConditionTitles = ['NE','NS', 'SV', 'AR', 'FN', 'US', 'RP'];\r\nexport const YES_NO_OPTIONS = ['YES', 'NO'];\r\nexport const UOM_CHOICES = ['CM', 'BOX', 'KG'];\r\nexport const defaultSorted = [{ dataField: \"id\", order: \"asc\" }];\r\nexport const sizePerPageList = [\r\n  { text: \"10\", value: 10 },\r\n  { text: \"25\", value: 25 },\r\n  { text: \"50\", value: 50 }\r\n];\r\nexport const initialFilter = {\r\n  filter: {\r\n    name: \"\"\r\n  },\r\n  sortOrder: \"asc\", // asc||desc\r\n  sortField: \"first_name\",\r\n  pageNumber: 1,\r\n  pageSize: 10\r\n};\r\nexport const AVAILABLE_COLORS = [\r\n  \"Red\",\r\n  \"CadetBlue\",\r\n  \"Eagle\",\r\n  \"Gold\",\r\n  \"LightSlateGrey\",\r\n  \"RoyalBlue\",\r\n  \"Crimson\",\r\n  \"Blue\",\r\n  \"Sienna\",\r\n  \"Indigo\",\r\n  \"Green\",\r\n  \"Violet\",\r\n  \"GoldenRod\",\r\n  \"OrangeRed\",\r\n  \"Khaki\",\r\n  \"Teal\",\r\n  \"Purple\",\r\n  \"Orange\",\r\n  \"Pink\",\r\n  \"Black\",\r\n  \"DarkTurquoise\"\r\n];\r\n\r\nexport const AVAILABLE_MANUFACTURES = [\r\n  \"Pontiac\",\r\n  \"Kia\",\r\n  \"Lotus\",\r\n  \"Subaru\",\r\n  \"Jeep\",\r\n  \"Isuzu\",\r\n  \"Mitsubishi\",\r\n  \"Oldsmobile\",\r\n  \"Chevrolet\",\r\n  \"Chrysler\",\r\n  \"Audi\",\r\n  \"Suzuki\",\r\n  \"GMC\",\r\n  \"Cadillac\",\r\n  \"Infinity\",\r\n  \"Mercury\",\r\n  \"Dodge\",\r\n  \"Ram\",\r\n  \"Lexus\",\r\n  \"Lamborghini\",\r\n  \"Honda\",\r\n  \"Nissan\",\r\n  \"Ford\",\r\n  \"Hyundai\",\r\n  \"Saab\",\r\n  \"Toyota\"\r\n];\r\n","import React, { createContext, useContext, useState, useCallback } from \"react\";\r\nimport { isEqual, isFunction } from \"lodash\";\r\nimport { initialFilter } from \"./UsersUIHelpers\";\r\n\r\nconst UsersUIContext = createContext();\r\n\r\nexport function useUsersUIContext() {\r\n  return useContext(UsersUIContext);\r\n}\r\n\r\nexport const usersUIConsumer = UsersUIContext.Consumer;\r\n\r\nexport function UsersUIProvider({ usersUIEvents, children }) {\r\n  const [queryParams, setQueryParamsBase] = useState(initialFilter);\r\n  const [ids, setIds] = useState([]);\r\n  const setQueryParams = useCallback((nextQueryParams) => {\r\n    setQueryParamsBase((prevQueryParams) => {\r\n      if (isFunction(nextQueryParams)) {\r\n        nextQueryParams = nextQueryParams(prevQueryParams);\r\n      }\r\n\r\n      if (isEqual(prevQueryParams, nextQueryParams)) {\r\n        return prevQueryParams;\r\n      }\r\n\r\n      return nextQueryParams;\r\n    });\r\n  }, []);\r\n\r\n  const value = {\r\n    queryParams,\r\n    setQueryParamsBase,\r\n    ids,\r\n    setIds,\r\n    setQueryParams,\r\n    newUserButtonClick: usersUIEvents.newUserButtonClick,\r\n    openEditUserPage: usersUIEvents.openEditUserPage,\r\n    openDeleteUserDialog: usersUIEvents.openDeleteUserDialog,\r\n    openDeleteUsersDialog: usersUIEvents.openDeleteUsersDialog,\r\n    openFetchUsersDialog: usersUIEvents.openFetchUsersDialog,\r\n    openUpdateUsersStatusDialog:\r\n      usersUIEvents.openUpdateUsersStatusDialog,\r\n  };\r\n\r\n  return (\r\n    <UsersUIContext.Provider value={value}>\r\n      {children}\r\n    </UsersUIContext.Provider>\r\n  );\r\n}\r\n","/* eslint-disable no-restricted-imports */\r\nimport React, { useEffect, useMemo } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport { ModalProgressBar } from \"../../../../../../_metronic/_partials/controls\";\r\nimport * as actions from \"../../../_redux/users/usersActions\";\r\nimport { useUsersUIContext } from \"../UsersUIContext\";\r\n\r\nexport function UserDeleteDialog({ id, show, onHide }) {\r\n  // Users UI Context\r\n  const usersUIContext = useUsersUIContext();\r\n  const usersUIProps = useMemo(() => {\r\n    return {\r\n      setIds: usersUIContext.setIds,\r\n      queryParams: usersUIContext.queryParams,\r\n    };\r\n  }, [usersUIContext]);\r\n\r\n  // Users Redux state\r\n  const dispatch = useDispatch();\r\n  const { isLoading } = useSelector(\r\n    (state) => ({ isLoading: state.users.actionsLoading }),\r\n    shallowEqual\r\n  );\r\n\r\n  // if !id we should close modal\r\n  useEffect(() => {\r\n    if (!id) {\r\n      onHide();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [id]);\r\n\r\n  // looking for loading/dispatch\r\n  useEffect(() => {}, [isLoading, dispatch]);\r\n\r\n  const deleteUser = () => {\r\n    // server request for deleting user by id\r\n    dispatch(actions.deleteUser(id)).then(() => {\r\n      // refresh list after deletion\r\n      dispatch(actions.fetchUsers(usersUIProps.queryParams));\r\n      // clear selections list\r\n      usersUIProps.setIds([]);\r\n      // closing delete modal\r\n      onHide();\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      show={show}\r\n      onHide={onHide}\r\n      aria-labelledby=\"example-modal-sizes-title-lg\"\r\n    >\r\n      {isLoading && <ModalProgressBar variant=\"query\" />}\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n          User Delete\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        {!isLoading && (\r\n          <span>Are you sure to permanently delete this user?</span>\r\n        )}\r\n        {isLoading && <span>User is deleting...</span>}\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            onClick={onHide}\r\n            className=\"btn btn-light btn-elevate\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <> </>\r\n          <button\r\n            type=\"button\"\r\n            onClick={deleteUser}\r\n            className=\"btn btn-danger btn-elevate\"\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n","/* eslint-disable no-restricted-imports */\r\nimport React, { useEffect, useMemo } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport { ModalProgressBar } from \"../../../../../../_metronic/_partials/controls\";\r\nimport * as actions from \"../../../_redux/users/usersActions\";\r\nimport { useUsersUIContext } from \"../UsersUIContext\";\r\n\r\nexport function UsersDeleteDialog({ show, onHide }) {\r\n  // Users UI Context\r\n  const usersUIContext = useUsersUIContext();\r\n  const usersUIProps = useMemo(() => {\r\n    return {\r\n      ids: usersUIContext.ids,\r\n      setIds: usersUIContext.setIds,\r\n      queryParams: usersUIContext.queryParams,\r\n    };\r\n  }, [usersUIContext]);\r\n\r\n  // Users Redux state\r\n  const dispatch = useDispatch();\r\n  const { isLoading } = useSelector(\r\n    (state) => ({ isLoading: state.users.actionsLoading }),\r\n    shallowEqual\r\n  );\r\n\r\n  // looking for loading/dispatch\r\n  useEffect(() => {}, [isLoading, dispatch]);\r\n\r\n  // if there weren't selected users we should close modal\r\n  useEffect(() => {\r\n    if (!usersUIProps.ids || usersUIProps.ids.length === 0) {\r\n      onHide();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [usersUIProps.ids]);\r\n\r\n  const deleteUsers = () => {\r\n    // server request for deleting user by seleted ids\r\n    dispatch(actions.deleteUsers(usersUIProps.ids)).then(() => {\r\n      // refresh list after deletion\r\n      dispatch(actions.fetchUsers(usersUIProps.queryParams)).then(() => {\r\n        // clear selections list\r\n        usersUIProps.setIds([]);\r\n        // closing delete modal\r\n        onHide();\r\n      });\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      show={show}\r\n      onHide={onHide}\r\n      aria-labelledby=\"example-modal-sizes-title-lg\"\r\n    >\r\n      {isLoading && <ModalProgressBar />}\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n          Users Delete\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        {!isLoading && (\r\n          <span>Are you sure to permanently delete selected users?</span>\r\n        )}\r\n        {isLoading && <span>Users are deleting...</span>}\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            onClick={onHide}\r\n            className=\"btn btn-light btn-elevate\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <> </>\r\n          <button\r\n            type=\"button\"\r\n            onClick={deleteUsers}\r\n            className=\"btn btn-danger btn-elevate\"\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { useEffect, useMemo } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { shallowEqual, useSelector } from \"react-redux\";\r\nimport { UserStatusCssClasses } from \"../UsersUIHelpers\";\r\nimport { useUsersUIContext } from \"../UsersUIContext\";\r\n\r\nconst selectedUsers = (entities, ids) => {\r\n  const _users = [];\r\n  ids.forEach((id) => {\r\n    const user = entities.find((el) => el.id === id);\r\n    if (user) {\r\n      _users.push(user);\r\n    }\r\n  });\r\n  return _users;\r\n};\r\n\r\nexport function UsersFetchDialog({ show, onHide }) {\r\n  // Users UI Context\r\n  const usersUIContext = useUsersUIContext();\r\n  const usersUIProps = useMemo(() => {\r\n    return {\r\n      ids: usersUIContext.ids,\r\n      queryParams: usersUIContext.queryParams,\r\n    };\r\n  }, [usersUIContext]);\r\n\r\n  // Users Redux state\r\n  const { users } = useSelector(\r\n    (state) => ({\r\n      users: selectedUsers(state.users.entities, usersUIProps.ids),\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  // if there weren't selected ids we should close modal\r\n  useEffect(() => {\r\n    if (!usersUIProps.ids || usersUIProps.ids.length === 0) {\r\n      onHide();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [usersUIProps.ids]);\r\n\r\n  return (\r\n    <Modal\r\n      show={show}\r\n      onHide={onHide}\r\n      aria-labelledby=\"example-modal-sizes-title-lg\"\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n          Fetch selected elements\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <div className=\"list-timeline list-timeline-skin-light padding-30\">\r\n          <div className=\"list-timeline-items\">\r\n            {users.map((user) => (\r\n              <div className=\"list-timeline-item mb-3\" key={user.id}>\r\n                <span className=\"list-timeline-text\">\r\n                  <span\r\n                    className={`label label-lg label-light-${\r\n                      UserStatusCssClasses[user.status]\r\n                    } label-inline`}\r\n                    style={{ width: \"60px\" }}\r\n                  >\r\n                    ID: {user.id}\r\n                  </span>{\" \"}\r\n                  <span className=\"ml-5\">\r\n                    {user.manufacture}, {user.model}\r\n                  </span>\r\n                </span>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            onClick={onHide}\r\n            className=\"btn btn-light btn-elevate\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <> </>\r\n          <button\r\n            type=\"button\"\r\n            onClick={onHide}\r\n            className=\"btn btn-info btn-elevate\"\r\n          >\r\n            Ok\r\n          </button>\r\n        </div>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { useEffect, useState, useMemo } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport { UserStatusCssClasses } from \"../UsersUIHelpers\";\r\nimport * as actions from \"../../../_redux/users/usersActions\";\r\nimport { useUsersUIContext } from \"../UsersUIContext\";\r\n\r\nconst selectedUsers = (entities, ids) => {\r\n  const _users = [];\r\n  ids.forEach((id) => {\r\n    const user = entities.find((el) => el.id === id);\r\n    if (user) {\r\n      _users.push(user);\r\n    }\r\n  });\r\n  return _users;\r\n};\r\n\r\nexport function UsersUpdateStatusDialog({ show, onHide }) {\r\n  // Users UI Context\r\n  const usersUIContext = useUsersUIContext();\r\n  const usersUIProps = useMemo(() => {\r\n    return {\r\n      ids: usersUIContext.ids,\r\n      setIds: usersUIContext.setIds,\r\n      queryParams: usersUIContext.queryParams,\r\n    };\r\n  }, [usersUIContext]);\r\n\r\n  // Users Redux state\r\n  const { users, isLoading } = useSelector(\r\n    (state) => ({\r\n      users: selectedUsers(state.users.entities, usersUIProps.ids),\r\n      isLoading: state.users.actionsLoading,\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  // if there weren't selected users we should close modal\r\n  useEffect(() => {\r\n    if (usersUIProps.ids || usersUIProps.ids.length === 0) {\r\n      onHide();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [usersUIProps.ids]);\r\n\r\n  const [status, setStatus] = useState(0);\r\n\r\n  const dispatch = useDispatch();\r\n  const updateStatus = () => {\r\n    // server request for updateing user by ids\r\n    dispatch(actions.updateUsersStatus(usersUIProps.ids, status)).then(\r\n      () => {\r\n        // refresh list after deletion\r\n        dispatch(actions.fetchUsers(usersUIProps.queryParams)).then(\r\n          () => {\r\n            // clear selections list\r\n            usersUIProps.setIds([]);\r\n            // closing delete modal\r\n            onHide();\r\n          }\r\n        );\r\n      }\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      show={show}\r\n      onHide={onHide}\r\n      aria-labelledby=\"example-modal-sizes-title-lg\"\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n          Status has been updated for selected users\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body className=\"overlay overlay-block cursor-default\">\r\n        {isLoading && (\r\n          <div className=\"overlay-layer bg-transparent\">\r\n            <div className=\"spinner spinner-lg spinner-warning\" />\r\n          </div>\r\n        )}\r\n        <div className=\"list-timeline list-timeline-skin-light padding-30\">\r\n          <div className=\"list-timeline-items\">\r\n            {users.map((user) => (\r\n              <div className=\"list-timeline-item mb-3\" key={user.id}>\r\n                <span className=\"list-timeline-text\">\r\n                  <span\r\n                    className={`label label-lg label-light-${\r\n                      UserStatusCssClasses[user.status]\r\n                    } label-inline`}\r\n                    style={{ width: \"60px\" }}\r\n                  >\r\n                    ID: {user.id}\r\n                  </span>{\" \"}\r\n                  <span className=\"ml-5\">\r\n                    {user.manufacture}, {user.model}\r\n                  </span>\r\n                </span>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </Modal.Body>\r\n      <Modal.Footer className=\"form\">\r\n        <div className=\"form-group\">\r\n          <select\r\n            className={`form-control ${UserStatusCssClasses[status]}`}\r\n            value={status}\r\n            onChange={(e) => setStatus(+e.target.value)}\r\n          >\r\n            <option value=\"0\">Selling</option>\r\n            <option value=\"1\">Sold</option>\r\n          </select>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <button\r\n            type=\"button\"\r\n            onClick={onHide}\r\n            className=\"btn btn-light btn-elevate\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <> </>\r\n          <button\r\n            type=\"button\"\r\n            onClick={updateStatus}\r\n            className=\"btn btn-info btn-elevate\"\r\n          >\r\n            Update Status\r\n          </button>\r\n        </div>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n","/* eslint-disable no-script-url,jsx-a11y/anchor-is-valid */\r\nimport React from \"react\";\r\nimport { OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\nimport SVG from \"react-inlinesvg\";\r\nimport { toAbsoluteUrl } from \"../../../../../../../_metronic/_helpers\";\r\n\r\nexport const ActionsColumnFormatter = (\r\n  cellContent,\r\n  row,\r\n  rowIndex,\r\n  { openEditUserPage, openDeleteUserDialog }\r\n) => (\r\n  <>\r\n    <OverlayTrigger\r\n      overlay={<Tooltip id=\"users-edit-tooltip\">Edit user</Tooltip>}\r\n    >\r\n      <a\r\n        className=\"btn btn-icon btn-light btn-hover-info btn-sm mx-3\"\r\n        onClick={() => openEditUserPage(row.id)}\r\n      >\r\n        <span className=\"svg-icon svg-icon-md svg-icon-info\">\r\n          <SVG\r\n            src={toAbsoluteUrl(\"/static/media/svg/icons/Communication/Write.svg\")}\r\n          />\r\n        </span>\r\n      </a>\r\n    </OverlayTrigger>\r\n\r\n    <> </>\r\n    <OverlayTrigger\r\n      overlay={<Tooltip id=\"users-delete-tooltip\">Delete user</Tooltip>}\r\n    >\r\n      <a\r\n        className=\"btn btn-icon btn-light btn-hover-danger btn-sm\"\r\n        onClick={() => openDeleteUserDialog(row.id)}\r\n      >\r\n        <span className=\"svg-icon svg-icon-md svg-icon-danger\">\r\n          <SVG src={toAbsoluteUrl(\"/static/media/svg/icons/General/Trash.svg\")} />\r\n        </span>\r\n      </a>\r\n    </OverlayTrigger>\r\n  </>\r\n);\r\n","// React bootstrap table next =>\r\n// DOCS: https://react-bootstrap-table.github.io/react-bootstrap-table2/docs/\r\n// STORYBOOK: https://react-bootstrap-table.github.io/react-bootstrap-table2/storybook/index.html\r\nimport React, { useEffect, useMemo } from \"react\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory, {\r\n  PaginationProvider,\r\n} from \"react-bootstrap-table2-paginator\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport * as actions from \"../../../_redux/users/usersActions\";\r\nimport * as uiHelpers from \"../UsersUIHelpers\";\r\nimport {\r\n  getSelectRow,\r\n  getHandlerTableChange,\r\n  NoRecordsFoundMessage,\r\n  PleaseWaitMessage,\r\n  sortCaret,\r\n} from \"../../../../../../_metronic/_helpers\";\r\nimport * as columnFormatters from \"./column-formatters\";\r\nimport { Pagination } from \"../../../../../../_metronic/_partials/controls\";\r\nimport { useUsersUIContext } from \"../UsersUIContext\";\r\n\r\nexport function UsersTable() {\r\n  // Users UI Context\r\n  const usersUIContext = useUsersUIContext();\r\n  const usersUIProps = useMemo(() => {\r\n    return {\r\n      ids: usersUIContext.ids,\r\n      setIds: usersUIContext.setIds,\r\n      queryParams: usersUIContext.queryParams,\r\n      setQueryParams: usersUIContext.setQueryParams,\r\n      openEditUserPage: usersUIContext.openEditUserPage,\r\n      openDeleteUserDialog: usersUIContext.openDeleteUserDialog,\r\n    };\r\n  }, [usersUIContext]);\r\n\r\n  // Getting curret state of users list from store (Redux)\r\n  const { currentState } = useSelector(\r\n    (state) => ({ currentState: state.users }),\r\n    shallowEqual\r\n  );\r\n  const { totalCount, entities, listLoading, pageNumber } = currentState;\r\n  // Users Redux state\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    // clear selections list\r\n    usersUIProps.setIds([]);\r\n    // server call by queryParams\r\n    dispatch(actions.fetchUsers(usersUIProps.queryParams));\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [usersUIProps.queryParams, dispatch]);\r\n  // Table columns\r\n  const columns = [\r\n    \r\n    {\r\n      dataField: \"first_name\",\r\n      text: \"First Name\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n    },\r\n    {\r\n      dataField: \"last_name\",\r\n      text: \"Last Name\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n    },\r\n    {\r\n      dataField: \"email\",\r\n      text: \"Email\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n    },\r\n    {\r\n      dataField: \"is_active\",\r\n      text: \"Status\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n    },\r\n    {\r\n      dataField: \"action\",\r\n      text: \"Actions\",\r\n      formatter: columnFormatters.ActionsColumnFormatter,\r\n      formatExtraData: {\r\n        openEditUserPage: usersUIProps.openEditUserPage,\r\n        openDeleteUserDialog: usersUIProps.openDeleteUserDialog,\r\n      },\r\n      classes: \"text-right pr-0\",\r\n      headerClasses: \"text-right pr-3\",\r\n      style: {\r\n        minWidth: \"100px\",\r\n      },\r\n    },\r\n  ];\r\n  // Table pagination properties\r\n  const paginationOptions = {\r\n    custom: true,\r\n    totalSize: totalCount,\r\n    sizePerPageList: uiHelpers.sizePerPageList,\r\n    sizePerPage: usersUIProps.queryParams.pageSize,\r\n    page: usersUIProps.queryParams.pageNumber,\r\n  };\r\n  let data = [];\r\n  return (\r\n    <>\r\n      <PaginationProvider pagination={paginationFactory(paginationOptions)}>\r\n        {({ paginationProps, paginationTableProps }) => {\r\n          return (\r\n            <Pagination\r\n              isLoading={listLoading}\r\n              paginationProps={paginationProps}\r\n            >\r\n              <BootstrapTable\r\n                wrapperClasses=\"table-responsive\"\r\n                classes=\"table table-head-custom table-vertical-center overflow-hidden\"\r\n                bootstrap4\r\n                bordered={false}\r\n                remote\r\n                keyField=\"id\"\r\n                data= {entities}\r\n                columns={columns}\r\n                defaultSorted={uiHelpers.defaultSorted}\r\n                onTableChange={getHandlerTableChange(\r\n                  usersUIProps.setQueryParams\r\n                )}\r\n                selectRow={getSelectRow({\r\n                  entities,\r\n                  ids: usersUIProps.ids,\r\n                  setIds: usersUIProps.setIds,\r\n                })}\r\n                {...paginationTableProps}\r\n              >\r\n                <PleaseWaitMessage entities={entities} />\r\n                <NoRecordsFoundMessage entities={entities} />\r\n              </BootstrapTable>\r\n            </Pagination>\r\n          );\r\n        }}\r\n      </PaginationProvider>\r\n    </>\r\n  );\r\n}\r\n","import React, { useMemo } from \"react\";\r\nimport { useUsersUIContext } from \"../UsersUIContext\";\r\n\r\nexport function UsersGrouping() {\r\n  // Users UI Context\r\n  const usersUIContext = useUsersUIContext();\r\n  const usersUIProps = useMemo(() => {\r\n    return {\r\n      ids: usersUIContext.ids,\r\n      setIds: usersUIContext.setIds,\r\n      openDeleteUsersDialog: usersUIContext.openDeleteUsersDialog,\r\n      openFetchUsersDialog: usersUIContext.openFetchUsersDialog,\r\n      openUpdateUsersStatusDialog:\r\n        usersUIContext.openUpdateUsersStatusDialog,\r\n    };\r\n  }, [usersUIContext]);\r\n\r\n  return (\r\n    <div className=\"form\">\r\n      <div className=\"row align-items-center form-group-actions margin-top-20 margin-bottom-20\">\r\n        <div className=\"col-xl-12\">\r\n          <div className=\"form-group form-group-inline\">\r\n            <div className=\"form-label form-label-no-wrap\">\r\n              <label className=\"-font-bold font-danger-\">\r\n                <span>\r\n                  Selected records count: <b>{usersUIProps.ids.length}</b>\r\n                </span>\r\n              </label>\r\n            </div>\r\n            <div>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-danger font-weight-bolder font-size-sm\"\r\n                onClick={usersUIProps.openDeleteUsersDialog}\r\n              >\r\n                <i className=\"fa fa-trash\"></i> Delete All\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, {useMemo} from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar,\r\n} from \"../../../../../_metronic/_partials/controls\";\r\nimport { UsersFilter } from \"./users-filter/UsersFilter\";\r\nimport { UsersTable } from \"./users-table/UsersTable\";\r\nimport { UsersGrouping } from \"./users-grouping/UsersGrouping\";\r\nimport { useUsersUIContext } from \"./UsersUIContext\";\r\n\r\nexport function UsersCard() {\r\n  const usersUIContext = useUsersUIContext();\r\n  const usersUIProps = useMemo(() => {\r\n    return {\r\n      ids: usersUIContext.ids,\r\n      queryParams: usersUIContext.queryParams,\r\n      setQueryParams: usersUIContext.setQueryParams,\r\n      newUserButtonClick: usersUIContext.newUserButtonClick,\r\n      openDeleteUsersDialog: usersUIContext.openDeleteUsersDialog,\r\n      openEditUserPage: usersUIContext.openEditUserPage,\r\n      openUpdateUsersStatusDialog:\r\n        usersUIContext.openUpdateUsersStatusDialog,\r\n      openFetchUsersDialog: usersUIContext.openFetchUsersDialog,\r\n    };\r\n  }, [usersUIContext]);\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader title=\"Users\">\r\n        <CardHeaderToolbar>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-info\"\r\n            onClick={usersUIProps.newUserButtonClick}\r\n          >\r\n            Add User\r\n          </button>\r\n        </CardHeaderToolbar>\r\n      </CardHeader>\r\n      <CardBody>\r\n        {/* <UsersFilter /> */}\r\n        {usersUIProps.ids.length > 0 && (\r\n          <>\r\n            <UsersGrouping />\r\n          </>\r\n        )}\r\n        <UsersTable />\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { UsersLoadingDialog } from \"./users-loading-dialog/UsersLoadingDialog\";\r\nimport { UserDeleteDialog } from \"./user-delete-dialog/UserDeleteDialog\";\r\nimport { UsersDeleteDialog } from \"./users-delete-dialog/UsersDeleteDialog\";\r\nimport { UsersFetchDialog } from \"./users-fetch-dialog/UsersFetchDialog\";\r\nimport { UsersUpdateStatusDialog } from \"./users-update-status-dialog/UsersUpdateStatusDialog\";\r\nimport { UsersCard } from \"./UsersCard\";\r\nimport { UsersUIProvider } from \"./UsersUIContext\";\r\nimport {ADMIN_ROUTE} from '../../../../pages/helper/api'\r\n\r\nexport function UsersPage({ history }) {\r\n  const usersUIEvents = {\r\n    newUsersButtonClick: () => {\r\n      history.push(`/${ADMIN_ROUTE}/users/new`);\r\n    },\r\n    openEditUsersPage: (id) => {\r\n      history.push(`/${ADMIN_ROUTE}/users/${id}/edit`);\r\n    },\r\n    openDeleteUsersDialog: (id) => {\r\n      history.push(`/${ADMIN_ROUTE}/users/${id}/delete`);\r\n    },\r\n    openDeleteUsersDialog: () => {\r\n      history.push(`/${ADMIN_ROUTE}/users/deleteUsers`);\r\n    },\r\n    openFetchUsersDialog: () => {\r\n      history.push(`/${ADMIN_ROUTE}/users/fetch`);\r\n    },\r\n    openUpdateUsersStatusDialog: () => {\r\n      history.push(\"/\"+ADMIN_ROUTE+\"/users/updateStatus\");\r\n    },\r\n  };\r\n\r\n  return (\r\n    <UsersUIProvider usersUIEvents={usersUIEvents}>\r\n      <UsersLoadingDialog />\r\n      <Route path={\"/\"+ADMIN_ROUTE+\"/users/deleteUsers\"}>\r\n        {({ history, match }) => (\r\n          <UsersDeleteDialog\r\n            show={match != null}\r\n            onHide={() => {\r\n              history.push(\"/\"+ADMIN_ROUTE+\"/users\");\r\n            }}\r\n          />\r\n        )}\r\n      </Route>\r\n      <Route path={\"/\"+ADMIN_ROUTE+\"/users/:id/delete\"}>\r\n        {({ history, match }) => (\r\n          <UserDeleteDialog\r\n            show={match != null}\r\n            id={match && match.params.id}\r\n            onHide={() => {\r\n              history.push(\"/\"+ADMIN_ROUTE+\"/users\");\r\n            }}\r\n          />\r\n        )}\r\n      </Route>\r\n      <Route path={\"/\"+ADMIN_ROUTE+\"/users/fetch\"}>\r\n        {({ history, match }) => (\r\n          <UsersFetchDialog\r\n            show={match != null}\r\n            onHide={() => {\r\n              history.push(\"/\"+ADMIN_ROUTE+\"/users\");\r\n            }}\r\n          />\r\n        )}\r\n      </Route>\r\n      <Route path={\"/\"+ADMIN_ROUTE+\"/users/updateStatus\"}>\r\n        {({ history, match }) => (\r\n          <UsersUpdateStatusDialog\r\n            show={match != null}\r\n            onHide={() => {\r\n              history.push(\"/\"+ADMIN_ROUTE+\"/users\");\r\n            }}\r\n          />\r\n        )}\r\n      </Route>\r\n      <UsersCard />\r\n    </UsersUIProvider>\r\n  );\r\n}\r\n","// Form is based on Formik\r\n// Data validation is based on Yup\r\n// Please, be familiar with article first:\r\n// https://hackernoon.com/react-form-validation-with-formik-and-yup-8b76bda62e10\r\nimport React, { useEffect, useState, useRef } from \"react\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { Input, Select as MSelect } from \"../../../../../../_metronic/_partials/controls\";\r\nimport Creatable from \"react-select/creatable\";\r\nimport { withAsyncPaginate, AsyncPaginate } from \"react-select-async-paginate\";\r\nconst CreatableAsyncPaginate = withAsyncPaginate(Creatable);\r\n// Validation schema\r\nconst UserEditSchema = Yup.object().shape({\r\n  first_name: Yup.string()\r\n    .min(2, \"Minimum 2 symbols\")\r\n    .max(50, \"Maximum 50 symbols\")\r\n    .required(\"Name is required\"),\r\n  last_name: Yup.string()\r\n    .min(2, \"Minimum 2 symbols\")\r\n    .max(50, \"Maximum 50 symbols\")\r\n    .required(\"Name is required\"),\r\n  email: Yup.string()\r\n    .min(2, \"Minimum 2 symbols\")\r\n    .max(50, \"Maximum 50 symbols\")\r\n    .required(\"Name is required\"),\r\n  password: Yup.string()\r\n    .min(2, \"Minimum 2 symbols\")\r\n    .max(50, \"Maximum 50 symbols\")\r\n    .required(\"Name is required\"),\r\n  // category_category: Yup.string(),\r\n  // supplier: Yup.string(),\r\n  // category_manufacturer: Yup.string(),\r\n  // unit_price: Yup.number(),\r\n  // condition: Yup.string()\r\n  //   .min(2, \"Minimum 2 symbols\")\r\n  //   .max(50, \"Maximum 2 symbols\"),\r\n  // quantity: Yup.number()\r\n  //   .min(0, \"Quantity can'be negative\"),\r\n  // tag_date: Yup.date(),\r\n  // turn_around_time: Yup.string(),\r\n  // hazmat: Yup.string(),\r\n  // certification: Yup.string(),\r\n  // unit_of_measure: Yup.string(),\r\n  // hot_sale_item: Yup.string(),\r\n  // status: Yup.string(),\r\n});\r\n\r\nexport function UserEditForm({\r\n  user,\r\n  btnRef,\r\n  saveUser,\r\n}) {\r\n\r\n  return (\r\n    <>\r\n      <Formik\r\n        enableReinitialize={true}\r\n        initialValues={user}\r\n        validationSchema={UserEditSchema}\r\n        onSubmit={(values) => {\r\n          saveUser(values);\r\n        }}\r\n      >\r\n        {({ handleSubmit }) => (\r\n          <>\r\n            <Form className=\"form form-label-right\">\r\n              <div className=\"form-group row\">\r\n                <div className=\"col-lg-6\">\r\n                  <Field\r\n                    name=\"first_name\"\r\n                    component={Input}\r\n                    placeholder=\"First Name\"\r\n                    label=\"First Name\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-lg-6\">\r\n                  <Field\r\n                    name=\"last_name\"\r\n                    component={Input}\r\n                    placeholder=\"Last Name\"\r\n                    label=\"Last Name\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-lg-6\">\r\n                  <Field\r\n                    name=\"email\"\r\n                    component={Input}\r\n                    placeholder=\"Email\"\r\n                    label=\"Email\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-lg-6\">\r\n                  <Field\r\n                    name=\"password\"\r\n                    component={Input}\r\n                    placeholder=\"Password\"\r\n                    label=\"Password\"\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <button\r\n                type=\"submit\"\r\n                style={{ display: \"none\" }}\r\n                ref={btnRef}\r\n                onSubmit={() => handleSubmit()}\r\n              ></button>\r\n            </Form>\r\n          </>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n}\r\n","export const defaultSorted = [{ dataField: \"id\", order: \"asc\" }];\r\nexport const sizePerPageList = [\r\n  { text: \"1\", value: 1 },\r\n  { text: \"3\", value: 3 },\r\n  { text: \"5\", value: 5 },\r\n];\r\nexport const initialFilter = {\r\n  filter: {\r\n    value: \"\",\r\n  },\r\n  sortOrder: \"asc\", // asc||desc\r\n  sortField: \"name\",\r\n  pageNumber: 1,\r\n  pageSize: 5,\r\n};\r\n\r\nexport const SPECIFICATIONS_DICTIONARY = [\r\n  { id: 0, name: \"Seats\" },\r\n  { id: 1, name: \"Fuel Type\" },\r\n  { id: 2, name: \"Stock\" },\r\n  { id: 3, name: \"Door count\" },\r\n  { id: 4, name: \"Engine\" },\r\n  { id: 5, name: \"Transmission\" },\r\n  { id: 6, name: \"Drivetrain\" },\r\n  { id: 7, name: \"Combined MPG\" },\r\n  { id: 8, name: \"Warranty\" },\r\n  { id: 9, name: \"Wheels\" },\r\n];\r\n","/* eslint-disable no-unused-vars */\r\nimport React, {\r\n  useEffect,\r\n  useContext,\r\n  createContext,\r\n  useState,\r\n  useCallback,\r\n} from \"react\";\r\nimport { isEqual, isFunction } from \"lodash\";\r\nimport { initialFilter } from \"./SpecificationsUIHelper\";\r\n\r\nconst SpecificationsUIContext = createContext();\r\n\r\nexport function useSpecificationsUIContext() {\r\n  return useContext(SpecificationsUIContext);\r\n}\r\n\r\nexport const SpecificationsUIConsumer = SpecificationsUIContext.Consumer;\r\n\r\nexport function SpecificationsUIProvider({ currentCategoryId, children }) {\r\n  const [categoryId, setCategoryId] = useState(currentCategoryId);\r\n  const [queryParams, setQueryParamsBase] = useState(initialFilter);\r\n  const [ids, setIds] = useState([]);\r\n  const setQueryParams = useCallback((nextQueryParams) => {\r\n    setQueryParamsBase((prevQueryParams) => {\r\n      if (isFunction(nextQueryParams)) {\r\n        nextQueryParams = nextQueryParams(prevQueryParams);\r\n      }\r\n\r\n      if (isEqual(prevQueryParams, nextQueryParams)) {\r\n        return prevQueryParams;\r\n      }\r\n\r\n      return nextQueryParams;\r\n    });\r\n  }, []);\r\n  const [selectedId, setSelectedId] = useState(null);\r\n  const initSpecification = {\r\n    id: undefined,\r\n    value: \"\",\r\n    specId: 0,\r\n    carId: categoryId,\r\n  };\r\n  useEffect(() => {\r\n    initSpecification.carId = currentCategoryId;\r\n    initSpecification.categoryId = currentCategoryId;\r\n    setCategoryId(currentCategoryId);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [currentCategoryId]);\r\n  const [\r\n    showEditSpecificationDialog,\r\n    setShowEditSpecificationDialog,\r\n  ] = useState(false);\r\n  const openNewSpecificationDialog = () => {\r\n    setSelectedId(undefined);\r\n    setShowEditSpecificationDialog(true);\r\n  };\r\n  const openEditSpecificationDialog = (id) => {\r\n    setSelectedId(id);\r\n    setShowEditSpecificationDialog(true);\r\n  };\r\n  const closeEditSpecificationDialog = () => {\r\n    setSelectedId(undefined);\r\n    setShowEditSpecificationDialog(false);\r\n  };\r\n  const [\r\n    showDeleteSpecificationDialog,\r\n    setShowDeleteSpecificationDialog,\r\n  ] = useState(false);\r\n  const openDeleteSpecificationDialog = (id) => {\r\n    setSelectedId(id);\r\n    setShowDeleteSpecificationDialog(true);\r\n  };\r\n  const closeDeleteSpecificationDialog = () => {\r\n    setSelectedId(undefined);\r\n    setShowDeleteSpecificationDialog(false);\r\n  };\r\n  const [\r\n    showDeleteSpecificationsDialog,\r\n    setShowDeleteSpecificationsDialog,\r\n  ] = useState(false);\r\n  const openDeleteSpecificationsDialog = () => {\r\n    setShowDeleteSpecificationsDialog(true);\r\n  };\r\n  const closeDeleteSpecificationsDialog = () => {\r\n    setShowDeleteSpecificationsDialog(false);\r\n  };\r\n  const [\r\n    showFetchSpecificationsDialog,\r\n    setShowFetchSpecificationsDialog,\r\n  ] = useState(false);\r\n  const openFetchSpecificationsDialog = () => {\r\n    setShowFetchSpecificationsDialog(true);\r\n  };\r\n  const closeFetchSpecificationsDialog = () => {\r\n    setShowFetchSpecificationsDialog(false);\r\n  };\r\n  const value = {\r\n    ids,\r\n    setIds,\r\n    categoryId,\r\n    setCategoryId,\r\n    queryParams,\r\n    setQueryParams,\r\n    initSpecification,\r\n    selectedId,\r\n    showEditSpecificationDialog,\r\n    openEditSpecificationDialog,\r\n    openNewSpecificationDialog,\r\n    closeEditSpecificationDialog,\r\n    showDeleteSpecificationDialog,\r\n    openDeleteSpecificationDialog,\r\n    closeDeleteSpecificationDialog,\r\n    showDeleteSpecificationsDialog,\r\n    openDeleteSpecificationsDialog,\r\n    closeDeleteSpecificationsDialog,\r\n    showFetchSpecificationsDialog,\r\n    openFetchSpecificationsDialog,\r\n    closeFetchSpecificationsDialog,\r\n  };\r\n\r\n  return (\r\n    <SpecificationsUIContext.Provider value={value}>\r\n      {children}\r\n    </SpecificationsUIContext.Provider>\r\n  );\r\n}\r\n","// Form is based on Formik\r\n// Data validation is based on Yup\r\n// Please, be familiar with article first:\r\n// https://hackernoon.com/react-form-validation-with-formik-and-yup-8b76bda62e10\r\nimport React from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport {\r\n  Select,\r\n  Input,\r\n} from \"../../../../../../../_metronic/_partials/controls\";\r\nimport { SPECIFICATIONS_DICTIONARY } from \"../SpecificationsUIHelper\";\r\n\r\n// Validation schema\r\nconst SpecificationEditSchema = Yup.object().shape({\r\n  value: Yup.string()\r\n    .min(2, \"Minimum 2 symbols\")\r\n    .max(50, \"Maximum 50 symbols\")\r\n    .required(\"Value is required\"),\r\n  specId: Yup.number().required(\"Specification type is required\"),\r\n});\r\n\r\nexport function SpecificationEditForm({\r\n  saveSpecification,\r\n  specification,\r\n  actionsLoading,\r\n  onHide,\r\n}) {\r\n  return (\r\n    <>\r\n      <Formik\r\n        enableReinitialize={true}\r\n        initialValues={specification}\r\n        validationSchema={SpecificationEditSchema}\r\n        onSubmit={(values) => {\r\n          saveSpecification(values);\r\n        }}\r\n      >\r\n        {({ handleSubmit }) => (\r\n          <>\r\n            <Modal.Body className=\"overlay overlay-block cursor-default\">\r\n              {actionsLoading && (\r\n                <div className=\"overlay-layer bg-transparent\">\r\n                  <div className=\"spinner spinner-lg spinner-success\" />\r\n                </div>\r\n              )}\r\n              <Form className=\"form form-label-right\">\r\n                <div className=\"form-group row\">\r\n                  <div className=\"col-lg-12\">\r\n                    <Select name=\"specId\" label=\"Specification Type\">\r\n                      {SPECIFICATIONS_DICTIONARY.map((spec) => (\r\n                        <option key={spec.id} value={spec.id}>\r\n                          {spec.name}\r\n                        </option>\r\n                      ))}\r\n                    </Select>\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                  <div className=\"col-lg-12\">\r\n                    <Field\r\n                      name=\"value\"\r\n                      component={Input}\r\n                      placeholder=\"Value\"\r\n                      label=\"Value\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <button\r\n                type=\"button\"\r\n                onClick={onHide}\r\n                className=\"btn btn-light btn-elevate\"\r\n              >\r\n                Cancel\r\n              </button>\r\n              <> </>\r\n              <button\r\n                type=\"submit\"\r\n                onClick={() => handleSubmit()}\r\n                className=\"btn btn-info btn-elevate\"\r\n              >\r\n                Save\r\n              </button>\r\n            </Modal.Footer>\r\n          </>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n}\r\n","/* eslint-disable no-unused-vars */\r\nimport React, { useEffect, useContext, createContext, useState, useCallback } from \"react\";\r\nimport {isEqual, isFunction} from \"lodash\";\r\nimport {initialFilter} from \"./RemarksUIHelper\";\r\n\r\nconst RemarksUIContext = createContext();\r\n\r\nexport function useRemarksUIContext() {\r\n  return useContext(RemarksUIContext);\r\n}\r\n\r\nexport const RemarksUIConsumer = RemarksUIContext.Consumer;\r\n\r\nexport function RemarksUIProvider({ currentCategoryId, children }) {\r\n  const [categoryId, setCategoryId] = useState(currentCategoryId);\r\n  const [queryParams, setQueryParamsBase] = useState(initialFilter);\r\n  const [ids, setIds] = useState([]);\r\n  const setQueryParams = useCallback(nextQueryParams => {\r\n    setQueryParamsBase(prevQueryParams => {\r\n      if (isFunction(nextQueryParams)) {\r\n        nextQueryParams = nextQueryParams(prevQueryParams);\r\n      }\r\n\r\n      if (isEqual(prevQueryParams, nextQueryParams)) {\r\n        return prevQueryParams;\r\n      }\r\n\r\n      return nextQueryParams;\r\n    });\r\n  }, []);\r\n  const [selectedId, setSelectedId] = useState(null);\r\n  const [showEditRemarkDialog, setShowEditRemarkDialog] = useState(false);\r\n  const initRemark = {\r\n    id: undefined,\r\n    text: \"\",\r\n    type: 0,\r\n    dueDate: \"01/07/2020\",\r\n    carId: categoryId\r\n  };\r\n  useEffect(()=> {\r\n    initRemark.categoryId = currentCategoryId;\r\n    initRemark.carId = currentCategoryId;\r\n    setCategoryId(currentCategoryId);\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [currentCategoryId]);\r\n  const openNewRemarkDialog = () => {\r\n    setSelectedId(undefined);\r\n    setShowEditRemarkDialog(true);\r\n  };\r\n  const openEditRemarkDialog = id => {\r\n    setSelectedId(id);\r\n    setShowEditRemarkDialog(true);\r\n  };\r\n  const closeEditRemarkDialog = () => {\r\n    setSelectedId(undefined);\r\n    setShowEditRemarkDialog(false);\r\n  };\r\n  const [showDeleteRemarkDialog, setShowDeleteRemarkDialog] = useState(false);\r\n  const openDeleteRemarkDialog = id => {\r\n    setSelectedId(id);\r\n    setShowDeleteRemarkDialog(true);\r\n  };\r\n  const closeDeleteRemarkDialog = () => {\r\n    setSelectedId(undefined);\r\n    setShowDeleteRemarkDialog(false);\r\n  };\r\n\r\n  const [showDeleteRemarksDialog, setShowDeleteRemarksDialog] = useState(false);\r\n  const openDeleteRemarksDialog = () => {\r\n    setShowDeleteRemarksDialog(true);\r\n  };\r\n  const closeDeleteRemarksDialog = () => {\r\n    setShowDeleteRemarksDialog(false);\r\n  };\r\n\r\n  const [showFetchRemarksDialog, setShowFetchRemarksDialog] = useState(false);\r\n  const openFetchRemarksDialog = () => {\r\n    setShowFetchRemarksDialog(true);\r\n  };\r\n  const closeFetchRemarksDialog = () => {\r\n    setShowFetchRemarksDialog(false);\r\n  };\r\n\r\n  const value = {\r\n    ids,\r\n    setIds,\r\n    categoryId,\r\n    setCategoryId,\r\n    queryParams,\r\n    setQueryParams,\r\n    initRemark,\r\n    selectedId,\r\n    showEditRemarkDialog,\r\n    openNewRemarkDialog,    \r\n    openEditRemarkDialog,\r\n    closeEditRemarkDialog,\r\n    showDeleteRemarkDialog,\r\n    openDeleteRemarkDialog,\r\n    closeDeleteRemarkDialog,\r\n    showDeleteRemarksDialog,\r\n    openDeleteRemarksDialog,\r\n    closeDeleteRemarksDialog,\r\n    openFetchRemarksDialog,\r\n    closeFetchRemarksDialog,\r\n    showFetchRemarksDialog\r\n  };\r\n  \r\n  return (\r\n    <RemarksUIContext.Provider value={value}>\r\n      {children}\r\n    </RemarksUIContext.Provider>\r\n  );\r\n}\r\n","// Form is based on Formik\r\n// Data validation is based on Yup\r\n// Please, be familiar with article first:\r\n// https://hackernoon.com/react-form-validation-with-formik-and-yup-8b76bda62e10\r\nimport React from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport {\r\n  Input,\r\n  Select,\r\n  DatePickerField,\r\n} from \"../../../../../../../_metronic/_partials/controls\";\r\n\r\n// Validation schema\r\nconst RemarkEditSchema = Yup.object().shape({\r\n  text: Yup.string()\r\n    .min(2, \"Minimum 2 symbols\")\r\n    .max(50, \"Maximum 50 symbols\")\r\n    .required(\"Text is required\"),\r\n  type: Yup.number().required(\"Type is required\"),\r\n  dueDate: Yup.mixed()\r\n    .nullable(false)\r\n    .required(\"Due date is required\"),\r\n});\r\n\r\nexport function RemarkEditForm({ saveRemark, remark, actionsLoading, onHide }) {\r\n  return (\r\n    <>\r\n      <Formik\r\n        enableReinitialize={true}\r\n        initialValues={remark}\r\n        validationSchema={RemarkEditSchema}\r\n        onSubmit={(values) => saveRemark(values)}\r\n      >\r\n        {({ handleSubmit }) => (\r\n          <>\r\n            <Modal.Body className=\"overlay overlay-block cursor-default\">\r\n              {actionsLoading && (\r\n                <div className=\"overlay-layer bg-transparent\">\r\n                  <div className=\"spinner spinner-lg spinner-success\" />\r\n                </div>\r\n              )}\r\n              <Form className=\"form form-label-right\">\r\n                <div className=\"form-group row\">\r\n                  <div className=\"col-lg-12\">\r\n                    <Field\r\n                      name=\"text\"\r\n                      component={Input}\r\n                      placeholder=\"Text\"\r\n                      label=\"Text\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                  <div className=\"col-lg-12\">\r\n                    <DatePickerField name=\"dueDate\" label=\"Due date\" />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                  <div className=\"col-lg-12\">\r\n                    <Select name=\"type\" label=\"Type\">\r\n                      <option value=\"0\">Info</option>\r\n                      <option value=\"1\">Note</option>\r\n                      <option value=\"2\">Reminder</option>\r\n                    </Select>\r\n                  </div>\r\n                </div>\r\n              </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <button\r\n                type=\"button\"\r\n                onClick={onHide}\r\n                className=\"btn btn-light btn-elevate\"\r\n              >\r\n                Cancel\r\n              </button>\r\n              <> </>\r\n              <button\r\n                type=\"submit\"\r\n                onClick={() => handleSubmit()}\r\n                className=\"btn btn-info btn-elevate\"\r\n              >\r\n                Save\r\n              </button>\r\n            </Modal.Footer>\r\n          </>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n}\r\n","/* eslint-disable no-script-url,jsx-a11y/anchor-is-valid,jsx-a11y/role-supports-aria-props */\r\nimport React, { useEffect, useState, useRef } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { shallowEqual, useSelector } from \"react-redux\";\r\nimport * as actions from \"../../../_redux/users/usersActions\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar,\r\n} from \"../../../../../../_metronic/_partials/controls\";\r\nimport { UserEditForm } from \"./UserEditForm\";\r\nimport { Specifications } from \"../user-specifications/Specifications\";\r\nimport { SpecificationsUIProvider } from \"../user-specifications/SpecificationsUIContext\";\r\nimport { useSubheader } from \"../../../../../../_metronic/layout\";\r\nimport { ModalProgressBar } from \"../../../../../../_metronic/_partials/controls\";\r\nimport { RemarksUIProvider } from \"../user-remarks/RemarksUIContext\";\r\nimport { Remarks } from \"../user-remarks/Remarks\";\r\nimport { ADMIN_ROUTE } from \"../../../../../pages/helper/api\";\r\nimport { Snackbar, SnackbarContent, IconButton} from \"@material-ui/core\"\r\nimport PropTypes from 'prop-types';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport { amber, green } from '@material-ui/core/colors';\r\nimport clsx from 'clsx';\r\nimport {\r\n    Delete as DeleteIcon, Close as CloseIcon, CheckCircle as CheckCircleIcon, Error as ErrorIcon, Info as InfoIcon,\r\n    Warning as WarningIcon\r\n} from '@material-ui/icons'\r\n\r\n\r\nconst variantIcon = {\r\n  success: CheckCircleIcon,\r\n  warning: WarningIcon,\r\n  error: ErrorIcon,\r\n  info: InfoIcon,\r\n};\r\n\r\nconst useStylesSnackbarContent = makeStyles(theme => ({\r\n  success: {\r\n    backgroundColor: green[600],\r\n  },\r\n  error: {\r\n    backgroundColor: theme.palette.error.dark,\r\n  },\r\n  info: {\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n  warning: {\r\n    backgroundColor: amber[700],\r\n  },\r\n  icon: {\r\n    fontSize: 20,\r\n  },\r\n  iconVariant: {\r\n    opacity: 0.9,\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  message: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n}));\r\n\r\nfunction SnackbarContentWrapper(props) {\r\n  const classes = useStylesSnackbarContent();\r\n  const { className, message, onClose, variant, ...other } = props;\r\n  const Icon = variantIcon[variant];\r\n\r\n  return (\r\n    <SnackbarContent\r\n      className={clsx(classes[variant], className)}\r\n      aria-describedby=\"client-snackbar\"\r\n      message={\r\n        <span id=\"client-snackbar\" className={classes.message}>\r\n          {/* <Icon className={clsx(classes.icon, classes.iconVariant)} /> */}\r\n          {message}\r\n        </span>\r\n      }\r\n      action={[\r\n        <IconButton key=\"close\" aria-label=\"close\" color=\"inherit\" onClick={onClose}>\r\n          <CloseIcon className={classes.icon} />\r\n        </IconButton>,\r\n      ]}\r\n      {...other}\r\n    />\r\n  );\r\n}\r\n\r\nSnackbarContentWrapper.propTypes = {\r\n  className: PropTypes.string,\r\n  message: PropTypes.string,\r\n  onClose: PropTypes.func,\r\n  variant: PropTypes.oneOf(['error', 'info', 'success', 'warning']).isRequired,\r\n};\r\n\r\n\r\nconst initUser = {\r\n  id: undefined,\r\n  first_name: \"\",\r\n  last_name: \"\",\r\n  email: \"\",\r\n  password: \"\",\r\n \r\n};\r\n\r\nexport function UserEdit({\r\n  history,\r\n  match: {\r\n    params: { id },\r\n  },\r\n}) {\r\n  // Subheader\r\n  const suhbeader = useSubheader();\r\n\r\n  // Tabs\r\n  const [tab, setTab] = useState(\"basic\");\r\n  const [title, setTitle] = useState(\"\");\r\n  const [message, setMessage] = useState('');\r\n  const [messageType, setMessageType] = useState('success');\r\n  const [open, setOpen] = useState(false);\r\n  const dispatch = useDispatch();\r\n  // const layoutDispatch = useContext(LayoutContext.Dispatch);\r\n  const { actionsLoading, userForEdit } = useSelector(\r\n    (state) => ({\r\n      actionsLoading: state.users.actionsLoading,\r\n      userForEdit: state.users.userForEdit,\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(actions.fetchUser(id));\r\n  }, [id, dispatch]);\r\n\r\n  useEffect(() => {\r\n    let _title = id ? \"\" : \"New User\";\r\n    if (userForEdit && id) {\r\n      _title = `Edit user - ${userForEdit.first_name} ${userForEdit.last_name}`;\r\n    }\r\n\r\n    setTitle(_title);\r\n    suhbeader.setTitle(_title);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [userForEdit, id]);\r\n\r\n  const saveUser = (values) => {\r\n    \r\n    if (!id) {\r\n      dispatch(actions.createUser(values)).then((response) => {\r\n        if(response){\r\n          setOpen(true)\r\n          setMessage(\"Can't create user\")\r\n          setMessageType('error')\r\n        }else{\r\n          backToUsersList()\r\n        }\r\n      });\r\n    } else {\r\n\r\n      dispatch(actions.updateUser(values)).then((response) => {\r\n        if(response){\r\n          setOpen(true)\r\n          setMessage(\"Can't update user\")\r\n          setMessageType('error')\r\n        }else{\r\n          backToUsersList()\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const btnRef = useRef();  \r\n  const saveUserClick = () => {\r\n    if (btnRef && btnRef.current) {\r\n      btnRef.current.click();\r\n    }\r\n  };\r\n\r\n  const backToUsersList = () => {\r\n    history.push(`/${ADMIN_ROUTE}/users`);\r\n  };\r\n\r\n  const handleCloseSnackbar = (event, reason) => {\r\n    setOpen(false);\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      {actionsLoading && <ModalProgressBar />}\r\n      <CardHeader title={title}>\r\n        <CardHeaderToolbar>\r\n          <button\r\n            type=\"button\"\r\n            onClick={backToUsersList}\r\n            className=\"btn btn-light\"\r\n          >\r\n            <i className=\"fa fa-arrow-left\"></i>\r\n            Back\r\n          </button>\r\n          {`  `}\r\n          <button\r\n            type=\"submit\"\r\n            className=\"btn btn-info ml-2\"\r\n            onClick={saveUserClick}\r\n          >\r\n            Save\r\n          </button>\r\n        </CardHeaderToolbar>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <div className=\"mt-5\">\r\n            <UserEditForm\r\n              actionsLoading={actionsLoading}\r\n              user={userForEdit || initUser}\r\n              btnRef={btnRef}\r\n              saveUser={saveUser}\r\n            />\r\n            <Snackbar\r\n            anchorOrigin={{\r\n              vertical: 'top',\r\n              horizontal: 'right',\r\n            }}\r\n            open={open}\r\n            autoHideDuration={3000}\r\n            onClose={handleCloseSnackbar}\r\n          >\r\n            <SnackbarContentWrapper\r\n              onClose={handleCloseSnackbar}\r\n              variant={messageType}\r\n              message={message}\r\n            />\r\n        </Snackbar>\r\n        </div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n}\r\n","import React, { Suspense } from \"react\";\r\nimport { Redirect, Switch } from \"react-router-dom\";\r\nimport { UsersPage } from \"./UsersPage\";\r\nimport { UserEdit } from \"./user-edit/UserEdit\";\r\nimport { LayoutSplashScreen, ContentRoute } from \"../../../../../_metronic/layout\";\r\nimport { ADMIN_ROUTE } from '../../../../pages/helper/api'\r\n\r\nexport default function UsersPages() {\r\n  return (\r\n    <Suspense fallback={<LayoutSplashScreen />}>\r\n      <Switch>\r\n        <ContentRoute\r\n          path={\"/\" + ADMIN_ROUTE + \"/users/new\"}\r\n          component={UserEdit}\r\n        />\r\n        <ContentRoute\r\n          path={\"/\" + ADMIN_ROUTE + \"/users/:id/edit\"}\r\n          component={UserEdit}\r\n        />\r\n        <ContentRoute\r\n          path={\"/\" + ADMIN_ROUTE + \"/users\"}\r\n          component={UsersPage}\r\n        />\r\n      </Switch>\r\n    </Suspense>\r\n  );\r\n}\r\n"],"sourceRoot":""}