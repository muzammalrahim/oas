{"version":3,"sources":["app/modules/UserProfile/CreateUser.js"],"names":["initialValues","first_name","email","last_name","password","injectIntl","connect","auth","props","intl","useState","loading","setLoading","RegistrationSchema","Yup","shape","min","max","required","formatMessage","id","disableLoading","getInputClasses","fieldname","formik","touched","errors","useFormik","validationSchema","onSubmit","values","setStatus","setSubmitting","register","then","history","push","ADMIN_ROUTE","catch","className","style","display","backgroundColor","handleSubmit","status","placeholder","type","name","getFieldProps","disabled","isSubmitting","isValid","to"],"mappings":"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","file":"static/js/13.12ff4606.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport { connect } from \"react-redux\";\r\nimport * as Yup from \"yup\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport * as auth from \"../Auth/_redux/authRedux\";\r\nimport { register } from \"../Auth/_redux/authCrud\";\r\nimport { ADMIN_ROUTE } from \"../../pages/helper/api\";\r\n\r\nconst initialValues = {\r\n  first_name: \"\",\r\n  email: \"\",\r\n  last_name: \"\",\r\n  password: \"\",\r\n//   changepassword: \"\",\r\n//   acceptTerms: false,\r\n};\r\n\r\nfunction Registration(props) {\r\n  const { intl } = props;\r\n  const [loading, setLoading] = useState(false);\r\n  const RegistrationSchema = Yup.object().shape({\r\n    first_name: Yup.string()\r\n      .min(3, \"Minimum 3 symbols\")\r\n      .max(50, \"Maximum 50 symbols\")\r\n      .required(\r\n        intl.formatMessage({\r\n          id: \"AUTH.VALIDATION.REQUIRED_FIELD\",\r\n        })\r\n      ),\r\n    email: Yup.string()\r\n      .email(\"Wrong email format\")\r\n      .min(3, \"Minimum 3 symbols\")\r\n      .max(50, \"Maximum 50 symbols\")\r\n      .required(\r\n        intl.formatMessage({\r\n          id: \"AUTH.VALIDATION.REQUIRED_FIELD\",\r\n        })\r\n      ),\r\n    first_name: Yup.string()\r\n      .min(3, \"Minimum 3 symbols\")\r\n      .max(50, \"Maximum 50 symbols\")\r\n      .required(\r\n        intl.formatMessage({\r\n          id: \"AUTH.VALIDATION.REQUIRED_FIELD\",\r\n        })\r\n      ),\r\n    password: Yup.string()\r\n      .min(3, \"Minimum 3 symbols\")\r\n      .max(50, \"Maximum 50 symbols\")\r\n      .required(\r\n        intl.formatMessage({\r\n          id: \"AUTH.VALIDATION.REQUIRED_FIELD\",\r\n        })\r\n      ),\r\n  });\r\n\r\n  const enableLoading = () => {\r\n    setLoading(true);\r\n  };\r\n\r\n  const disableLoading = () => {\r\n    setLoading(false);\r\n  };\r\n\r\n  const getInputClasses = (fieldname) => {\r\n    if (formik.touched[fieldname] && formik.errors[fieldname]) {\r\n      return \"is-invalid\";\r\n    }\r\n\r\n    if (formik.touched[fieldname] && !formik.errors[fieldname]) {\r\n      return \"is-valid\";\r\n    }\r\n\r\n    return \"\";\r\n  };\r\n\r\n  const formik = useFormik({\r\n    initialValues,\r\n    validationSchema: RegistrationSchema,\r\n      onSubmit: (values, { setStatus, setSubmitting }) => {\r\n      setSubmitting(true);\r\n      enableLoading();\r\n      register(values.email, values.first_name, values.last_name, values.password)\r\n        .then(( ) => {\r\n          props.history.push(`/${ADMIN_ROUTE}/`);\r\n          disableLoading();\r\n          setSubmitting(false);\r\n        })\r\n        .catch(() => {\r\n          setSubmitting(false);\r\n          setStatus(\r\n            intl.formatMessage({\r\n              id: \"AUTH.VALIDATION.INVALID_LOGIN\",\r\n            })\r\n          );\r\n          disableLoading();\r\n        });\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div className=\"login-form login-signin\" style={{ display: \"block\", backgroundColor:\"white\" }}>\r\n      <div className=\"text-center mb-10 mb-lg-20\">\r\n        <h3 className=\"font-size-h1\">\r\n          <FormattedMessage id=\"AUTH.REGISTER.TITLE\" />\r\n        </h3>\r\n      </div>\r\n      <div className=\"col-md-12 col-lg-12\">\r\n      <form\r\n        id=\"kt_login_signin_form\"\r\n        className=\"form fv-plugins-bootstrap fv-plugins-framework animated animate__animated animate__backInUp\"\r\n        onSubmit={formik.handleSubmit}\r\n      >\r\n        {/* begin: Alert */}\r\n        {formik.status && (\r\n          <div className=\"mb-10 alert alert-custom alert-light-danger alert-dismissible\">\r\n            <div className=\"alert-text font-weight-bold\">{formik.status}</div>\r\n          </div>\r\n        )}\r\n        {/* end: Alert */}\r\n\r\n        {/* begin: Fullname */}\r\n        <div className=\"form-group fv-plugins-icon-container\">\r\n          <input\r\n            placeholder=\"First Name\"\r\n            type=\"text\"\r\n            className={`form-control form-control-solid h-auto py-5 px-6 ${getInputClasses(\r\n              \"first_name\"\r\n            )}`}\r\n            name=\"first_name\"\r\n            {...formik.getFieldProps(\"first_name\")}\r\n          />\r\n          {formik.touched.first_name && formik.errors.first_name ? (\r\n            <div className=\"fv-plugins-message-container\">\r\n              <div className=\"fv-help-block\">{formik.errors.first_name}</div>\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n              {/* end: Fullname */}\r\n              \r\n            {/* begin: Username */}\r\n            <div className=\"form-group fv-plugins-icon-container\">\r\n              <input\r\n                placeholder=\"Last Name\"\r\n                type=\"text\"\r\n                className={`form-control form-control-solid h-auto py-5 px-6 ${getInputClasses(\r\n                  \"last_name\"\r\n                )}`}\r\n                name=\"last_name\"\r\n                {...formik.getFieldProps(\"last_name\")}\r\n              />\r\n              {formik.touched.last_name && formik.errors.last_name ? (\r\n                <div className=\"fv-plugins-message-container\">\r\n                  <div className=\"fv-help-block\">{formik.errors.last_name}</div>\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n            {/* end: Username */}\r\n\r\n        {/* begin: Email */}\r\n        <div className=\"form-group fv-plugins-icon-container\">\r\n          <input\r\n            placeholder=\"Email\"\r\n            type=\"email\"\r\n            className={`form-control form-control-solid h-auto py-5 px-6 ${getInputClasses(\r\n              \"email\"\r\n            )}`}\r\n            name=\"email\"\r\n            {...formik.getFieldProps(\"email\")}\r\n          />\r\n          {formik.touched.email && formik.errors.email ? (\r\n            <div className=\"fv-plugins-message-container\">\r\n              <div className=\"fv-help-block\">{formik.errors.email}</div>\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n        {/* end: Email */}\r\n\r\n\r\n        {/* begin: Password */}\r\n        <div className=\"form-group fv-plugins-icon-container\">\r\n          <input\r\n            placeholder=\"Password\"\r\n            type=\"password\"\r\n            className={`form-control form-control-solid h-auto py-5 px-6 ${getInputClasses(\r\n              \"password\"\r\n            )}`}\r\n            name=\"password\"\r\n            {...formik.getFieldProps(\"password\")}\r\n          />\r\n          {formik.touched.password && formik.errors.password ? (\r\n            <div className=\"fv-plugins-message-container\">\r\n              <div className=\"fv-help-block\">{formik.errors.password}</div>\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n        {/* end: Password */}\r\n\r\n        <div className=\"form-group d-flex flex-wrap flex-center\">\r\n          <button\r\n            type=\"submit\"\r\n            disabled={\r\n              formik.isSubmitting ||\r\n              !formik.isValid \r\n            //   !formik.values.acceptTerms\r\n            }\r\n            className=\"btn btn-primary font-weight-bold px-9 py-4 my-3 mx-4\"\r\n          >\r\n            <span>Submit</span>\r\n            {loading && <span className=\"ml-3 spinner spinner-white\"></span>}\r\n          </button>\r\n\r\n          <Link to={`/${ADMIN_ROUTE}/dashboard`}>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-light-primary font-weight-bold px-9 py-4 my-3 mx-4\"\r\n            >\r\n              Cancel\r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </form></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, auth.actions)(Registration));\r\n"],"sourceRoot":""}