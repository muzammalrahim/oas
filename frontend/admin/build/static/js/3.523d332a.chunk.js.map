{"version":3,"sources":["app/modules/ECommerce/pages/products/product-edit/ProductEditForm.js","app/modules/ECommerce/pages/products/product-specifications/SpecificationsUIHelper.js","app/modules/ECommerce/pages/products/product-specifications/SpecificationsUIContext.js","app/modules/ECommerce/pages/products/product-specifications/SpecificationsFilter.js","app/modules/ECommerce/_redux/specifications/specificationsActions.js","app/modules/ECommerce/_redux/specifications/specificationsCrud.js","app/modules/ECommerce/pages/products/product-specifications/column-formatters/ActionsColumnFormatter.js","app/modules/ECommerce/pages/products/product-specifications/SpecificationsTable.js","app/modules/ECommerce/pages/products/product-specifications/SpecificationsLoadingDialog.js","app/modules/ECommerce/pages/products/product-specifications/SpecificationsDeleteDialog.js","app/modules/ECommerce/pages/products/product-specifications/SpecificationDeleteDialog.js","app/modules/ECommerce/pages/products/product-specifications/SpecificationsFetchDialog.js","app/modules/ECommerce/pages/products/product-specifications/SpecificationsGrouping.js","app/modules/ECommerce/pages/products/product-specifications/specification-edit-dialog/SpecificationEditDialogHeader.js","app/modules/ECommerce/pages/products/product-specifications/specification-edit-dialog/SpecificationEditForm.js","app/modules/ECommerce/pages/products/product-specifications/specification-edit-dialog/SpecificationEditDialog.js","app/modules/ECommerce/pages/products/product-specifications/Specifications.js","app/modules/ECommerce/pages/products/product-remarks/RemarksUIHelper.js","app/modules/ECommerce/pages/products/product-remarks/RemarksUIContext.js","app/modules/ECommerce/pages/products/product-remarks/RemarksFilter.js","app/modules/ECommerce/_redux/remarks/remarksActions.js","app/modules/ECommerce/_redux/remarks/remarksCrud.js","app/modules/ECommerce/pages/products/product-remarks/column-formatters/ActionsColumnFormatter.js","app/modules/ECommerce/pages/products/product-remarks/RemarksTable.js","app/modules/ECommerce/pages/products/product-remarks/RemarksLoadingDialog.js","app/modules/ECommerce/pages/products/product-remarks/RemarksDeleteDialog.js","app/modules/ECommerce/pages/products/product-remarks/RemarkDeleteDialog.js","app/modules/ECommerce/pages/products/product-remarks/RemarksFetchDialog.js","app/modules/ECommerce/pages/products/product-remarks/RemarksGrouping.js","app/modules/ECommerce/pages/products/product-remarks/remark-edit-dialog/RemarkEditDialogHeader.js","app/modules/ECommerce/pages/products/product-remarks/remark-edit-dialog/RemarkEditForm.js","app/modules/ECommerce/pages/products/product-remarks/remark-edit-dialog/RemarkEditDialog.js","app/modules/ECommerce/pages/products/product-remarks/Remarks.js","app/modules/ECommerce/pages/products/product-edit/ProductEdit.js","app/modules/ECommerce/pages/eCommercePage.js"],"names":["ProductEditSchema","Yup","shape","model","min","max","required","manufacture","modelYear","mileage","color","price","VINCode","ProductEditForm","product","btnRef","saveProduct","enableReinitialize","initialValues","validationSchema","onSubmit","values","handleSubmit","className","name","component","Input","placeholder","label","AVAILABLE_MANUFACTURES","map","key","value","type","AVAILABLE_COLORS","customFeedbackLabel","ProductStatusTitles","status","index","ProductConditionTitles","condition","as","style","display","ref","defaultSorted","dataField","order","sizePerPageList","text","initialFilter","filter","sortOrder","sortField","pageNumber","pageSize","SPECIFICATIONS_DICTIONARY","id","SpecificationsUIContext","createContext","useSpecificationsUIContext","useContext","Consumer","SpecificationsUIProvider","currentProductId","children","useState","productId","setProductId","queryParams","setQueryParamsBase","ids","setIds","setQueryParams","useCallback","nextQueryParams","prevQueryParams","isFunction","isEqual","selectedId","setSelectedId","initSpecification","undefined","specId","carId","useEffect","showEditSpecificationDialog","setShowEditSpecificationDialog","showDeleteSpecificationDialog","setShowDeleteSpecificationDialog","showDeleteSpecificationsDialog","setShowDeleteSpecificationsDialog","showFetchSpecificationsDialog","setShowFetchSpecificationsDialog","openEditSpecificationDialog","openNewSpecificationDialog","closeEditSpecificationDialog","openDeleteSpecificationDialog","closeDeleteSpecificationDialog","openDeleteSpecificationsDialog","closeDeleteSpecificationsDialog","openFetchSpecificationsDialog","closeFetchSpecificationsDialog","Provider","SpecificationsFilter","specsUIContext","specsUIProps","useMemo","applyFilter","newQueryParams","searchText","prepareFilter","handleBlur","setFieldValue","handleChange","onBlur","onChange","e","target","onClick","actions","specificationsSlice","fetchSpecifications","dispatch","startCall","callType","callTypes","list","axios","post","requestFromServer","then","response","data","totalCount","entities","specificationsFetched","catch","error","clientMessage","catchError","fetchSpecification","action","specificationId","get","specification","specificationFetched","specificationForEdit","deleteSpecification","delete","specificationDeleted","createSpecification","specificationForCreation","specificationCreated","updateSpecification","put","specificationUpdated","deleteSpecifications","specificationsDeleted","ActionsColumnFormatter","cellContent","row","rowIndex","OverlayTrigger","overlay","Tooltip","src","toAbsoluteUrl","SpecificationsTable","currentState","useSelector","state","specifications","shallowEqual","listLoading","useDispatch","columns","sort","sortCaret","formatter","formatExtraData","classes","headerClasses","minWidth","paginationOptions","custom","totalSize","uiHelpers","sizePerPage","page","pagination","paginationFactory","paginationProps","paginationTableProps","isLoading","wrapperClasses","bordered","bootstrap4","remote","keyField","onTableChange","getHandlerTableChange","selectRow","getSelectRow","SpecificationsLoadingDialog","SpecificationsDeleteDialog","show","onHide","actionsLoading","length","Modal","aria-labelledby","variant","Header","closeButton","Title","Body","Footer","SpecificationDeleteDialog","selectedSpecifications","_specifications","forEach","find","el","push","SpecificationsFetchDialog","width","SpecificationsGrouping","SpecificationEditDialogHeader","title","setTitle","_title","SpecificationEditSchema","SpecificationEditForm","saveSpecification","spec","SpecificationEditDialog","Specifications","RemarksUIContext","useRemarksUIContext","RemarksUIProvider","showEditRemarkDialog","setShowEditRemarkDialog","initRemark","dueDate","showDeleteRemarkDialog","setShowDeleteRemarkDialog","showDeleteRemarksDialog","setShowDeleteRemarksDialog","showFetchRemarksDialog","setShowFetchRemarksDialog","openNewRemarkDialog","openEditRemarkDialog","closeEditRemarkDialog","openDeleteRemarkDialog","closeDeleteRemarkDialog","openDeleteRemarksDialog","closeDeleteRemarksDialog","openFetchRemarksDialog","closeFetchRemarksDialog","RemarksFilter","remarksUIContext","remarksUIProps","remarksSlice","fetchRemarks","remarksFetched","fetchRemark","remarkId","remark","remarkFetched","remarkForEdit","deleteRemark","remarkDeleted","createRemark","remarkForCreation","remarkCreated","updateRemark","remarkUpdated","deleteRemarks","console","log","remarksDeleted","RemarksTable","remarks","RemarksLoadingDialog","RemarksDeleteDialog","RemarkDeleteDialog","selectedRemarks","_remarks","RemarksFetchDialog","RemarksGrouping","RemarkEditDialogHeader","RemarkEditSchema","nullable","RemarkEditForm","saveRemark","RemarkEditDialog","date","year","getFullYear","month","getMonth","toString","day","getDate","getFormattedDate","Remarks","initProduct","description","ProductEdit","history","match","params","suhbeader","useSubheader","tab","setTab","products","productForEdit","useRef","backToProductsList","current","click","role","data-toggle","aria-selected","eCommercePage","fallback","exact","from","ADMIN_ROUTE","to","path","CustomersPage","ProductsPage"],"mappings":"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","file":"static/js/3.523d332a.chunk.js","sourcesContent":["// Form is based on Formik\r\n// Data validation is based on Yup\r\n// Please, be familiar with article first:\r\n// https://hackernoon.com/react-form-validation-with-formik-and-yup-8b76bda62e10\r\nimport React from \"react\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { Input, Select } from \"../../../../../../_metronic/_partials/controls\";\r\nimport {\r\n  AVAILABLE_COLORS,\r\n  AVAILABLE_MANUFACTURES,\r\n  ProductStatusTitles,\r\n  ProductConditionTitles,\r\n} from \"../ProductsUIHelpers\";\r\n\r\n// Validation schema\r\nconst ProductEditSchema = Yup.object().shape({\r\n  model: Yup.string()\r\n    .min(2, \"Minimum 2 symbols\")\r\n    .max(50, \"Maximum 50 symbols\")\r\n    .required(\"Model is required\"),\r\n  manufacture: Yup.string()\r\n    .min(2, \"Minimum 2 symbols\")\r\n    .max(50, \"Maximum 50 symbols\")\r\n    .required(\"Manufacture is required\"),\r\n  modelYear: Yup.number()\r\n    .min(1950, \"1950 is minimum\")\r\n    .max(2020, \"2020 is maximum\")\r\n    .required(\"Model year is required\"),\r\n  mileage: Yup.number()\r\n    .min(0, \"0 is minimum\")\r\n    .max(1000000, \"1000000 is maximum\")\r\n    .required(\"Mileage is required\"),\r\n  color: Yup.string().required(\"Color is required\"),\r\n  price: Yup.number()\r\n    .min(1, \"$1 is minimum\")\r\n    .max(1000000, \"$1000000 is maximum\")\r\n    .required(\"Price is required\"),\r\n  VINCode: Yup.string().required(\"VINCode is required\"),\r\n});\r\n\r\nexport function ProductEditForm({\r\n  product,\r\n  btnRef,\r\n  saveProduct,\r\n}) {\r\n  return (\r\n    <>\r\n      <Formik\r\n        enableReinitialize={true}\r\n        initialValues={product}\r\n        validationSchema={ProductEditSchema}\r\n        onSubmit={(values) => {\r\n          saveProduct(values);\r\n        }}\r\n      >\r\n        {({ handleSubmit }) => (\r\n          <>\r\n            <Form className=\"form form-label-right\">\r\n              <div className=\"form-group row\">\r\n                <div className=\"col-lg-4\">\r\n                  <Field\r\n                    name=\"model\"\r\n                    component={Input}\r\n                    placeholder=\"Model\"\r\n                    label=\"Model\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-lg-4\">\r\n                  <Select name=\"manufacture\" label=\"Manufacture\">\r\n                    {AVAILABLE_MANUFACTURES.map((manufacture) => (\r\n                      <option key={manufacture} value={manufacture}>\r\n                        {manufacture}\r\n                      </option>\r\n                    ))}\r\n                  </Select>\r\n                </div>\r\n                <div className=\"col-lg-4\">\r\n                  <Field\r\n                    type=\"number\"\r\n                    name=\"modelYear\"\r\n                    component={Input}\r\n                    placeholder=\"Model year\"\r\n                    label=\"Model year\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"form-group row\">\r\n                <div className=\"col-lg-4\">\r\n                  <Field\r\n                    type=\"number\"\r\n                    name=\"mileage\"\r\n                    component={Input}\r\n                    placeholder=\"Mileage\"\r\n                    label=\"Mileage\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-lg-4\">\r\n                  <Select name=\"color\" label=\"Color\">\r\n                    {AVAILABLE_COLORS.map((color) => (\r\n                      <option key={color} value={color}>\r\n                        {color}\r\n                      </option>\r\n                    ))}\r\n                  </Select>\r\n                </div>\r\n                <div className=\"col-lg-4\">\r\n                  <Field\r\n                    type=\"number\"\r\n                    name=\"price\"\r\n                    component={Input}\r\n                    placeholder=\"Price\"\r\n                    label=\"Price ($)\"\r\n                    customFeedbackLabel=\"Please enter Price\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"form-group row\">\r\n                <div className=\"col-lg-4\">\r\n                  <Field\r\n                    name=\"VINCode\"\r\n                    component={Input}\r\n                    placeholder=\"VIN code\"\r\n                    label=\"VIN code\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-lg-4\">\r\n                  <Select name=\"status\" label=\"Status\">\r\n                    {ProductStatusTitles.map((status, index) => (\r\n                      <option key={status} value={index}>\r\n                        {status}\r\n                      </option>\r\n                    ))}\r\n                  </Select>\r\n                </div>\r\n                <div className=\"col-lg-4\">\r\n                  <Select name=\"condition\" label=\"Condition\">\r\n                    {ProductConditionTitles.map((condition, index) => (\r\n                      <option key={condition} value={index}>\r\n                        {condition}\r\n                      </option>\r\n                    ))}\r\n                  </Select>\r\n                </div>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>Description</label>\r\n                <Field\r\n                  name=\"description\"\r\n                  as=\"textarea\"\r\n                  className=\"form-control\"\r\n                />\r\n              </div>\r\n              <button\r\n                type=\"submit\"\r\n                style={{ display: \"none\" }}\r\n                ref={btnRef}\r\n                onSubmit={() => handleSubmit()}\r\n              ></button>\r\n            </Form>\r\n          </>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n}\r\n","export const defaultSorted = [{ dataField: \"id\", order: \"asc\" }];\r\nexport const sizePerPageList = [\r\n  { text: \"1\", value: 1 },\r\n  { text: \"3\", value: 3 },\r\n  { text: \"5\", value: 5 },\r\n];\r\nexport const initialFilter = {\r\n  filter: {\r\n    value: \"\",\r\n  },\r\n  sortOrder: \"asc\", // asc||desc\r\n  sortField: \"name\",\r\n  pageNumber: 1,\r\n  pageSize: 5,\r\n};\r\n\r\nexport const SPECIFICATIONS_DICTIONARY = [\r\n  { id: 0, name: \"Seats\" },\r\n  { id: 1, name: \"Fuel Type\" },\r\n  { id: 2, name: \"Stock\" },\r\n  { id: 3, name: \"Door count\" },\r\n  { id: 4, name: \"Engine\" },\r\n  { id: 5, name: \"Transmission\" },\r\n  { id: 6, name: \"Drivetrain\" },\r\n  { id: 7, name: \"Combined MPG\" },\r\n  { id: 8, name: \"Warranty\" },\r\n  { id: 9, name: \"Wheels\" },\r\n];\r\n","/* eslint-disable no-unused-vars */\r\nimport React, {\r\n  useEffect,\r\n  useContext,\r\n  createContext,\r\n  useState,\r\n  useCallback,\r\n} from \"react\";\r\nimport { isEqual, isFunction } from \"lodash\";\r\nimport { initialFilter } from \"./SpecificationsUIHelper\";\r\n\r\nconst SpecificationsUIContext = createContext();\r\n\r\nexport function useSpecificationsUIContext() {\r\n  return useContext(SpecificationsUIContext);\r\n}\r\n\r\nexport const SpecificationsUIConsumer = SpecificationsUIContext.Consumer;\r\n\r\nexport function SpecificationsUIProvider({ currentProductId, children }) {\r\n  const [productId, setProductId] = useState(currentProductId);\r\n  const [queryParams, setQueryParamsBase] = useState(initialFilter);\r\n  const [ids, setIds] = useState([]);\r\n  const setQueryParams = useCallback((nextQueryParams) => {\r\n    setQueryParamsBase((prevQueryParams) => {\r\n      if (isFunction(nextQueryParams)) {\r\n        nextQueryParams = nextQueryParams(prevQueryParams);\r\n      }\r\n\r\n      if (isEqual(prevQueryParams, nextQueryParams)) {\r\n        return prevQueryParams;\r\n      }\r\n\r\n      return nextQueryParams;\r\n    });\r\n  }, []);\r\n  const [selectedId, setSelectedId] = useState(null);\r\n  const initSpecification = {\r\n    id: undefined,\r\n    value: \"\",\r\n    specId: 0,\r\n    carId: productId,\r\n  };\r\n  useEffect(() => {\r\n    initSpecification.carId = currentProductId;\r\n    initSpecification.productId = currentProductId;\r\n    setProductId(currentProductId);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [currentProductId]);\r\n  const [\r\n    showEditSpecificationDialog,\r\n    setShowEditSpecificationDialog,\r\n  ] = useState(false);\r\n  const openNewSpecificationDialog = () => {\r\n    setSelectedId(undefined);\r\n    setShowEditSpecificationDialog(true);\r\n  };\r\n  const openEditSpecificationDialog = (id) => {\r\n    setSelectedId(id);\r\n    setShowEditSpecificationDialog(true);\r\n  };\r\n  const closeEditSpecificationDialog = () => {\r\n    setSelectedId(undefined);\r\n    setShowEditSpecificationDialog(false);\r\n  };\r\n  const [\r\n    showDeleteSpecificationDialog,\r\n    setShowDeleteSpecificationDialog,\r\n  ] = useState(false);\r\n  const openDeleteSpecificationDialog = (id) => {\r\n    setSelectedId(id);\r\n    setShowDeleteSpecificationDialog(true);\r\n  };\r\n  const closeDeleteSpecificationDialog = () => {\r\n    setSelectedId(undefined);\r\n    setShowDeleteSpecificationDialog(false);\r\n  };\r\n  const [\r\n    showDeleteSpecificationsDialog,\r\n    setShowDeleteSpecificationsDialog,\r\n  ] = useState(false);\r\n  const openDeleteSpecificationsDialog = () => {\r\n    setShowDeleteSpecificationsDialog(true);\r\n  };\r\n  const closeDeleteSpecificationsDialog = () => {\r\n    setShowDeleteSpecificationsDialog(false);\r\n  };\r\n  const [\r\n    showFetchSpecificationsDialog,\r\n    setShowFetchSpecificationsDialog,\r\n  ] = useState(false);\r\n  const openFetchSpecificationsDialog = () => {\r\n    setShowFetchSpecificationsDialog(true);\r\n  };\r\n  const closeFetchSpecificationsDialog = () => {\r\n    setShowFetchSpecificationsDialog(false);\r\n  };\r\n  const value = {\r\n    ids,\r\n    setIds,\r\n    productId,\r\n    setProductId,\r\n    queryParams,\r\n    setQueryParams,\r\n    initSpecification,\r\n    selectedId,\r\n    showEditSpecificationDialog,\r\n    openEditSpecificationDialog,\r\n    openNewSpecificationDialog,\r\n    closeEditSpecificationDialog,\r\n    showDeleteSpecificationDialog,\r\n    openDeleteSpecificationDialog,\r\n    closeDeleteSpecificationDialog,\r\n    showDeleteSpecificationsDialog,\r\n    openDeleteSpecificationsDialog,\r\n    closeDeleteSpecificationsDialog,\r\n    showFetchSpecificationsDialog,\r\n    openFetchSpecificationsDialog,\r\n    closeFetchSpecificationsDialog,\r\n  };\r\n\r\n  return (\r\n    <SpecificationsUIContext.Provider value={value}>\r\n      {children}\r\n    </SpecificationsUIContext.Provider>\r\n  );\r\n}\r\n","import React, { useMemo } from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport { isEqual } from \"lodash\";\r\nimport { useSpecificationsUIContext } from \"./SpecificationsUIContext\";\r\n\r\nconst prepareFilter = (queryParams, values) => {\r\n  const { searchText } = values;\r\n  const newQueryParams = { ...queryParams };\r\n  const filter = {};\r\n  filter.value = searchText;\r\n  if (searchText) {\r\n    filter.name = searchText;\r\n  }\r\n  newQueryParams.filter = filter;\r\n  return newQueryParams;\r\n};\r\n\r\nexport function SpecificationsFilter() {\r\n  // Specs UI Context\r\n  const specsUIContext = useSpecificationsUIContext();\r\n  const specsUIProps = useMemo(() => {\r\n    return {\r\n      openNewSpecificationDialog: specsUIContext.openNewSpecificationDialog,\r\n      setQueryParams: specsUIContext.setQueryParams,\r\n      queryParams: specsUIContext.queryParams,\r\n    };\r\n  }, [specsUIContext]);\r\n\r\n  const applyFilter = (values) => {\r\n    const newQueryParams = prepareFilter(specsUIProps.queryParams, values);\r\n    if (!isEqual(newQueryParams, specsUIProps.queryParams)) {\r\n      newQueryParams.pageNumber = 1;\r\n      specsUIProps.setQueryParams(newQueryParams);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"form-filtration\">\r\n        <div className=\"row align-items-center\">\r\n          <div className=\"col-md-2 margin-bottom-10-mobile\">\r\n            <Formik\r\n              initialValues={{\r\n                searchText: \"\",\r\n              }}\r\n              onSubmit={(values) => {\r\n                applyFilter(values);\r\n              }}\r\n            >\r\n              {({\r\n                values,\r\n                handleSubmit,\r\n                handleBlur,\r\n                handleChange,\r\n                setFieldValue,\r\n              }) => (\r\n                <form onSubmit={handleSubmit}>\r\n                  <div>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      name=\"searchText\"\r\n                      placeholder=\"Search\"\r\n                      onBlur={handleBlur}\r\n                      value={values.searchText}\r\n                      onChange={(e) => {\r\n                        setFieldValue(\"searchText\", e.target.value);\r\n                        handleSubmit();\r\n                      }}\r\n                    />\r\n                    <small className=\"form-text text-muted\">\r\n                      <b>Search</b> in all fields\r\n                    </small>\r\n                  </div>\r\n                </form>\r\n              )}\r\n            </Formik>\r\n          </div>\r\n          <div className=\"col-md-7 margin-bottom-10-mobile\"></div>\r\n          <div className=\"col-md-3 text-right margin-bottom-10-mobile\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary\"\r\n              onClick={() => specsUIProps.openNewSpecificationDialog()}\r\n            >\r\n              Create new specification\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import * as requestFromServer from \"./specificationsCrud\";\r\nimport {specificationsSlice, callTypes} from \"./specificationsSlice\";\r\n\r\nconst {actions} = specificationsSlice;\r\n\r\nexport const fetchSpecifications = (queryParams, productId) => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.list }));\r\n  if (!productId) {\r\n    return dispatch(\r\n      actions.specificationsFetched({ totalCount: 0, entities: null })\r\n    );\r\n  }\r\n\r\n  return requestFromServer\r\n    .findSpecifications(queryParams, productId)\r\n    .then(response => {\r\n      const { totalCount, entities } = response.data;\r\n      dispatch(actions.specificationsFetched({ totalCount, entities }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't find specifications\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.list }));\r\n    });\r\n};\r\n\r\nexport const fetchSpecification = id => dispatch => {\r\n  if (!id) {\r\n    return dispatch(\r\n      actions.specificationFetched({ specificationForEdit: undefined })\r\n    );\r\n  }\r\n\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .getSpecificationById(id)\r\n    .then(response => {\r\n      const specification = response.data;\r\n      dispatch(\r\n        actions.specificationFetched({ specificationForEdit: specification })\r\n      );\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't find specification\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const deleteSpecification = id => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .deleteSpecification(id)\r\n    .then(response => {\r\n      dispatch(actions.specificationDeleted({ id }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't delete specification\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const createSpecification = specificationForCreation => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .createSpecification(specificationForCreation)\r\n    .then(response => {\r\n      const { specification } = response.data;\r\n      dispatch(actions.specificationCreated({ specification }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't create specification\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const updateSpecification = specification => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .updateSpecification(specification)\r\n    .then(() => {\r\n      dispatch(actions.specificationUpdated({ specification }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't update specification\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const deleteSpecifications = ids => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .deleteSpecifications(ids)\r\n    .then(() => {\r\n      dispatch(actions.specificationsDeleted({ ids }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't delete specifications\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n","import axios from \"axios\";\r\n\r\nexport const SPECIFICATIONS_URL = \"api/specifications\";\r\n\r\n// CREATE =>  POST: add a new specifications to the server\r\nexport function createSpecification(specification) {\r\n  return axios.post(SPECIFICATIONS_URL, { specification });\r\n}\r\n\r\n// READ\r\n// Server should return filtered specifications by productId\r\nexport function getAllProductSpecificationsByProductId(productId) {\r\n  return axios.get(`${SPECIFICATIONS_URL}?productId=${productId}`);\r\n}\r\n\r\nexport function getSpecificationById(specificationId) {\r\n  return axios.get(`${SPECIFICATIONS_URL}/${specificationId}`);\r\n}\r\n\r\n// Server should return sorted/filtered specifications and merge with items from state\r\n// TODO: Change your URL to REAL API, right now URL is 'api/specificationsfind/{productId}'. Should be 'api/specifications/find/{productId}'!!!\r\nexport function findSpecifications(queryParams, productId) {\r\n  return axios.post(`${SPECIFICATIONS_URL}find/${productId}`, { queryParams });\r\n}\r\n\r\n// UPDATE => PUT: update the specification\r\nexport function updateSpecification(specification) {\r\n  return axios.put(`${SPECIFICATIONS_URL}/${specification.id}`, {\r\n    specification\r\n  });\r\n}\r\n\r\n// DELETE => delete the specification\r\nexport function deleteSpecification(specificationId) {\r\n  return axios.delete(`${SPECIFICATIONS_URL}/${specificationId}`);\r\n}\r\n\r\n// DELETE specifications by ids\r\nexport function deleteSpecifications(ids) {\r\n  return axios.post(`${SPECIFICATIONS_URL}/deleteSpecifications`, { ids });\r\n}\r\n","/* eslint-disable no-script-url,jsx-a11y/anchor-is-valid */\r\nimport React from \"react\";\r\nimport { OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\nimport SVG from \"react-inlinesvg\";\r\nimport { toAbsoluteUrl } from \"../../../../../../../_metronic/_helpers\";\r\n\r\nexport function ActionsColumnFormatter(\r\n  cellContent,\r\n  row,\r\n  rowIndex,\r\n  { openEditSpecificationDialog, openDeleteSpecificationDialog }\r\n) {\r\n  return (\r\n    <>\r\n      <OverlayTrigger\r\n        overlay={<Tooltip id=\"specs-edit-tooltip\">Edit specification</Tooltip>}\r\n      >\r\n        <a\r\n          className=\"btn btn-icon btn-light btn-hover-primary btn-sm mx-3\"\r\n          onClick={() => openEditSpecificationDialog(row.id)}\r\n        >\r\n          <span className=\"svg-icon svg-icon-md svg-icon-primary\">\r\n            <SVG\r\n              src={toAbsoluteUrl(\"/static/media/svg/icons/Communication/Write.svg\")}\r\n            />\r\n          </span>\r\n        </a>\r\n      </OverlayTrigger>\r\n\r\n      <> </>\r\n      <OverlayTrigger\r\n        overlay={\r\n          <Tooltip id=\"spec-delete-tooltip\">Delete specification</Tooltip>\r\n        }\r\n      >\r\n        <a\r\n          className=\"btn btn-icon btn-light btn-hover-danger btn-sm\"\r\n          onClick={() => openDeleteSpecificationDialog(row.id)}\r\n        >\r\n          <span className=\"svg-icon svg-icon-md svg-icon-danger\">\r\n            <SVG src={toAbsoluteUrl(\"/static/media/svg/icons/General/Trash.svg\")} />\r\n          </span>\r\n        </a>\r\n      </OverlayTrigger>\r\n    </>\r\n  );\r\n}\r\n","// React bootstrap table next =>\r\n// DOCS: https://react-bootstrap-table.github.io/react-bootstrap-table2/docs/\r\n// STORYBOOK: https://react-bootstrap-table.github.io/react-bootstrap-table2/storybook/index.html\r\nimport React, { useEffect, useMemo } from \"react\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory, {\r\n  PaginationProvider,\r\n} from \"react-bootstrap-table2-paginator\";\r\nimport * as actions from \"../../../_redux/specifications/specificationsActions\";\r\nimport { ActionsColumnFormatter } from \"./column-formatters/ActionsColumnFormatter\";\r\nimport * as uiHelpers from \"./SpecificationsUIHelper\";\r\nimport { Pagination } from \"../../../../../../_metronic/_partials/controls\";\r\nimport {\r\n  getSelectRow,\r\n  getHandlerTableChange,\r\n  NoRecordsFoundMessage,\r\n  PleaseWaitMessage,\r\n  sortCaret,\r\n} from \"../../../../../../_metronic/_helpers\";\r\nimport { useSpecificationsUIContext } from \"./SpecificationsUIContext\";\r\n\r\nexport function SpecificationsTable() {\r\n  // Specs UI Context\r\n  const specsUIContext = useSpecificationsUIContext();\r\n  const specsUIProps = useMemo(() => {\r\n    return {\r\n      queryParams: specsUIContext.queryParams,\r\n      setQueryParams: specsUIContext.setQueryParams,\r\n      openEditSpecificationDialog: specsUIContext.openEditSpecificationDialog,\r\n      openDeleteSpecificationDialog:\r\n        specsUIContext.openDeleteSpecificationDialog,\r\n      ids: specsUIContext.ids,\r\n      setIds: specsUIContext.setIds,\r\n      productId: specsUIContext.productId,\r\n    };\r\n  }, [specsUIContext]);\r\n\r\n  // Specs Redux state\r\n  // Getting curret state of products list from store (Redux)\r\n  const { currentState } = useSelector(\r\n    (state) => ({ currentState: state.specifications }),\r\n    shallowEqual\r\n  );\r\n  const { totalCount, entities, listLoading } = currentState;\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    specsUIProps.setIds([]);\r\n    dispatch(\r\n      actions.fetchSpecifications(specsUIProps.queryParams,specsUIProps.productId)\r\n    );\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [specsUIProps.queryParams, dispatch, specsUIProps.productId]);\r\n\r\n  const columns = [\r\n    {\r\n      dataField: \"name\",\r\n      text: \"Specification Type\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n    },\r\n    {\r\n      dataField: \"value\",\r\n      text: \"Value\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n    },\r\n    {\r\n      dataField: \"action\",\r\n      text: \"Actions\",\r\n      formatter: ActionsColumnFormatter,\r\n      formatExtraData: {\r\n        openEditSpecificationDialog: specsUIProps.openEditSpecificationDialog,\r\n        openDeleteSpecificationDialog:\r\n          specsUIProps.openDeleteSpecificationDialog,\r\n      },\r\n      classes: \"text-right pr-0\",\r\n      headerClasses: \"text-right pr-3\",\r\n      style: {\r\n        minWidth: \"100px\",\r\n      },\r\n    },\r\n  ];\r\n  // Table pagination properties\r\n  const paginationOptions = {\r\n    custom: true,\r\n    totalSize: totalCount,\r\n    sizePerPageList: uiHelpers.sizePerPageList,\r\n    sizePerPage: specsUIProps.queryParams.pageSize,\r\n    page: specsUIProps.queryParams.pageNumber,\r\n  };\r\n  return (\r\n    <>\r\n      <PaginationProvider pagination={paginationFactory(paginationOptions)}>\r\n        {({ paginationProps, paginationTableProps }) => {\r\n          return (\r\n            <Pagination\r\n              isLoading={listLoading}\r\n              paginationProps={paginationProps}\r\n            >\r\n              <BootstrapTable\r\n                wrapperClasses=\"table-responsive\"\r\n                classes=\"table table-head-custom table-vertical-center overflow-hidden\"\r\n                bordered={false}\r\n                bootstrap4\r\n                remote\r\n                keyField=\"id\"\r\n                data={entities === null ? [] : entities}\r\n                columns={columns}\r\n                defaultSorted={uiHelpers.defaultSorted}\r\n                onTableChange={getHandlerTableChange(\r\n                  specsUIProps.setQueryParams\r\n                )}\r\n                selectRow={getSelectRow({\r\n                  entities,\r\n                  ids: specsUIProps.ids,\r\n                  setIds: specsUIProps.setIds,\r\n                })}\r\n                {...paginationTableProps}\r\n              >\r\n                <PleaseWaitMessage entities={entities} />\r\n                <NoRecordsFoundMessage entities={entities} />\r\n              </BootstrapTable>\r\n            </Pagination>\r\n          );\r\n        }}\r\n      </PaginationProvider>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { shallowEqual, useSelector } from \"react-redux\";\r\nimport { LoadingDialog } from \"../../../../../../_metronic/_partials/controls\";\r\n\r\nexport function SpecificationsLoadingDialog() {\r\n  const { isLoading } = useSelector(\r\n    (state) => ({ isLoading: state.specifications.listLoading }),\r\n    shallowEqual\r\n  );\r\n  useEffect(() => {}, [isLoading]);\r\n  return <LoadingDialog isLoading={isLoading} text=\"Loading ...\" />;\r\n}\r\n","/* eslint-disable no-restricted-imports */\r\nimport React, { useEffect, useMemo } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport { ModalProgressBar } from \"../../../../../../_metronic/_partials/controls\";\r\nimport * as actions from \"../../../_redux/specifications/specificationsActions\";\r\nimport { useSpecificationsUIContext } from \"./SpecificationsUIContext\";\r\n\r\nexport function SpecificationsDeleteDialog() {\r\n  // Specs UI Context\r\n  const specsUIContext = useSpecificationsUIContext();\r\n  const specsUIProps = useMemo(() => {\r\n    return {\r\n      productId: specsUIContext.productId,\r\n      ids: specsUIContext.ids,\r\n      show: specsUIContext.showDeleteSpecificationsDialog,\r\n      onHide: specsUIContext.closeDeleteSpecificationsDialog,\r\n      setIds: specsUIContext.setIds,\r\n      queryParams: specsUIContext.queryParams,\r\n    };\r\n  }, [specsUIContext]);\r\n\r\n  // Specs Redux state\r\n  const dispatch = useDispatch();\r\n  const { isLoading } = useSelector(\r\n    (state) => ({ isLoading: state.specifications.actionsLoading }),\r\n    shallowEqual\r\n  );\r\n\r\n  // looking for loading/dispatch\r\n  useEffect(() => {}, [isLoading, dispatch]);\r\n\r\n  // if there weren't selected specs we should close modal\r\n  useEffect(() => {\r\n    if (!specsUIProps.ids || specsUIProps.ids.length === 0) {\r\n      specsUIProps.onHide();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [specsUIProps.ids]);\r\n\r\n  const deleteSpecifications = () => {\r\n    // server request for selected deleting specs\r\n    dispatch(actions.deleteSpecifications(specsUIProps.ids)).then(() => {\r\n      // refresh list after deletion\r\n      dispatch(\r\n        actions.fetchSpecifications(\r\n          specsUIProps.queryParams,\r\n          specsUIProps.productId\r\n        )\r\n      ).then(() => {\r\n        specsUIProps.setIds([]);\r\n        specsUIProps.onHide();\r\n      });\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      show={specsUIProps.show}\r\n      onHide={specsUIProps.onHide}\r\n      aria-labelledby=\"example-modal-sizes-title-lg\"\r\n    >\r\n      {isLoading && <ModalProgressBar variant=\"query\" />}\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n          Specifications Delete\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        {!isLoading && (\r\n          <span>\r\n            Are you sure to permanently delete selected specifications?\r\n          </span>\r\n        )}\r\n        {isLoading && <span>Specifications are deleting...</span>}\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            onClick={specsUIProps.onHide}\r\n            className=\"btn btn-light btn-elevate\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <> </>\r\n          <button\r\n            type=\"button\"\r\n            onClick={deleteSpecifications}\r\n            className=\"btn btn-primary btn-elevate\"\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n","/* eslint-disable no-restricted-imports */\r\nimport React, { useEffect, useMemo } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport { ModalProgressBar } from \"../../../../../../_metronic/_partials/controls\";\r\nimport * as actions from \"../../../_redux/specifications/specificationsActions\";\r\nimport { useSpecificationsUIContext } from \"./SpecificationsUIContext\";\r\n\r\nexport function SpecificationDeleteDialog() {\r\n  // Specifications UI Context\r\n  const specsUIContext = useSpecificationsUIContext();\r\n  const specsUIProps = useMemo(() => {\r\n    return {\r\n      id: specsUIContext.selectedId,\r\n      productId: specsUIContext.productId,\r\n      show: specsUIContext.showDeleteSpecificationDialog,\r\n      onHide: specsUIContext.closeDeleteSpecificationDialog,\r\n      queryParams: specsUIContext.queryParams,\r\n      setIds: specsUIContext.setIds,\r\n    };\r\n  }, [specsUIContext]);\r\n\r\n  // Specs Redux state\r\n  const dispatch = useDispatch();\r\n  const { isLoading } = useSelector(\r\n    (state) => ({ isLoading: state.specifications.actionsLoading }),\r\n    shallowEqual\r\n  );\r\n\r\n  // if !id we should close modal\r\n  useEffect(() => {\r\n    if (!specsUIProps.id) {\r\n      specsUIProps.onHide();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [specsUIProps.id]);\r\n\r\n  // looking for loading/dispatch\r\n  useEffect(() => {}, [isLoading, dispatch]);\r\n\r\n  const deleteSpecification = () => {\r\n    // server request for deleting spec by id\r\n    dispatch(actions.deleteSpecification(specsUIProps.id)).then(() => {\r\n      // refresh list after deletion\r\n      dispatch(\r\n        actions.fetchSpecifications(\r\n          specsUIProps.queryParams,\r\n          specsUIProps.productId\r\n        )\r\n      );\r\n      specsUIProps.setIds([]);\r\n      specsUIProps.onHide();\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      show={specsUIProps.show}\r\n      onHide={specsUIProps.onHide}\r\n      aria-labelledby=\"example-modal-sizes-title-lg\"\r\n    >\r\n      {isLoading && <ModalProgressBar variant=\"query\" />}\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n          Specification Delete\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        {!isLoading && (\r\n          <span>Are you sure to permanently delete this specification?</span>\r\n        )}\r\n        {isLoading && <span>Specification is deleting...</span>}\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            onClick={specsUIProps.onHide}\r\n            className=\"btn btn-light btn-elevate\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <> </>\r\n          <button\r\n            type=\"button\"\r\n            onClick={deleteSpecification}\r\n            className=\"btn btn-primary btn-elevate\"\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { useEffect, useMemo } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { shallowEqual, useSelector } from \"react-redux\";\r\nimport { useSpecificationsUIContext } from \"./SpecificationsUIContext\";\r\n\r\nconst selectedSpecifications = (entities, ids) => {\r\n  const _specifications = [];\r\n  ids.forEach((id) => {\r\n    const specification = entities.find((el) => el.id === id);\r\n    if (specification) {\r\n      _specifications.push(specification);\r\n    }\r\n  });\r\n  return _specifications;\r\n};\r\n\r\nexport function SpecificationsFetchDialog() {\r\n  // Specs UI Context\r\n  const specsUIContext = useSpecificationsUIContext();\r\n  const specsUIProps = useMemo(() => {\r\n    return {\r\n      ids: specsUIContext.ids,\r\n      show: specsUIContext.showFetchSpecificationsDialog,\r\n      onHide: specsUIContext.closeFetchSpecificationsDialog,\r\n      queryParams: specsUIContext.queryParams,\r\n    };\r\n  }, [specsUIContext]);\r\n\r\n  // Specs Redux state\r\n  const { specifications } = useSelector(\r\n    (state) => ({\r\n      specifications: selectedSpecifications(\r\n        state.specifications.entities,\r\n        specsUIProps.ids\r\n      ),\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (!specsUIProps.ids || specsUIProps.ids.length === 0) {\r\n      specsUIProps.onHide();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [specsUIProps.ids]);\r\n\r\n  return (\r\n    <Modal\r\n      show={specsUIProps.show}\r\n      onHide={specsUIProps.onHide}\r\n      aria-labelledby=\"example-modal-sizes-title-lg\"\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n          Fetch selected elements\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <div className=\"list-timeline list-timeline-skin-light padding-30\">\r\n          <div className=\"list-timeline-items\">\r\n            {specifications.map((specification) => (\r\n              <div className=\"list-timeline-item mb-3\" key={specification.id}>\r\n                <span className=\"list-timeline-text\">\r\n                  <span\r\n                    className=\"label label-lg label-light-success label-inline\"\r\n                    style={{ width: \"60px\" }}\r\n                  >\r\n                    ID: {specification.id}\r\n                  </span>{\" \"}\r\n                  <span className=\"ml-5\">\r\n                    {specification.name}: {specification.value}{\" \"}\r\n                  </span>\r\n                </span>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            onClick={specsUIProps.onHide}\r\n            className=\"btn btn-light btn-elevate\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <> </>\r\n          <button\r\n            type=\"button\"\r\n            onClick={specsUIProps.onHide}\r\n            className=\"btn btn-primary btn-elevate\"\r\n          >\r\n            Ok\r\n          </button>\r\n        </div>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { useMemo } from \"react\";\r\nimport { useSpecificationsUIContext } from \"./SpecificationsUIContext\";\r\n\r\nexport function SpecificationsGrouping() {\r\n  // Specs UI Context\r\n  const specsUIContext = useSpecificationsUIContext();\r\n  const specsUIProps = useMemo(() => {\r\n    return {\r\n      ids: specsUIContext.ids,\r\n      openDeleteSpecificationsDialog:\r\n        specsUIContext.openDeleteSpecificationsDialog,\r\n      openFetchSpecificationsDialog:\r\n        specsUIContext.openFetchSpecificationsDialog,\r\n    };\r\n  }, [specsUIContext]);\r\n\r\n  return (\r\n    <div className=\"form\">\r\n      <div className=\"row align-items-center form-group-actions margin-top-20\">\r\n        <div className=\"col-xl-12\">\r\n          <div className=\"form-group form-group-inline\">\r\n            <div className=\"form-label form-label-no-wrap\">\r\n              <label className=\"font-bold font-danger mt-5\">\r\n                <span>Selected records count: {specsUIProps.ids.length}</span>\r\n              </label>\r\n            </div>\r\n            <div className=\"form-group-inline\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-danger font-weight-bolder font-size-sm\"\r\n                onClick={specsUIProps.openDeleteSpecificationsDialog}\r\n              >\r\n                <i className=\"fa fa-trash\"></i> Delete All\r\n              </button>\r\n              &nbsp;\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-light-primary font-weight-bolder font-size-sm\"\r\n                onClick={specsUIProps.openFetchSpecificationsDialog}\r\n              >\r\n                <i className=\"fa fa-stream\"></i> Fetch Selected\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","/* eslint-disable no-restricted-imports */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { shallowEqual, useSelector } from \"react-redux\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { ModalProgressBar } from \"../../../../../../../_metronic/_partials/controls\";\r\n\r\nexport function SpecificationEditDialogHeader({ id }) {\r\n  const [title, setTitle] = useState(\"\");\r\n  // Specs Redux state\r\n  const { specificationForEdit, actionsLoading } = useSelector(\r\n    (state) => ({\r\n      specificationForEdit: state.specifications.specificationForEdit,\r\n      actionsLoading: state.specifications.actionsLoading,\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  useEffect(() => {\r\n    let _title = id ? \"\" : \"New Specification\";\r\n    if (specificationForEdit && id) {\r\n      _title = \"Edit Specification\";\r\n    }\r\n\r\n    setTitle(_title);\r\n    // eslint-disable-next-line\r\n  }, [specificationForEdit, actionsLoading]);\r\n  return (\r\n    <>\r\n      {actionsLoading && <ModalProgressBar variant=\"query\" />}\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"example-modal-sizes-title-lg\">{title}</Modal.Title>\r\n      </Modal.Header>\r\n    </>\r\n  );\r\n}\r\n","// Form is based on Formik\r\n// Data validation is based on Yup\r\n// Please, be familiar with article first:\r\n// https://hackernoon.com/react-form-validation-with-formik-and-yup-8b76bda62e10\r\nimport React from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport {\r\n  Select,\r\n  Input,\r\n} from \"../../../../../../../_metronic/_partials/controls\";\r\nimport { SPECIFICATIONS_DICTIONARY } from \"../SpecificationsUIHelper\";\r\n\r\n// Validation schema\r\nconst SpecificationEditSchema = Yup.object().shape({\r\n  value: Yup.string()\r\n    .min(2, \"Minimum 2 symbols\")\r\n    .max(50, \"Maximum 50 symbols\")\r\n    .required(\"Value is required\"),\r\n  specId: Yup.number().required(\"Specification type is required\"),\r\n});\r\n\r\nexport function SpecificationEditForm({\r\n  saveSpecification,\r\n  specification,\r\n  actionsLoading,\r\n  onHide,\r\n}) {\r\n  return (\r\n    <>\r\n      <Formik\r\n        enableReinitialize={true}\r\n        initialValues={specification}\r\n        validationSchema={SpecificationEditSchema}\r\n        onSubmit={(values) => {\r\n          saveSpecification(values);\r\n        }}\r\n      >\r\n        {({ handleSubmit }) => (\r\n          <>\r\n            <Modal.Body className=\"overlay overlay-block cursor-default\">\r\n              {actionsLoading && (\r\n                <div className=\"overlay-layer bg-transparent\">\r\n                  <div className=\"spinner spinner-lg spinner-success\" />\r\n                </div>\r\n              )}\r\n              <Form className=\"form form-label-right\">\r\n                <div className=\"form-group row\">\r\n                  <div className=\"col-lg-12\">\r\n                    <Select name=\"specId\" label=\"Specification Type\">\r\n                      {SPECIFICATIONS_DICTIONARY.map((spec) => (\r\n                        <option key={spec.id} value={spec.id}>\r\n                          {spec.name}\r\n                        </option>\r\n                      ))}\r\n                    </Select>\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                  <div className=\"col-lg-12\">\r\n                    <Field\r\n                      name=\"value\"\r\n                      component={Input}\r\n                      placeholder=\"Value\"\r\n                      label=\"Value\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <button\r\n                type=\"button\"\r\n                onClick={onHide}\r\n                className=\"btn btn-light btn-elevate\"\r\n              >\r\n                Cancel\r\n              </button>\r\n              <> </>\r\n              <button\r\n                type=\"submit\"\r\n                onClick={() => handleSubmit()}\r\n                className=\"btn btn-primary btn-elevate\"\r\n              >\r\n                Save\r\n              </button>\r\n            </Modal.Footer>\r\n          </>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useMemo } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport * as actions from \"../../../../_redux/specifications/specificationsActions\";\r\nimport { SpecificationEditDialogHeader } from \"./SpecificationEditDialogHeader\";\r\nimport { SpecificationEditForm } from \"./SpecificationEditForm\";\r\nimport { useSpecificationsUIContext } from \"../SpecificationsUIContext\";\r\n\r\nexport function SpecificationEditDialog() {\r\n  // Specifications UI Context\r\n  const specsUIContext = useSpecificationsUIContext();\r\n  const specsUIProps = useMemo(() => {\r\n    return {\r\n      id: specsUIContext.selectedId,\r\n      show: specsUIContext.showEditSpecificationDialog,\r\n      onHide: specsUIContext.closeEditSpecificationDialog,\r\n      productId: specsUIContext.productId,\r\n      queryParams: specsUIContext.queryParams,\r\n      initSpecification: specsUIContext.initSpecification,\r\n    };\r\n  }, [specsUIContext]);\r\n\r\n  // Specifications Redux state\r\n  const dispatch = useDispatch();\r\n  const { actionsLoading, specificationForEdit } = useSelector(\r\n    (state) => ({\r\n      actionsLoading: state.specifications.actionsLoading,\r\n      specificationForEdit: state.specifications.specificationForEdit,\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  useEffect(() => {\r\n    // server request for getting spec by seleted id\r\n    dispatch(actions.fetchSpecification(specsUIProps.id));\r\n  }, [specsUIProps.id, dispatch]);\r\n\r\n  const saveSpecification = (specification) => {\r\n    if (!specsUIProps.id) {\r\n      dispatch(actions.createSpecification(specification)).then(() => {\r\n        dispatch(\r\n          actions.fetchSpecifications(\r\n            specsUIProps.queryParams,\r\n            specsUIProps.productId\r\n          )\r\n        ).then(() => specsUIProps.onHide());\r\n      });\r\n    } else {\r\n      dispatch(actions.updateSpecification(specification)).then(() => {\r\n        dispatch(\r\n          actions.fetchSpecifications(\r\n            specsUIProps.queryParams,\r\n            specsUIProps.productId\r\n          )\r\n        ).then(() => specsUIProps.onHide());\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      show={specsUIProps.show}\r\n      onHide={specsUIProps.onHide}\r\n      aria-labelledby=\"example-modal-sizes-title-lg\"\r\n    >\r\n      <SpecificationEditDialogHeader id={specsUIProps.id} />\r\n      <SpecificationEditForm\r\n        saveSpecification={saveSpecification}\r\n        actionsLoading={actionsLoading}\r\n        specification={specificationForEdit || specsUIProps.initSpecification}\r\n        onHide={specsUIProps.onHide}\r\n      />\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { useMemo } from \"react\";\r\nimport { SpecificationsFilter } from \"./SpecificationsFilter\";\r\nimport { SpecificationsTable } from \"./SpecificationsTable\";\r\nimport { SpecificationsLoadingDialog } from \"./SpecificationsLoadingDialog\";\r\nimport { SpecificationsDeleteDialog } from \"./SpecificationsDeleteDialog\";\r\nimport { SpecificationDeleteDialog } from \"./SpecificationDeleteDialog\";\r\nimport { SpecificationsFetchDialog } from \"./SpecificationsFetchDialog\";\r\nimport { SpecificationsGrouping } from \"./SpecificationsGrouping\";\r\nimport { SpecificationEditDialog } from \"./specification-edit-dialog/SpecificationEditDialog\";\r\nimport { useSpecificationsUIContext } from \"./SpecificationsUIContext\";\r\n\r\nexport function Specifications() {\r\n  // Specifications UI Context\r\n  const specsUIContext = useSpecificationsUIContext();\r\n  const specsUIProps = useMemo(() => {\r\n    return { ids: specsUIContext.ids };\r\n  }, [specsUIContext]);\r\n\r\n  return (\r\n    <>\r\n      <SpecificationsLoadingDialog />\r\n      <SpecificationEditDialog />\r\n      <SpecificationDeleteDialog />\r\n      <SpecificationsDeleteDialog />\r\n      <SpecificationsFetchDialog />\r\n      <div className=\"form margin-b-30\">\r\n        <SpecificationsFilter />\r\n        {specsUIProps.ids.length > 0 && (\r\n          <>\r\n            <SpecificationsGrouping />\r\n            <br />\r\n          </>\r\n        )}\r\n      </div>\r\n      <SpecificationsTable />\r\n    </>\r\n  );\r\n}\r\n","export const defaultSorted = [{ dataField: \"id\", order: \"asc\" }];\r\nexport const sizePerPageList = [\r\n  { text: \"1\", value: 1 },\r\n  { text: \"3\", value: 3 },\r\n  { text: \"5\", value: 5 }\r\n];\r\nexport const initialFilter = {\r\n  filter: {\r\n    text: \"\"\r\n  },\r\n  sortOrder: \"asc\", // asc||desc\r\n  sortField: \"id\",\r\n  pageNumber: 1,\r\n  pageSize: 5\r\n};\r\n","/* eslint-disable no-unused-vars */\r\nimport React, { useEffect, useContext, createContext, useState, useCallback } from \"react\";\r\nimport {isEqual, isFunction} from \"lodash\";\r\nimport {initialFilter} from \"./RemarksUIHelper\";\r\n\r\nconst RemarksUIContext = createContext();\r\n\r\nexport function useRemarksUIContext() {\r\n  return useContext(RemarksUIContext);\r\n}\r\n\r\nexport const RemarksUIConsumer = RemarksUIContext.Consumer;\r\n\r\nexport function RemarksUIProvider({ currentProductId, children }) {\r\n  const [productId, setProductId] = useState(currentProductId);\r\n  const [queryParams, setQueryParamsBase] = useState(initialFilter);\r\n  const [ids, setIds] = useState([]);\r\n  const setQueryParams = useCallback(nextQueryParams => {\r\n    setQueryParamsBase(prevQueryParams => {\r\n      if (isFunction(nextQueryParams)) {\r\n        nextQueryParams = nextQueryParams(prevQueryParams);\r\n      }\r\n\r\n      if (isEqual(prevQueryParams, nextQueryParams)) {\r\n        return prevQueryParams;\r\n      }\r\n\r\n      return nextQueryParams;\r\n    });\r\n  }, []);\r\n  const [selectedId, setSelectedId] = useState(null);\r\n  const [showEditRemarkDialog, setShowEditRemarkDialog] = useState(false);\r\n  const initRemark = {\r\n    id: undefined,\r\n    text: \"\",\r\n    type: 0,\r\n    dueDate: \"01/07/2020\",\r\n    carId: productId\r\n  };\r\n  useEffect(()=> {\r\n    initRemark.productId = currentProductId;\r\n    initRemark.carId = currentProductId;\r\n    setProductId(currentProductId);\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [currentProductId]);\r\n  const openNewRemarkDialog = () => {\r\n    setSelectedId(undefined);\r\n    setShowEditRemarkDialog(true);\r\n  };\r\n  const openEditRemarkDialog = id => {\r\n    setSelectedId(id);\r\n    setShowEditRemarkDialog(true);\r\n  };\r\n  const closeEditRemarkDialog = () => {\r\n    setSelectedId(undefined);\r\n    setShowEditRemarkDialog(false);\r\n  };\r\n  const [showDeleteRemarkDialog, setShowDeleteRemarkDialog] = useState(false);\r\n  const openDeleteRemarkDialog = id => {\r\n    setSelectedId(id);\r\n    setShowDeleteRemarkDialog(true);\r\n  };\r\n  const closeDeleteRemarkDialog = () => {\r\n    setSelectedId(undefined);\r\n    setShowDeleteRemarkDialog(false);\r\n  };\r\n\r\n  const [showDeleteRemarksDialog, setShowDeleteRemarksDialog] = useState(false);\r\n  const openDeleteRemarksDialog = () => {\r\n    setShowDeleteRemarksDialog(true);\r\n  };\r\n  const closeDeleteRemarksDialog = () => {\r\n    setShowDeleteRemarksDialog(false);\r\n  };\r\n\r\n  const [showFetchRemarksDialog, setShowFetchRemarksDialog] = useState(false);\r\n  const openFetchRemarksDialog = () => {\r\n    setShowFetchRemarksDialog(true);\r\n  };\r\n  const closeFetchRemarksDialog = () => {\r\n    setShowFetchRemarksDialog(false);\r\n  };\r\n\r\n  const value = {\r\n    ids,\r\n    setIds,\r\n    productId,\r\n    setProductId,\r\n    queryParams,\r\n    setQueryParams,\r\n    initRemark,\r\n    selectedId,\r\n    showEditRemarkDialog,\r\n    openNewRemarkDialog,    \r\n    openEditRemarkDialog,\r\n    closeEditRemarkDialog,\r\n    showDeleteRemarkDialog,\r\n    openDeleteRemarkDialog,\r\n    closeDeleteRemarkDialog,\r\n    showDeleteRemarksDialog,\r\n    openDeleteRemarksDialog,\r\n    closeDeleteRemarksDialog,\r\n    openFetchRemarksDialog,\r\n    closeFetchRemarksDialog,\r\n    showFetchRemarksDialog\r\n  };\r\n  \r\n  return (\r\n    <RemarksUIContext.Provider value={value}>\r\n      {children}\r\n    </RemarksUIContext.Provider>\r\n  );\r\n}\r\n","import React, { useMemo } from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport { isEqual } from \"lodash\";\r\nimport { useRemarksUIContext } from \"./RemarksUIContext\";\r\n\r\nconst prepareFilter = (queryParams, values) => {\r\n  const { searchText } = values;\r\n  const newQueryParams = { ...queryParams };\r\n  const filter = {};\r\n  filter.text = searchText;\r\n  newQueryParams.filter = filter;\r\n  return newQueryParams;\r\n};\r\n\r\nexport function RemarksFilter() {\r\n  // Remarks UI Context\r\n  const remarksUIContext = useRemarksUIContext();\r\n  const remarksUIProps = useMemo(() => {\r\n    return {\r\n      setQueryParams: remarksUIContext.setQueryParams,\r\n      openNewRemarkDialog: remarksUIContext.openNewRemarkDialog,\r\n      queryParams: remarksUIContext.queryParams,\r\n    };\r\n  }, [remarksUIContext]);\r\n\r\n  const applyFilter = (values) => {\r\n    const newQueryParams = prepareFilter(remarksUIProps.queryParams, values);\r\n    if (!isEqual(newQueryParams, remarksUIProps.queryParams)) {\r\n      newQueryParams.pageNumber = 1;\r\n      remarksUIProps.setQueryParams(newQueryParams);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"form-filtration\">\r\n        <div className=\"row align-items-center\">\r\n          <div className=\"col-md-2 margin-bottom-10-mobile\">\r\n            <Formik\r\n              initialValues={{\r\n                searchText: \"\",\r\n              }}\r\n              onSubmit={(values) => {\r\n                applyFilter(values);\r\n              }}\r\n            >\r\n              {({\r\n                values,\r\n                handleSubmit,\r\n                handleBlur,\r\n                handleChange,\r\n                setFieldValue,\r\n              }) => (\r\n                <form onSubmit={handleSubmit}>\r\n                  <div>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      name=\"searchText\"\r\n                      placeholder=\"Search\"\r\n                      onBlur={handleBlur}\r\n                      value={values.searchText}\r\n                      onChange={(e) => {\r\n                        setFieldValue(\"searchText\", e.target.value);\r\n                        handleSubmit();\r\n                      }}\r\n                    />\r\n                    <small className=\"form-text text-muted\">\r\n                      <b>Search</b> in all fields\r\n                    </small>\r\n                  </div>\r\n                </form>\r\n              )}\r\n            </Formik>\r\n          </div>\r\n          <div className=\"col-md-8 margin-bottom-10-mobile\"></div>\r\n          <div className=\"col-md-2 text-right margin-bottom-10-mobile\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary\"\r\n              onClick={() => remarksUIProps.openNewRemarkDialog()}\r\n            >\r\n              Create new remark\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import * as requestFromServer from \"./remarksCrud\";\r\nimport {remarksSlice, callTypes} from \"./remarksSlice\";\r\n\r\nconst {actions} = remarksSlice;\r\n\r\nexport const fetchRemarks = (queryParams, productId) => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.list }));\r\n  if (!productId) {\r\n    return dispatch(actions.remarksFetched({ totalCount: 0, entities: null }));\r\n  }\r\n\r\n  return requestFromServer\r\n    .findRemarks(queryParams, productId)\r\n    .then(response => {\r\n      const { totalCount, entities } = response.data;\r\n      dispatch(actions.remarksFetched({ totalCount, entities }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't find remarks\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.list }));\r\n    });\r\n};\r\n\r\nexport const fetchRemark = id => dispatch => {\r\n  if (!id) {\r\n    return dispatch(actions.remarkFetched({ remarkForEdit: undefined }));\r\n  }\r\n\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .getRemarkById(id)\r\n    .then(response => {\r\n      const remark = response.data;\r\n      dispatch(actions.remarkFetched({ remarkForEdit: remark }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't find remark\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const deleteRemark = id => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .deleteRemark(id)\r\n    .then(response => {\r\n      dispatch(actions.remarkDeleted({ id }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't delete remark\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const createRemark = remarkForCreation => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .createRemark(remarkForCreation)\r\n    .then(response => {\r\n      const { remark } = response.data;\r\n      dispatch(actions.remarkCreated({ remark }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't create remark\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const updateRemark = remark => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .updateRemark(remark)\r\n    .then(() => {\r\n      dispatch(actions.remarkUpdated({ remark }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't update remark\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const deleteRemarks = ids => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .deleteRemarks(ids)\r\n    .then(() => {\r\n      console.log(\"delete return\");\r\n      dispatch(actions.remarksDeleted({ ids }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't delete remarks\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n","import axios from \"axios\";\r\n\r\nexport const REMARKS_URL = \"api/remarks\";\r\n\r\n// CREATE =>  POST: add a new remark to the server\r\nexport function createRemark(remark) {\r\n  return axios.post(REMARKS_URL, { remark });\r\n}\r\n\r\n// READ\r\n// Server should return filtered remarks by productId\r\nexport function getAllProductRemarksByProductId(productId) {\r\n  return axios.get(`${REMARKS_URL}?productId=${productId}`);\r\n}\r\n\r\nexport function getRemarkById(remarkId) {\r\n  return axios.get(`${REMARKS_URL}/${remarkId}`);\r\n}\r\n\r\n// Server should return sorted/filtered remarks and merge with items from state\r\n// TODO: Change your URL to REAL API, right now URL is 'api/remarksfind/{productId}'. Should be 'api/remarks/find/{productId}'!!!\r\nexport function findRemarks(queryParams, productId) {\r\n  return axios.post(`${REMARKS_URL}find/${productId}`, { queryParams });\r\n}\r\n\r\n// UPDATE => PUT: update the remark\r\nexport function updateRemark(remark) {\r\n  return axios.put(`${REMARKS_URL}/${remark.id}`, { remark });\r\n}\r\n\r\n// DELETE => delete the remark\r\nexport function deleteRemark(remarkId) {\r\n  return axios.delete(`${REMARKS_URL}/${remarkId}`);\r\n}\r\n\r\n// DELETE Remarks by ids\r\nexport function deleteRemarks(ids) {\r\n  return axios.post(`${REMARKS_URL}/deleteRemarks`, { ids });\r\n}\r\n","/* eslint-disable no-script-url,jsx-a11y/anchor-is-valid */\r\nimport React from \"react\";\r\nimport { OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\nimport SVG from \"react-inlinesvg\";\r\nimport { toAbsoluteUrl } from \"../../../../../../../_metronic/_helpers\";\r\n\r\nexport const ActionsColumnFormatter = (\r\n  cellContent,\r\n  row,\r\n  rowIndex,\r\n  { openEditRemarkDialog, openDeleteRemarkDialog }\r\n) => (\r\n  <>\r\n    <OverlayTrigger\r\n      overlay={<Tooltip id=\"customers-edit-tooltip\">Edit remark</Tooltip>}\r\n    >\r\n      <a\r\n        className=\"btn btn-icon btn-light btn-hover-primary btn-sm mx-3\"\r\n        onClick={() => openEditRemarkDialog(row.id)}\r\n      >\r\n        <span className=\"svg-icon svg-icon-md svg-icon-primary\">\r\n          <SVG\r\n            src={toAbsoluteUrl(\"/static/media/svg/icons/Communication/Write.svg\")}\r\n          />\r\n        </span>\r\n      </a>\r\n    </OverlayTrigger>\r\n\r\n    <> </>\r\n    <OverlayTrigger\r\n      overlay={<Tooltip id=\"customers-delete-tooltip\">Delete remark</Tooltip>}\r\n    >\r\n      <a\r\n        className=\"btn btn-icon btn-light btn-hover-danger btn-sm\"\r\n        onClick={() => openDeleteRemarkDialog(row.id)}\r\n      >\r\n        <span className=\"svg-icon svg-icon-md svg-icon-danger\">\r\n          <SVG src={toAbsoluteUrl(\"/static/media/svg/icons/General/Trash.svg\")} />\r\n        </span>\r\n      </a>\r\n    </OverlayTrigger>\r\n  </>\r\n);\r\n","// React bootstrap table next =>\r\n// DOCS: https://react-bootstrap-table.github.io/react-bootstrap-table2/docs/\r\n// STORYBOOK: https://react-bootstrap-table.github.io/react-bootstrap-table2/storybook/index.html\r\nimport React, { useEffect, useMemo } from \"react\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory, {\r\n  PaginationProvider,\r\n} from \"react-bootstrap-table2-paginator\";\r\nimport * as actions from \"../../../_redux/remarks/remarksActions\";\r\nimport { ActionsColumnFormatter } from \"./column-formatters/ActionsColumnFormatter\";\r\nimport * as uiHelpers from \"./RemarksUIHelper\";\r\nimport { Pagination } from \"../../../../../../_metronic/_partials/controls\";\r\nimport {\r\n  getSelectRow,\r\n  getHandlerTableChange,\r\n  NoRecordsFoundMessage,\r\n  PleaseWaitMessage,\r\n  sortCaret,\r\n} from \"../../../../../../_metronic/_helpers\";\r\nimport { useRemarksUIContext } from \"./RemarksUIContext\";\r\n\r\nexport function RemarksTable() {\r\n  // Remarks UI Context\r\n  const remarksUIContext = useRemarksUIContext();\r\n  const remarksUIProps = useMemo(() => {\r\n    return {\r\n      ids: remarksUIContext.ids,\r\n      setIds: remarksUIContext.setIds,\r\n      queryParams: remarksUIContext.queryParams,\r\n      setQueryParams: remarksUIContext.setQueryParams,\r\n      productId: remarksUIContext.productId,\r\n      openEditRemarkDialog: remarksUIContext.openEditRemarkDialog,\r\n      openDeleteRemarkDialog: remarksUIContext.openDeleteRemarkDialog,\r\n    };\r\n  }, [remarksUIContext]);\r\n\r\n  // Getting curret state of products list from store (Redux)\r\n  const { currentState } = useSelector(\r\n    (state) => ({ currentState: state.remarks }),\r\n    shallowEqual\r\n  );\r\n  const { totalCount, entities, listLoading } = currentState;\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    remarksUIProps.setIds([]);\r\n    dispatch(\r\n      actions.fetchRemarks(remarksUIProps.queryParams, remarksUIProps.productId)\r\n    );\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [remarksUIProps.queryParams, dispatch, remarksUIProps.productId]);\r\n  const columns = [\r\n    {\r\n      dataField: \"id\",\r\n      text: \"ID\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n    },\r\n    {\r\n      dataField: \"text\",\r\n      text: \"Text\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n    },\r\n    {\r\n      dataField: \"dueDate\",\r\n      text: \"Due date\",\r\n      sort: false,\r\n    },\r\n    {\r\n      dataField: \"action\",\r\n      text: \"Actions\",\r\n      formatter: ActionsColumnFormatter,\r\n      formatExtraData: {\r\n        openEditRemarkDialog: remarksUIProps.openEditRemarkDialog,\r\n        openDeleteRemarkDialog: remarksUIProps.openDeleteRemarkDialog,\r\n      },\r\n      classes: \"text-right pr-0\",\r\n      headerClasses: \"text-right pr-3\",\r\n      style: {\r\n        minWidth: \"100px\",\r\n      },\r\n    },\r\n  ];\r\n\r\n  const paginationOptions = {\r\n    custom: true,\r\n    totalSize: totalCount,\r\n    sizePerPageList: uiHelpers.sizePerPageList,\r\n    sizePerPage: remarksUIProps.queryParams.pageSize,\r\n    page: remarksUIProps.queryParams.pageNumber,\r\n  };\r\n  return (\r\n    <>\r\n      <PaginationProvider pagination={paginationFactory(paginationOptions)}>\r\n        {({ paginationProps, paginationTableProps }) => {\r\n          return (\r\n            <Pagination\r\n              isLoading={listLoading}\r\n              paginationProps={paginationProps}\r\n            >\r\n              <BootstrapTable\r\n                wrapperClasses=\"table-responsive\"\r\n                classes=\"table table-head-custom table-vertical-center overflow-hidden\"\r\n                bordered={false}\r\n                bootstrap4\r\n                remote\r\n                keyField=\"id\"\r\n                data={entities === null ? [] : entities}\r\n                columns={columns}\r\n                defaultSorted={uiHelpers.defaultSorted}\r\n                onTableChange={getHandlerTableChange(\r\n                  remarksUIProps.setQueryParams\r\n                )}\r\n                selectRow={getSelectRow({\r\n                  entities,\r\n                  ids: remarksUIProps.ids,\r\n                  setIds: remarksUIProps.setIds,\r\n                })}\r\n                {...paginationTableProps}\r\n              >\r\n                <PleaseWaitMessage entities={entities} />\r\n                <NoRecordsFoundMessage entities={entities} />\r\n              </BootstrapTable>\r\n            </Pagination>\r\n          );\r\n        }}\r\n      </PaginationProvider>\r\n    </>\r\n  );\r\n}\r\n","import React, {useEffect} from \"react\";\r\nimport {shallowEqual, useSelector} from \"react-redux\";\r\nimport {LoadingDialog} from \"../../../../../../_metronic/_partials/controls\";\r\n\r\nexport function RemarksLoadingDialog() {\r\n  const { isLoading } = useSelector(\r\n    state => ({ isLoading: state.remarks.listLoading }),\r\n    shallowEqual\r\n  );\r\n  useEffect(() => {}, [isLoading]);\r\n  return <LoadingDialog isLoading={isLoading} text=\"Loading ...\" />;\r\n}\r\n","/* eslint-disable no-restricted-imports */\r\nimport React, { useEffect, useMemo } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport { ModalProgressBar } from \"../../../../../../_metronic/_partials/controls\";\r\nimport * as actions from \"../../../_redux/remarks/remarksActions\";\r\nimport { useRemarksUIContext } from \"./RemarksUIContext\";\r\n\r\nexport function RemarksDeleteDialog() {\r\n  // Remarks UI Context\r\n  const remarksUIContext = useRemarksUIContext();\r\n  const remarksUIProps = useMemo(() => {\r\n    return {\r\n      ids: remarksUIContext.ids,\r\n      setIds: remarksUIContext.setIds,\r\n      productId: remarksUIContext.productId,\r\n      queryParams: remarksUIContext.queryParams,\r\n      showDeleteRemarksDialog: remarksUIContext.showDeleteRemarksDialog,\r\n      closeDeleteRemarksDialog: remarksUIContext.closeDeleteRemarksDialog,\r\n    };\r\n  }, [remarksUIContext]);\r\n\r\n  const dispatch = useDispatch();\r\n  const { isLoading } = useSelector(\r\n    (state) => ({ isLoading: state.remarks.actionsLoading }),\r\n    shallowEqual\r\n  );\r\n\r\n  useEffect(() => {}, [isLoading, dispatch]);\r\n  useEffect(() => {\r\n    if (!remarksUIProps.ids || remarksUIProps.ids.length === 0) {\r\n      remarksUIProps.closeDeleteRemarksDialog();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [remarksUIProps.ids]);\r\n\r\n  const deleteRemarks = () => {\r\n    dispatch(actions.deleteRemarks(remarksUIProps.ids)).then(() => {\r\n      dispatch(\r\n        actions.fetchRemarks(\r\n          remarksUIProps.queryParams,\r\n          remarksUIProps.productId\r\n        )\r\n      ).then(() => {\r\n        remarksUIProps.setIds([]);\r\n        remarksUIProps.closeDeleteRemarksDialog();\r\n      });\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      show={remarksUIProps.showDeleteRemarksDialog}\r\n      onHide={remarksUIProps.closeDeleteRemarksDialog}\r\n      aria-labelledby=\"example-modal-sizes-title-lg\"\r\n    >\r\n      {isLoading && <ModalProgressBar variant=\"query\" />}\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n          Remarks Delete\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        {!isLoading && (\r\n          <span>Are you sure to permanently delete selected remarks?</span>\r\n        )}\r\n        {isLoading && <span>Remarks are deleting...</span>}\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            onClick={remarksUIProps.closeDeleteRemarksDialog}\r\n            className=\"btn btn-light btn-elevate\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <> </>\r\n          <button\r\n            type=\"button\"\r\n            onClick={deleteRemarks}\r\n            className=\"btn btn-primary btn-elevate\"\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n","/* eslint-disable no-restricted-imports */\r\nimport React, { useEffect, useMemo } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport { ModalProgressBar } from \"../../../../../../_metronic/_partials/controls\";\r\nimport * as actions from \"../../../_redux/remarks/remarksActions\";\r\nimport { useRemarksUIContext } from \"./RemarksUIContext\";\r\n\r\nexport function RemarkDeleteDialog() {\r\n  // Remarks UI Context\r\n  const remarksUIContext = useRemarksUIContext();\r\n  const remarksUIProps = useMemo(() => {\r\n    return {\r\n      id: remarksUIContext.selectedId,\r\n      setIds: remarksUIContext.setIds,\r\n      productId: remarksUIContext.productId,\r\n      queryParams: remarksUIContext.queryParams,\r\n      showDeleteRemarkDialog: remarksUIContext.showDeleteRemarkDialog,\r\n      closeDeleteRemarkDialog: remarksUIContext.closeDeleteRemarkDialog,\r\n    };\r\n  }, [remarksUIContext]);\r\n\r\n  // Remarks Redux state\r\n  const dispatch = useDispatch();\r\n  const { isLoading } = useSelector(\r\n    (state) => ({ isLoading: state.remarks.actionsLoading }),\r\n    shallowEqual\r\n  );\r\n\r\n  // if !id we should close modal\r\n  useEffect(() => {\r\n    if (!remarksUIProps.id) {\r\n      remarksUIProps.closeDeleteRemarkDialog();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [remarksUIProps.id]);\r\n\r\n  // looking for loading/dispatch\r\n  useEffect(() => {}, [isLoading, dispatch]);\r\n\r\n  const deleteRemark = () => {\r\n    // server request for deleting remark by id\r\n    dispatch(actions.deleteRemark(remarksUIProps.id)).then(() => {\r\n      // refresh list after deletion\r\n      dispatch(\r\n        actions.fetchRemarks(\r\n          remarksUIProps.queryParams,\r\n          remarksUIProps.productId\r\n        )\r\n      );\r\n      // clear selections list\r\n      remarksUIProps.setIds([]);\r\n      // closing delete modal\r\n      remarksUIProps.closeDeleteRemarkDialog();\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      show={remarksUIProps.showDeleteRemarkDialog}\r\n      onHide={remarksUIProps.closeDeleteRemarkDialog}\r\n      aria-labelledby=\"example-modal-sizes-title-lg\"\r\n    >\r\n      {isLoading && <ModalProgressBar variant=\"query\" />}\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n          Remark Delete\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        {!isLoading && (\r\n          <span>Are you sure to permanently delete this remark?</span>\r\n        )}\r\n        {isLoading && <span>Remark is deleting...</span>}\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            onClick={remarksUIProps.closeDeleteRemarkDialog}\r\n            className=\"btn btn-light btn-elevate\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <> </>\r\n          <button\r\n            type=\"button\"\r\n            onClick={deleteRemark}\r\n            className=\"btn btn-primary btn-elevate\"\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { useEffect, useMemo } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { shallowEqual, useSelector } from \"react-redux\";\r\nimport { useRemarksUIContext } from \"./RemarksUIContext\";\r\n\r\nconst selectedRemarks = (entities, ids) => {\r\n  const _remarks = [];\r\n  ids.forEach((id) => {\r\n    const remark = entities.find((el) => el.id === id);\r\n    if (remark) {\r\n      _remarks.push(remark);\r\n    }\r\n  });\r\n  return _remarks;\r\n};\r\n\r\nexport function RemarksFetchDialog() {\r\n  // Remarks UI Context\r\n  const remarksUIContext = useRemarksUIContext();\r\n  const remarksUIProps = useMemo(() => {\r\n    return {\r\n      ids: remarksUIContext.ids,\r\n      queryParams: remarksUIContext.queryParams,\r\n      showFetchRemarksDialog: remarksUIContext.showFetchRemarksDialog,\r\n      closeFetchRemarksDialog: remarksUIContext.closeFetchRemarksDialog,\r\n    };\r\n  }, [remarksUIContext]);\r\n\r\n  const { remarks } = useSelector(\r\n    (state) => ({\r\n      remarks: selectedRemarks(state.remarks.entities, remarksUIProps.ids),\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (!remarksUIProps.ids || remarksUIProps.ids.length === 0) {\r\n      remarksUIProps.closeFetchRemarksDialog();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [remarksUIProps.ids]);\r\n\r\n  return (\r\n    <Modal\r\n      show={remarksUIProps.showFetchRemarksDialog}\r\n      onHide={remarksUIProps.closeFetchRemarksDialog}\r\n      aria-labelledby=\"example-modal-sizes-title-lg\"\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n          Fetch selected elements\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <div className=\"list-timeline list-timeline-skin-light padding-30\">\r\n          <div className=\"list-timeline-items\">\r\n            {remarks.map((remark) => (\r\n              <div className=\"list-timeline-item mb-3\" key={remark.id}>\r\n                <span className=\"list-timeline-text\">\r\n                  <span\r\n                    className=\"label label-lg label-light-success label-inline\"\r\n                    style={{ width: \"60px\" }}\r\n                  >\r\n                    ID: {remark.id}\r\n                  </span>{\" \"}\r\n                  <span className=\"ml-5\">{remark.text} </span>\r\n                </span>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            onClick={remarksUIProps.closeFetchRemarksDialog}\r\n            className=\"btn btn-light btn-elevate\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <> </>\r\n          <button\r\n            type=\"button\"\r\n            onClick={remarksUIProps.closeFetchRemarksDialog}\r\n            className=\"btn btn-primary btn-elevate\"\r\n          >\r\n            Ok\r\n          </button>\r\n        </div>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { useMemo } from \"react\";\r\nimport { useRemarksUIContext } from \"./RemarksUIContext\";\r\n\r\nexport function RemarksGrouping() {\r\n  // Remarks UI Context\r\n  const remarksUIContext = useRemarksUIContext();\r\n  const remarksUIProps = useMemo(() => {\r\n    return {\r\n      ids: remarksUIContext.ids,\r\n      openDeleteRemarksDialog: remarksUIContext.openDeleteRemarksDialog,\r\n      openFetchRemarksDialog: remarksUIContext.openFetchRemarksDialog,\r\n    };\r\n  }, [remarksUIContext]);\r\n\r\n  return (\r\n    <div className=\"form\">\r\n      <div className=\"row align-items-center form-group-actions margin-top-20\">\r\n        <div className=\"col-xl-12\">\r\n          <div className=\"form-group form-group-inline\">\r\n            <div className=\"form-label form-label-no-wrap\">\r\n              <label className=\"font-bold font-danger mt-5\">\r\n                <span>Selected records count: {remarksUIProps.ids.length}</span>\r\n              </label>\r\n            </div>\r\n            <div className=\"form-group-inline\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-danger font-weight-bolder font-size-sm\"\r\n                onClick={remarksUIProps.openDeleteRemarksDialog}\r\n              >\r\n                <i className=\"fa fa-trash\"></i> Delete All\r\n              </button>\r\n              &nbsp;\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-light-primary font-weight-bolder font-size-sm\"\r\n                onClick={remarksUIProps.openFetchRemarksDialog}\r\n              >\r\n                <i className=\"fa fa-stream\"></i> Fetch Selected\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","/* eslint-disable no-restricted-imports */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { shallowEqual, useSelector } from \"react-redux\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { ModalProgressBar } from \"../../../../../../../_metronic/_partials/controls\";\r\n\r\nexport function RemarkEditDialogHeader({ id }) {\r\n  const [title, setTitle] = useState(\"\");\r\n  // Remarks Redux state\r\n  const { remarkForEdit, actionsLoading } = useSelector(\r\n    (state) => ({\r\n      remarkForEdit: state.remarks.remarkForEdit,\r\n      actionsLoading: state.remarks.actionsLoading,\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  useEffect(() => {\r\n    let _title = id ? \"\" : \"New Remark\";\r\n    if (remarkForEdit && id) {\r\n      _title = \"Edit remark\";\r\n    }\r\n\r\n    setTitle(_title);\r\n    // eslint-disable-next-line\r\n  }, [remarkForEdit, actionsLoading]);\r\n\r\n  return (\r\n    <>\r\n      {actionsLoading && <ModalProgressBar variant=\"query\" />}\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"example-modal-sizes-title-lg\">{title}</Modal.Title>\r\n      </Modal.Header>\r\n    </>\r\n  );\r\n}\r\n","// Form is based on Formik\r\n// Data validation is based on Yup\r\n// Please, be familiar with article first:\r\n// https://hackernoon.com/react-form-validation-with-formik-and-yup-8b76bda62e10\r\nimport React from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport {\r\n  Input,\r\n  Select,\r\n  DatePickerField,\r\n} from \"../../../../../../../_metronic/_partials/controls\";\r\n\r\n// Validation schema\r\nconst RemarkEditSchema = Yup.object().shape({\r\n  text: Yup.string()\r\n    .min(2, \"Minimum 2 symbols\")\r\n    .max(50, \"Maximum 50 symbols\")\r\n    .required(\"Text is required\"),\r\n  type: Yup.number().required(\"Type is required\"),\r\n  dueDate: Yup.mixed()\r\n    .nullable(false)\r\n    .required(\"Due date is required\"),\r\n});\r\n\r\nexport function RemarkEditForm({ saveRemark, remark, actionsLoading, onHide }) {\r\n  return (\r\n    <>\r\n      <Formik\r\n        enableReinitialize={true}\r\n        initialValues={remark}\r\n        validationSchema={RemarkEditSchema}\r\n        onSubmit={(values) => saveRemark(values)}\r\n      >\r\n        {({ handleSubmit }) => (\r\n          <>\r\n            <Modal.Body className=\"overlay overlay-block cursor-default\">\r\n              {actionsLoading && (\r\n                <div className=\"overlay-layer bg-transparent\">\r\n                  <div className=\"spinner spinner-lg spinner-success\" />\r\n                </div>\r\n              )}\r\n              <Form className=\"form form-label-right\">\r\n                <div className=\"form-group row\">\r\n                  <div className=\"col-lg-12\">\r\n                    <Field\r\n                      name=\"text\"\r\n                      component={Input}\r\n                      placeholder=\"Text\"\r\n                      label=\"Text\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                  <div className=\"col-lg-12\">\r\n                    <DatePickerField name=\"dueDate\" label=\"Due date\" />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                  <div className=\"col-lg-12\">\r\n                    <Select name=\"type\" label=\"Type\">\r\n                      <option value=\"0\">Info</option>\r\n                      <option value=\"1\">Note</option>\r\n                      <option value=\"2\">Reminder</option>\r\n                    </Select>\r\n                  </div>\r\n                </div>\r\n              </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <button\r\n                type=\"button\"\r\n                onClick={onHide}\r\n                className=\"btn btn-light btn-elevate\"\r\n              >\r\n                Cancel\r\n              </button>\r\n              <> </>\r\n              <button\r\n                type=\"submit\"\r\n                onClick={() => handleSubmit()}\r\n                className=\"btn btn-primary btn-elevate\"\r\n              >\r\n                Save\r\n              </button>\r\n            </Modal.Footer>\r\n          </>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useMemo } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport * as actions from \"../../../../_redux/remarks/remarksActions\";\r\nimport { RemarkEditDialogHeader } from \"./RemarkEditDialogHeader\";\r\nimport { RemarkEditForm } from \"./RemarkEditForm\";\r\nimport { useRemarksUIContext } from \"../RemarksUIContext\";\r\n\r\nfunction getFormattedDate(date) {\r\n  if (typeof date === \"string\") {\r\n    return date;\r\n  }\r\n\r\n  var year = date.getFullYear();\r\n\r\n  var month = (1 + date.getMonth()).toString();\r\n  month = month.length > 1 ? month : \"0\" + month;\r\n\r\n  var day = date.getDate().toString();\r\n  day = day.length > 1 ? day : \"0\" + day;\r\n\r\n  return month + \"/\" + day + \"/\" + year;\r\n}\r\n\r\nexport function RemarkEditDialog() {\r\n  // Remarks UI Context\r\n  const remarksUIContext = useRemarksUIContext();\r\n  const remarksUIProps = useMemo(() => {\r\n    return {\r\n      id: remarksUIContext.selectedId,\r\n      setIds: remarksUIContext.setIds,\r\n      productId: remarksUIContext.productId,\r\n      queryParams: remarksUIContext.queryParams,\r\n      showEditRemarkDialog: remarksUIContext.showEditRemarkDialog,\r\n      closeEditRemarkDialog: remarksUIContext.closeEditRemarkDialog,\r\n      initRemark: remarksUIContext.initRemark,\r\n    };\r\n  }, [remarksUIContext]);\r\n\r\n  // Remarks Redux state\r\n  const dispatch = useDispatch();\r\n  const { actionsLoading, remarkForEdit } = useSelector(\r\n    (state) => ({\r\n      actionsLoading: state.remarks.actionsLoading,\r\n      remarkForEdit: state.remarks.remarkForEdit,\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  useEffect(() => {\r\n    // server request for getting remark by seleted id\r\n    dispatch(actions.fetchRemark(remarksUIProps.id));\r\n  }, [remarksUIProps.id, dispatch]);\r\n\r\n  const saveRemark = (remark) => {\r\n    remark.dueDate = getFormattedDate(remark.dueDate);\r\n    if (!remarksUIProps.id) {\r\n      // server request for creating remarks\r\n      dispatch(actions.createRemark(remark)).then(() => {\r\n        // refresh list after deletion\r\n        dispatch(\r\n          actions.fetchRemarks(\r\n            remarksUIProps.queryParams,\r\n            remarksUIProps.productId\r\n          )\r\n        ).then(() => {\r\n          // clear selections list\r\n          remarksUIProps.setIds([]);\r\n          // closing edit modal\r\n          remarksUIProps.closeEditRemarkDialog();\r\n        });\r\n      });\r\n    } else {\r\n      // server request for updating remarks\r\n      dispatch(actions.updateRemark(remark)).then(() => {\r\n        // refresh list after deletion\r\n        dispatch(\r\n          // refresh list after deletion\r\n          actions.fetchRemarks(\r\n            remarksUIProps.queryParams,\r\n            remarksUIProps.productId\r\n          )\r\n        ).then(() => {\r\n          // clear selections list\r\n          remarksUIProps.setIds([]);\r\n          // closing edit modal\r\n          remarksUIProps.closeEditRemarkDialog();\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      show={remarksUIProps.showEditRemarkDialog}\r\n      onHide={remarksUIProps.closeEditRemarkDialog}\r\n      aria-labelledby=\"example-modal-sizes-title-lg\"\r\n    >\r\n      <RemarkEditDialogHeader id={remarksUIProps.id} />\r\n      <RemarkEditForm\r\n        saveRemark={saveRemark}\r\n        actionsLoading={actionsLoading}\r\n        remark={remarkForEdit || remarksUIProps.initRemark}\r\n        onHide={remarksUIProps.closeEditRemarkDialog}\r\n      />\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { useMemo } from \"react\";\r\nimport { RemarksFilter } from \"./RemarksFilter\";\r\nimport { RemarksTable } from \"./RemarksTable\";\r\nimport { RemarksLoadingDialog } from \"./RemarksLoadingDialog\";\r\nimport { RemarksDeleteDialog } from \"./RemarksDeleteDialog\";\r\nimport { RemarkDeleteDialog } from \"./RemarkDeleteDialog\";\r\nimport { RemarksFetchDialog } from \"./RemarksFetchDialog\";\r\nimport { RemarksGrouping } from \"./RemarksGrouping\";\r\nimport { RemarkEditDialog } from \"./remark-edit-dialog/RemarkEditDialog\";\r\nimport { useRemarksUIContext } from \"./RemarksUIContext\";\r\n\r\nexport function Remarks() {\r\n  // Remarks UI Context\r\n  const remarksUIContext = useRemarksUIContext();\r\n  const remarksUIProps = useMemo(() => {\r\n    return { ids: remarksUIContext.ids };\r\n  }, [remarksUIContext]);\r\n\r\n  return (\r\n    <>\r\n      <RemarksLoadingDialog />\r\n      <RemarkEditDialog />\r\n      <RemarkDeleteDialog />\r\n      <RemarksDeleteDialog />\r\n      <RemarksFetchDialog />\r\n      <div className=\"form margin-b-30\">\r\n        <RemarksFilter />\r\n        {remarksUIProps.ids.length > 0 && <RemarksGrouping />}\r\n      </div>\r\n      <RemarksTable />\r\n    </>\r\n  );\r\n}\r\n","/* eslint-disable no-script-url,jsx-a11y/anchor-is-valid,jsx-a11y/role-supports-aria-props */\r\nimport React, { useEffect, useState, useRef } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { shallowEqual, useSelector } from \"react-redux\";\r\nimport * as actions from \"../../../_redux/products/productsActions\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar,\r\n} from \"../../../../../../_metronic/_partials/controls\";\r\nimport { ProductEditForm } from \"./ProductEditForm\";\r\nimport { Specifications } from \"../product-specifications/Specifications\";\r\nimport { SpecificationsUIProvider } from \"../product-specifications/SpecificationsUIContext\";\r\nimport { useSubheader } from \"../../../../../../_metronic/layout\";\r\nimport { ModalProgressBar } from \"../../../../../../_metronic/_partials/controls\";\r\nimport { RemarksUIProvider } from \"../product-remarks/RemarksUIContext\";\r\nimport { Remarks } from \"../product-remarks/Remarks\";\r\n\r\nconst initProduct = {\r\n  id: undefined,\r\n  model: \"\",\r\n  manufacture: \"Pontiac\",\r\n  modelYear: 2020,\r\n  mileage: 0,\r\n  description: \"\",\r\n  color: \"Red\",\r\n  price: 10000,\r\n  condition: 1,\r\n  status: 0,\r\n  VINCode: \"\",\r\n};\r\n\r\nexport function ProductEdit({\r\n  history,\r\n  match: {\r\n    params: { id },\r\n  },\r\n}) {\r\n  // Subheader\r\n  const suhbeader = useSubheader();\r\n\r\n  // Tabs\r\n  const [tab, setTab] = useState(\"basic\");\r\n  const [title, setTitle] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  // const layoutDispatch = useContext(LayoutContext.Dispatch);\r\n  const { actionsLoading, productForEdit } = useSelector(\r\n    (state) => ({\r\n      actionsLoading: state.products.actionsLoading,\r\n      productForEdit: state.products.productForEdit,\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(actions.fetchProduct(id));\r\n  }, [id, dispatch]);\r\n\r\n  useEffect(() => {\r\n    let _title = id ? \"\" : \"New Product\";\r\n    if (productForEdit && id) {\r\n      _title = `Edit product '${productForEdit.manufacture} ${productForEdit.model} - ${productForEdit.modelYear}'`;\r\n    }\r\n\r\n    setTitle(_title);\r\n    suhbeader.setTitle(_title);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [productForEdit, id]);\r\n\r\n  const saveProduct = (values) => {\r\n    if (!id) {\r\n      dispatch(actions.createProduct(values)).then(() => backToProductsList());\r\n    } else {\r\n      dispatch(actions.updateProduct(values)).then(() => backToProductsList());\r\n    }\r\n  };\r\n\r\n  const btnRef = useRef();  \r\n  const saveProductClick = () => {\r\n    if (btnRef && btnRef.current) {\r\n      btnRef.current.click();\r\n    }\r\n  };\r\n\r\n  const backToProductsList = () => {\r\n    history.push(`/e-commerce/products`);\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      {actionsLoading && <ModalProgressBar />}\r\n      <CardHeader title={title}>\r\n        <CardHeaderToolbar>\r\n          <button\r\n            type=\"button\"\r\n            onClick={backToProductsList}\r\n            className=\"btn btn-light\"\r\n          >\r\n            <i className=\"fa fa-arrow-left\"></i>\r\n            Back\r\n          </button>\r\n          {`  `}\r\n          <button className=\"btn btn-light ml-2\">\r\n            <i className=\"fa fa-redo\"></i>\r\n            Reset\r\n          </button>\r\n          {`  `}\r\n          <button\r\n            type=\"submit\"\r\n            className=\"btn btn-primary ml-2\"\r\n            onClick={saveProductClick}\r\n          >\r\n            Save\r\n          </button>\r\n        </CardHeaderToolbar>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <ul className=\"nav nav-tabs nav-tabs-line \" role=\"tablist\">\r\n          <li className=\"nav-item\" onClick={() => setTab(\"basic\")}>\r\n            <a\r\n              className={`nav-link ${tab === \"basic\" && \"active\"}`}\r\n              data-toggle=\"tab\"\r\n              role=\"tab\"\r\n              aria-selected={(tab === \"basic\").toString()}\r\n            >\r\n              Basic info\r\n            </a>\r\n          </li>\r\n          {id && (\r\n            <>\r\n              {\" \"}\r\n              <li className=\"nav-item\" onClick={() => setTab(\"remarks\")}>\r\n                <a\r\n                  className={`nav-link ${tab === \"remarks\" && \"active\"}`}\r\n                  data-toggle=\"tab\"\r\n                  role=\"button\"\r\n                  aria-selected={(tab === \"remarks\").toString()}\r\n                >\r\n                  Product remarks\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\" onClick={() => setTab(\"specs\")}>\r\n                <a\r\n                  className={`nav-link ${tab === \"specs\" && \"active\"}`}\r\n                  data-toggle=\"tab\"\r\n                  role=\"tab\"\r\n                  aria-selected={(tab === \"specs\").toString()}\r\n                >\r\n                  Product specifications\r\n                </a>\r\n              </li>\r\n            </>\r\n          )}\r\n        </ul>\r\n        <div className=\"mt-5\">\r\n          {tab === \"basic\" && (\r\n            <ProductEditForm\r\n              actionsLoading={actionsLoading}\r\n              product={productForEdit || initProduct}\r\n              btnRef={btnRef}\r\n              saveProduct={saveProduct}\r\n            />\r\n          )}\r\n          {tab === \"remarks\" && id && (\r\n            <RemarksUIProvider currentProductId={id}>\r\n              <Remarks />\r\n            </RemarksUIProvider>\r\n          )}\r\n          {tab === \"specs\" && id && (\r\n            <SpecificationsUIProvider currentProductId={id}>\r\n              <Specifications />\r\n            </SpecificationsUIProvider>\r\n          )}\r\n        </div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n}\r\n","import React, { Suspense } from \"react\";\r\nimport { Redirect, Switch } from \"react-router-dom\";\r\nimport { CustomersPage } from \"./customers/CustomersPage\";\r\nimport { ProductsPage } from \"./products/ProductsPage\";\r\nimport { ProductEdit } from \"./products/product-edit/ProductEdit\";\r\nimport { LayoutSplashScreen, ContentRoute } from \"../../../../_metronic/layout\";\r\nimport { ADMIN_ROUTE } from '../../../../app/pages/helper/api'\r\n\r\nexport default function eCommercePage() {\r\n  return (\r\n    <Suspense fallback={<LayoutSplashScreen />}>\r\n      <Switch>\r\n        {\r\n          /* Redirect from eCommerce root URL to /customers */\r\n          <Redirect\r\n            exact={true}\r\n            from={\"/\"+ADMIN_ROUTE+\"/e-commerce\"}\r\n            to={\"/\"+ADMIN_ROUTE+\"/customers\"}\r\n          />\r\n        }\r\n        <ContentRoute path={\"/\"+ADMIN_ROUTE+\"/customers\"} component={CustomersPage} />\r\n        <ContentRoute path={\"/\"+ADMIN_ROUTE+\"/products/new\"} component={ProductEdit} />\r\n        <ContentRoute\r\n          path={\"/\"+ADMIN_ROUTE+\"/e-commerce/products/:id/edit\"}\r\n          component={ProductEdit}\r\n        />\r\n\r\n        <ContentRoute path={\"/\"+ADMIN_ROUTE+\"/products\"} component={ProductsPage} />\r\n      </Switch>\r\n    </Suspense>\r\n  );\r\n}\r\n"],"sourceRoot":""}