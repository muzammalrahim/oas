{"version":3,"sources":["app/modules/ECommerce/_redux/specifications/specificationsActions.js","app/modules/ECommerce/_redux/specifications/specificationsCrud.js","app/modules/ECommerce/_redux/remarks/remarksActions.js","app/modules/ECommerce/_redux/remarks/remarksCrud.js","app/modules/ECommerce/pages/categories/categories-loading-dialog/CategoriesLoadingDialog.js","app/modules/ECommerce/_redux/categories/categoriesCrud.js","app/modules/ECommerce/_redux/categories/categoriesActions.js","app/modules/ECommerce/pages/categories/CategoriesUIHelpers.js","app/modules/ECommerce/pages/categories/CategoriesUIContext.js","app/modules/ECommerce/pages/categories/category-delete-dialog/CategoryDeleteDialog.js","app/modules/ECommerce/pages/categories/categories-delete-dialog/CategoriesDeleteDialog.js","app/modules/ECommerce/pages/categories/categories-fetch-dialog/CategoriesFetchDialog.js","app/modules/ECommerce/pages/categories/categories-update-status-dialog/CategoriesUpdateStatusDialog.js","app/modules/ECommerce/pages/categories/categories-table/column-formatters/ActionsColumnFormatter.js","app/modules/ECommerce/pages/categories/categories-table/CategoriesTable.js","app/modules/ECommerce/pages/categories/categories-grouping/CategoriesGrouping.js","app/modules/ECommerce/pages/categories/CategoriesCard.js","app/modules/ECommerce/pages/categories/CategoriesPage.js","app/modules/ECommerce/pages/categories/category-edit/CategoryEditForm.js","app/modules/ECommerce/pages/categories/category-specifications/SpecificationsUIHelper.js","app/modules/ECommerce/pages/categories/category-specifications/SpecificationsUIContext.js","app/modules/ECommerce/pages/categories/category-specifications/specification-edit-dialog/SpecificationEditForm.js","app/modules/ECommerce/pages/categories/category-remarks/RemarksUIContext.js","app/modules/ECommerce/pages/categories/category-remarks/remark-edit-dialog/RemarkEditForm.js","app/modules/ECommerce/pages/categories/category-edit/CategoryEdit.js","app/modules/ECommerce/pages/categories/CategoriesPages.js"],"names":["actions","specificationsSlice","fetchSpecifications","queryParams","productId","dispatch","startCall","callType","callTypes","list","axios","post","requestFromServer","then","response","data","totalCount","entities","specificationsFetched","catch","error","clientMessage","catchError","fetchSpecification","id","action","specificationId","get","specification","specificationFetched","specificationForEdit","undefined","deleteSpecification","delete","specificationDeleted","createSpecification","specificationForCreation","specificationCreated","updateSpecification","put","specificationUpdated","deleteSpecifications","ids","specificationsDeleted","remarksSlice","fetchRemarks","remarksFetched","fetchRemark","remarkId","remark","remarkFetched","remarkForEdit","deleteRemark","remarkDeleted","createRemark","remarkForCreation","remarkCreated","updateRemark","remarkUpdated","deleteRemarks","console","log","remarksDeleted","CategoriesLoadingDialog","isLoading","useSelector","state","categories","listLoading","shallowEqual","useEffect","text","PRODUCTS_URL","process","categoriesSlice","fetchCategories","filter","params","count","results","categoriesFetched","fetchCategory","categoryId","category","supplier","category_manufacturer","category_category","categoryFetched","categoryForEdit","deleteCategory","categoryDeleted","createCategory","categoryForCreation","categoryCreated","updateCategory","categoryUpdated","updateCategoriesStatus","status","categoriesStatusUpdated","deleteCategories","categoriesDeleted","CategoryStatusCssClasses","defaultSorted","dataField","order","sizePerPageList","value","initialFilter","model","manufacture","VINCode","sortOrder","sortField","pageNumber","pageSize","CategoriesUIContext","createContext","useCategoriesUIContext","useContext","Consumer","CategoriesUIProvider","categoriesUIEvents","children","useState","setQueryParamsBase","setIds","setQueryParams","useCallback","nextQueryParams","prevQueryParams","isFunction","isEqual","newCategoryButtonClick","openEditCategoryPage","openDeleteCategoryDialog","openDeleteCategoriesDialog","openFetchCategoriesDialog","openUpdateCategoriesStatusDialog","Provider","CategoryDeleteDialog","show","onHide","categoriesUIContext","categoriesUIProps","useMemo","useDispatch","actionsLoading","Modal","aria-labelledby","variant","Header","closeButton","Title","Body","Footer","type","onClick","className","CategoriesDeleteDialog","length","selectedCategories","_categories","forEach","find","el","push","CategoriesFetchDialog","map","key","style","width","CategoriesUpdateStatusDialog","setStatus","onChange","e","target","ActionsColumnFormatter","cellContent","row","rowIndex","OverlayTrigger","overlay","Tooltip","src","toAbsoluteUrl","CategoriesTable","currentState","columns","sort","sortCaret","formatter","columnFormatters","formatExtraData","classes","headerClasses","minWidth","paginationOptions","custom","totalSize","uiHelpers","sizePerPage","page","pagination","paginationFactory","paginationProps","paginationTableProps","wrapperClasses","bootstrap4","bordered","remote","keyField","onTableChange","getHandlerTableChange","selectRow","getSelectRow","CategoriesGrouping","CategoriesCard","title","CategoriesPage","history","ADMIN_ROUTE","path","match","CategoryEditSchema","withAsyncPaginate","Creatable","Yup","shape","name","min","max","required","CategoryEditForm","btnRef","saveCategory","enableReinitialize","initialValues","validationSchema","onSubmit","values","handleSubmit","component","Input","placeholder","label","display","ref","SpecificationsUIContext","specId","RemarksUIContext","dueDate","nullable","initCategory","CategoryEdit","suhbeader","useSubheader","setTitle","_title","useRef","backToCategoriesList","current","click","CategoriesPages","fallback"],"mappings":"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","file":"static/js/4.54526c88.chunk.js","sourcesContent":["import * as requestFromServer from \"./specificationsCrud\";\r\nimport {specificationsSlice, callTypes} from \"./specificationsSlice\";\r\n\r\nconst {actions} = specificationsSlice;\r\n\r\nexport const fetchSpecifications = (queryParams, productId) => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.list }));\r\n  if (!productId) {\r\n    return dispatch(\r\n      actions.specificationsFetched({ totalCount: 0, entities: null })\r\n    );\r\n  }\r\n\r\n  return requestFromServer\r\n    .findSpecifications(queryParams, productId)\r\n    .then(response => {\r\n      const { totalCount, entities } = response.data;\r\n      dispatch(actions.specificationsFetched({ totalCount, entities }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't find specifications\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.list }));\r\n    });\r\n};\r\n\r\nexport const fetchSpecification = id => dispatch => {\r\n  if (!id) {\r\n    return dispatch(\r\n      actions.specificationFetched({ specificationForEdit: undefined })\r\n    );\r\n  }\r\n\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .getSpecificationById(id)\r\n    .then(response => {\r\n      const specification = response.data;\r\n      dispatch(\r\n        actions.specificationFetched({ specificationForEdit: specification })\r\n      );\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't find specification\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const deleteSpecification = id => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .deleteSpecification(id)\r\n    .then(response => {\r\n      dispatch(actions.specificationDeleted({ id }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't delete specification\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const createSpecification = specificationForCreation => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .createSpecification(specificationForCreation)\r\n    .then(response => {\r\n      const { specification } = response.data;\r\n      dispatch(actions.specificationCreated({ specification }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't create specification\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const updateSpecification = specification => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .updateSpecification(specification)\r\n    .then(() => {\r\n      dispatch(actions.specificationUpdated({ specification }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't update specification\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const deleteSpecifications = ids => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .deleteSpecifications(ids)\r\n    .then(() => {\r\n      dispatch(actions.specificationsDeleted({ ids }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't delete specifications\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n","import axios from \"axios\";\r\n\r\nexport const SPECIFICATIONS_URL = \"api/specifications\";\r\n\r\n// CREATE =>  POST: add a new specifications to the server\r\nexport function createSpecification(specification) {\r\n  return axios.post(SPECIFICATIONS_URL, { specification });\r\n}\r\n\r\n// READ\r\n// Server should return filtered specifications by productId\r\nexport function getAllProductSpecificationsByProductId(productId) {\r\n  return axios.get(`${SPECIFICATIONS_URL}?productId=${productId}`);\r\n}\r\n\r\nexport function getSpecificationById(specificationId) {\r\n  return axios.get(`${SPECIFICATIONS_URL}/${specificationId}`);\r\n}\r\n\r\n// Server should return sorted/filtered specifications and merge with items from state\r\n// TODO: Change your URL to REAL API, right now URL is 'api/specificationsfind/{productId}'. Should be 'api/specifications/find/{productId}'!!!\r\nexport function findSpecifications(queryParams, productId) {\r\n  return axios.post(`${SPECIFICATIONS_URL}find/${productId}`, { queryParams });\r\n}\r\n\r\n// UPDATE => PUT: update the specification\r\nexport function updateSpecification(specification) {\r\n  return axios.put(`${SPECIFICATIONS_URL}/${specification.id}`, {\r\n    specification\r\n  });\r\n}\r\n\r\n// DELETE => delete the specification\r\nexport function deleteSpecification(specificationId) {\r\n  return axios.delete(`${SPECIFICATIONS_URL}/${specificationId}`);\r\n}\r\n\r\n// DELETE specifications by ids\r\nexport function deleteSpecifications(ids) {\r\n  return axios.post(`${SPECIFICATIONS_URL}/deleteSpecifications`, { ids });\r\n}\r\n","import * as requestFromServer from \"./remarksCrud\";\r\nimport {remarksSlice, callTypes} from \"./remarksSlice\";\r\n\r\nconst {actions} = remarksSlice;\r\n\r\nexport const fetchRemarks = (queryParams, productId) => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.list }));\r\n  if (!productId) {\r\n    return dispatch(actions.remarksFetched({ totalCount: 0, entities: null }));\r\n  }\r\n\r\n  return requestFromServer\r\n    .findRemarks(queryParams, productId)\r\n    .then(response => {\r\n      const { totalCount, entities } = response.data;\r\n      dispatch(actions.remarksFetched({ totalCount, entities }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't find remarks\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.list }));\r\n    });\r\n};\r\n\r\nexport const fetchRemark = id => dispatch => {\r\n  if (!id) {\r\n    return dispatch(actions.remarkFetched({ remarkForEdit: undefined }));\r\n  }\r\n\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .getRemarkById(id)\r\n    .then(response => {\r\n      const remark = response.data;\r\n      dispatch(actions.remarkFetched({ remarkForEdit: remark }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't find remark\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const deleteRemark = id => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .deleteRemark(id)\r\n    .then(response => {\r\n      dispatch(actions.remarkDeleted({ id }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't delete remark\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const createRemark = remarkForCreation => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .createRemark(remarkForCreation)\r\n    .then(response => {\r\n      const { remark } = response.data;\r\n      dispatch(actions.remarkCreated({ remark }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't create remark\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const updateRemark = remark => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .updateRemark(remark)\r\n    .then(() => {\r\n      dispatch(actions.remarkUpdated({ remark }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't update remark\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const deleteRemarks = ids => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .deleteRemarks(ids)\r\n    .then(() => {\r\n      console.log(\"delete return\");\r\n      dispatch(actions.remarksDeleted({ ids }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't delete remarks\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n","import axios from \"axios\";\r\n\r\nexport const REMARKS_URL = \"api/remarks\";\r\n\r\n// CREATE =>  POST: add a new remark to the server\r\nexport function createRemark(remark) {\r\n  return axios.post(REMARKS_URL, { remark });\r\n}\r\n\r\n// READ\r\n// Server should return filtered remarks by productId\r\nexport function getAllProductRemarksByProductId(productId) {\r\n  return axios.get(`${REMARKS_URL}?productId=${productId}`);\r\n}\r\n\r\nexport function getRemarkById(remarkId) {\r\n  return axios.get(`${REMARKS_URL}/${remarkId}`);\r\n}\r\n\r\n// Server should return sorted/filtered remarks and merge with items from state\r\n// TODO: Change your URL to REAL API, right now URL is 'api/remarksfind/{productId}'. Should be 'api/remarks/find/{productId}'!!!\r\nexport function findRemarks(queryParams, productId) {\r\n  return axios.post(`${REMARKS_URL}find/${productId}`, { queryParams });\r\n}\r\n\r\n// UPDATE => PUT: update the remark\r\nexport function updateRemark(remark) {\r\n  return axios.put(`${REMARKS_URL}/${remark.id}`, { remark });\r\n}\r\n\r\n// DELETE => delete the remark\r\nexport function deleteRemark(remarkId) {\r\n  return axios.delete(`${REMARKS_URL}/${remarkId}`);\r\n}\r\n\r\n// DELETE Remarks by ids\r\nexport function deleteRemarks(ids) {\r\n  return axios.post(`${REMARKS_URL}/deleteRemarks`, { ids });\r\n}\r\n","import React, {useEffect} from \"react\";\r\nimport {shallowEqual, useSelector} from \"react-redux\";\r\nimport {LoadingDialog} from \"../../../../../../_metronic/_partials/controls\";\r\n\r\nexport function CategoriesLoadingDialog() {\r\n  const { isLoading } = useSelector(\r\n    state => ({ isLoading: state.categories.listLoading }),\r\n    shallowEqual\r\n  );\r\n  useEffect(() => {}, [isLoading]);\r\n  return <LoadingDialog isLoading={isLoading} text=\"Loading ...\" />;\r\n}\r\n","import axios from \"axios\";\r\n// import { API_URL } from '../../../../pages/helper/api'\r\n\r\nexport const PRODUCTS_URL = process.env.REACT_APP_API_URL + \"product-category\";\r\n\r\n// CREATE =>  POST: add a new category to the server\r\nexport function createCategory(category) {\r\n  return axios.post(PRODUCTS_URL+'/', { ...category });\r\n}\r\n\r\n// READ\r\nexport function getAllCategories({filter}) {\r\n  return axios.get(PRODUCTS_URL,  {\r\n    params: filter\r\n  });\r\n}\r\n\r\nexport function getCategoryById(categoryId) {\r\n  return axios.get(`${PRODUCTS_URL}/${categoryId}`);\r\n}\r\n\r\n// Method from server should return QueryResultsModel(items: any[], totalsCount: number)\r\n// items => filtered/sorted result\r\nexport function findCategories(queryParams) {\r\n  return axios.post(`${PRODUCTS_URL}/find`, { queryParams });\r\n}\r\n\r\n// UPDATE => PUT: update the procuct on the server\r\nexport function updateCategory(category) {\r\n  return axios.put(`${PRODUCTS_URL}/${category.id}/`, { ...category });\r\n}\r\n\r\n// UPDATE Status\r\nexport function updateStatusForCategories(ids, status) {\r\n  return axios.post(`${PRODUCTS_URL}/updateStatusForCategories`, {\r\n    ids,\r\n    status\r\n  });\r\n}\r\n\r\n// DELETE => delete the category from the server\r\nexport function deleteCategory(categoryId) {\r\n  return axios.delete(`${PRODUCTS_URL}/${categoryId}`);\r\n}\r\n\r\n// DELETE Categories by ids\r\nexport function deleteCategories(ids) {\r\n  return axios.post(`${PRODUCTS_URL}/delete-all/`, { ids });\r\n}\r\n","import * as requestFromServer from \"./categoriesCrud\";\r\nimport {categoriesSlice, callTypes} from \"./categoriesSlice\";\r\n\r\nconst {actions} = categoriesSlice;\r\n\r\nexport const fetchCategories = queryParams => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.list }));\r\n  return requestFromServer\r\n    .getAllCategories(queryParams)\r\n    .then(response => {\r\n      const { count, results } = response.data;\r\n      dispatch(actions.categoriesFetched({ count, results }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't find categories\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.list }));\r\n    });\r\n};\r\n\r\nexport const fetchCategory = id => dispatch => {\r\n  if (!id) {\r\n    return dispatch(actions.categoryFetched({ categoryForEdit: undefined }));\r\n  }\r\n\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .getCategoryById(id)\r\n    .then(response => {\r\n      const category = {\r\n        ...response.data, \r\n        supplier:response.data.supplier ? response.data.supplier.id : \"\",\r\n        category_manufacturer:response.data.category_manufacturer ? response.data.category_manufacturer.id : \"\",\r\n        category_category:response.data.category_category ? response.data.category_category.id : \"\",\r\n      };\r\n\r\n      dispatch(actions.categoryFetched({ categoryForEdit: category }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't find category\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const deleteCategory = id => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .deleteCategory(id)\r\n    .then(response => {\r\n      dispatch(actions.categoryDeleted({ id }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't delete category\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const createCategory = categoryForCreation => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .createCategory(categoryForCreation)\r\n    .then(response => {\r\n      const { data } = response;\r\n      dispatch(actions.categoryCreated({ category:data }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't create category\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const updateCategory = category => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  console.log('proudct', category);\r\n  return requestFromServer\r\n    .updateCategory(category)\r\n    .then(() => {\r\n      dispatch(actions.categoryUpdated({ category }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't update category\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const updateCategoriesStatus = (ids, status) => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .updateStatusForCategories(ids, status)\r\n    .then(() => {\r\n      dispatch(actions.categoriesStatusUpdated({ ids, status }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't update categories status\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const deleteCategories = ids => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .deleteCategories(ids)\r\n    .then(() => {\r\n      dispatch(actions.categoriesDeleted({ ids }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't delete categories\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n","export const CategoryStatusCssClasses = [\"danger\", \"success\", \"info\", \"\"];\r\nexport const CategoryStatusTitles = [\"Inactive\", \"Active\"];\r\nexport const CategoryConditionCssClasses = [\"success\", \"danger\", \"\"];\r\nexport const CategoryConditionTitles = ['NE','NS', 'SV', 'AR', 'FN', 'US', 'RP'];\r\nexport const YES_NO_OPTIONS = ['YES', 'NO'];\r\nexport const UOM_CHOICES = ['CM', 'BOX', 'KG'];\r\nexport const defaultSorted = [{ dataField: \"id\", order: \"asc\" }];\r\nexport const sizePerPageList = [\r\n  { text: \"3\", value: 3 },\r\n  { text: \"5\", value: 5 },\r\n  { text: \"10\", value: 10 }\r\n];\r\nexport const initialFilter = {\r\n  filter: {\r\n    model: \"\",\r\n    manufacture: \"\",\r\n    VINCode: \"\"\r\n  },\r\n  sortOrder: \"asc\", // asc||desc\r\n  sortField: \"VINCode\",\r\n  pageNumber: 1,\r\n  pageSize: 10\r\n};\r\nexport const AVAILABLE_COLORS = [\r\n  \"Red\",\r\n  \"CadetBlue\",\r\n  \"Eagle\",\r\n  \"Gold\",\r\n  \"LightSlateGrey\",\r\n  \"RoyalBlue\",\r\n  \"Crimson\",\r\n  \"Blue\",\r\n  \"Sienna\",\r\n  \"Indigo\",\r\n  \"Green\",\r\n  \"Violet\",\r\n  \"GoldenRod\",\r\n  \"OrangeRed\",\r\n  \"Khaki\",\r\n  \"Teal\",\r\n  \"Purple\",\r\n  \"Orange\",\r\n  \"Pink\",\r\n  \"Black\",\r\n  \"DarkTurquoise\"\r\n];\r\n\r\nexport const AVAILABLE_MANUFACTURES = [\r\n  \"Pontiac\",\r\n  \"Kia\",\r\n  \"Lotus\",\r\n  \"Subaru\",\r\n  \"Jeep\",\r\n  \"Isuzu\",\r\n  \"Mitsubishi\",\r\n  \"Oldsmobile\",\r\n  \"Chevrolet\",\r\n  \"Chrysler\",\r\n  \"Audi\",\r\n  \"Suzuki\",\r\n  \"GMC\",\r\n  \"Cadillac\",\r\n  \"Infinity\",\r\n  \"Mercury\",\r\n  \"Dodge\",\r\n  \"Ram\",\r\n  \"Lexus\",\r\n  \"Lamborghini\",\r\n  \"Honda\",\r\n  \"Nissan\",\r\n  \"Ford\",\r\n  \"Hyundai\",\r\n  \"Saab\",\r\n  \"Toyota\"\r\n];\r\n","import React, { createContext, useContext, useState, useCallback } from \"react\";\r\nimport { isEqual, isFunction } from \"lodash\";\r\nimport { initialFilter } from \"./CategoriesUIHelpers\";\r\n\r\nconst CategoriesUIContext = createContext();\r\n\r\nexport function useCategoriesUIContext() {\r\n  return useContext(CategoriesUIContext);\r\n}\r\n\r\nexport const CategoriesUIConsumer = CategoriesUIContext.Consumer;\r\n\r\nexport function CategoriesUIProvider({ categoriesUIEvents, children }) {\r\n  const [queryParams, setQueryParamsBase] = useState(initialFilter);\r\n  const [ids, setIds] = useState([]);\r\n  const setQueryParams = useCallback((nextQueryParams) => {\r\n    setQueryParamsBase((prevQueryParams) => {\r\n      if (isFunction(nextQueryParams)) {\r\n        nextQueryParams = nextQueryParams(prevQueryParams);\r\n      }\r\n\r\n      if (isEqual(prevQueryParams, nextQueryParams)) {\r\n        return prevQueryParams;\r\n      }\r\n\r\n      return nextQueryParams;\r\n    });\r\n  }, []);\r\n\r\n  const value = {\r\n    queryParams,\r\n    setQueryParamsBase,\r\n    ids,\r\n    setIds,\r\n    setQueryParams,\r\n    newCategoryButtonClick: categoriesUIEvents.newCategoryButtonClick,\r\n    openEditCategoryPage: categoriesUIEvents.openEditCategoryPage,\r\n    openDeleteCategoryDialog: categoriesUIEvents.openDeleteCategoryDialog,\r\n    openDeleteCategoriesDialog: categoriesUIEvents.openDeleteCategoriesDialog,\r\n    openFetchCategoriesDialog: categoriesUIEvents.openFetchCategoriesDialog,\r\n    openUpdateCategoriesStatusDialog:\r\n      categoriesUIEvents.openUpdateCategoriesStatusDialog,\r\n  };\r\n\r\n  return (\r\n    <CategoriesUIContext.Provider value={value}>\r\n      {children}\r\n    </CategoriesUIContext.Provider>\r\n  );\r\n}\r\n","/* eslint-disable no-restricted-imports */\r\nimport React, { useEffect, useMemo } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport { ModalProgressBar } from \"../../../../../../_metronic/_partials/controls\";\r\nimport * as actions from \"../../../_redux/categories/categoriesActions\";\r\nimport { useCategoriesUIContext } from \"../CategoriesUIContext\";\r\n\r\nexport function CategoryDeleteDialog({ id, show, onHide }) {\r\n  // Categories UI Context\r\n  const categoriesUIContext = useCategoriesUIContext();\r\n  const categoriesUIProps = useMemo(() => {\r\n    return {\r\n      setIds: categoriesUIContext.setIds,\r\n      queryParams: categoriesUIContext.queryParams,\r\n    };\r\n  }, [categoriesUIContext]);\r\n\r\n  // Categories Redux state\r\n  const dispatch = useDispatch();\r\n  const { isLoading } = useSelector(\r\n    (state) => ({ isLoading: state.categories.actionsLoading }),\r\n    shallowEqual\r\n  );\r\n\r\n  // if !id we should close modal\r\n  useEffect(() => {\r\n    if (!id) {\r\n      onHide();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [id]);\r\n\r\n  // looking for loading/dispatch\r\n  useEffect(() => {}, [isLoading, dispatch]);\r\n\r\n  const deleteCategory = () => {\r\n    // server request for deleting category by id\r\n    dispatch(actions.deleteCategory(id)).then(() => {\r\n      // refresh list after deletion\r\n      dispatch(actions.fetchCategories(categoriesUIProps.queryParams));\r\n      // clear selections list\r\n      categoriesUIProps.setIds([]);\r\n      // closing delete modal\r\n      onHide();\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      show={show}\r\n      onHide={onHide}\r\n      aria-labelledby=\"example-modal-sizes-title-lg\"\r\n    >\r\n      {isLoading && <ModalProgressBar variant=\"query\" />}\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n          Category Delete\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        {!isLoading && (\r\n          <span>Are you sure to permanently delete this category?</span>\r\n        )}\r\n        {isLoading && <span>Category is deleting...</span>}\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            onClick={onHide}\r\n            className=\"btn btn-light btn-elevate\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <> </>\r\n          <button\r\n            type=\"button\"\r\n            onClick={deleteCategory}\r\n            className=\"btn btn-danger btn-elevate\"\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n","/* eslint-disable no-restricted-imports */\r\nimport React, { useEffect, useMemo } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport { ModalProgressBar } from \"../../../../../../_metronic/_partials/controls\";\r\nimport * as actions from \"../../../_redux/categories/categoriesActions\";\r\nimport { useCategoriesUIContext } from \"../CategoriesUIContext\";\r\n\r\nexport function CategoriesDeleteDialog({ show, onHide }) {\r\n  // Categories UI Context\r\n  const categoriesUIContext = useCategoriesUIContext();\r\n  const categoriesUIProps = useMemo(() => {\r\n    return {\r\n      ids: categoriesUIContext.ids,\r\n      setIds: categoriesUIContext.setIds,\r\n      queryParams: categoriesUIContext.queryParams,\r\n    };\r\n  }, [categoriesUIContext]);\r\n\r\n  // Categories Redux state\r\n  const dispatch = useDispatch();\r\n  const { isLoading } = useSelector(\r\n    (state) => ({ isLoading: state.categories.actionsLoading }),\r\n    shallowEqual\r\n  );\r\n\r\n  // looking for loading/dispatch\r\n  useEffect(() => {}, [isLoading, dispatch]);\r\n\r\n  // if there weren't selected categories we should close modal\r\n  useEffect(() => {\r\n    if (!categoriesUIProps.ids || categoriesUIProps.ids.length === 0) {\r\n      onHide();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [categoriesUIProps.ids]);\r\n\r\n  const deleteCategories = () => {\r\n    // server request for deleting category by seleted ids\r\n    dispatch(actions.deleteCategories(categoriesUIProps.ids)).then(() => {\r\n      // refresh list after deletion\r\n      dispatch(actions.fetchCategories(categoriesUIProps.queryParams)).then(() => {\r\n        // clear selections list\r\n        categoriesUIProps.setIds([]);\r\n        // closing delete modal\r\n        onHide();\r\n      });\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      show={show}\r\n      onHide={onHide}\r\n      aria-labelledby=\"example-modal-sizes-title-lg\"\r\n    >\r\n      {isLoading && <ModalProgressBar />}\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n          Categories Delete\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        {!isLoading && (\r\n          <span>Are you sure to permanently delete selected categories?</span>\r\n        )}\r\n        {isLoading && <span>Categories are deleting...</span>}\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            onClick={onHide}\r\n            className=\"btn btn-light btn-elevate\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <> </>\r\n          <button\r\n            type=\"button\"\r\n            onClick={deleteCategories}\r\n            className=\"btn btn-danger btn-elevate\"\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { useEffect, useMemo } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { shallowEqual, useSelector } from \"react-redux\";\r\nimport { CategoryStatusCssClasses } from \"../CategoriesUIHelpers\";\r\nimport { useCategoriesUIContext } from \"../CategoriesUIContext\";\r\n\r\nconst selectedCategories = (entities, ids) => {\r\n  const _categories = [];\r\n  ids.forEach((id) => {\r\n    const category = entities.find((el) => el.id === id);\r\n    if (category) {\r\n      _categories.push(category);\r\n    }\r\n  });\r\n  return _categories;\r\n};\r\n\r\nexport function CategoriesFetchDialog({ show, onHide }) {\r\n  // Categories UI Context\r\n  const categoriesUIContext = useCategoriesUIContext();\r\n  const categoriesUIProps = useMemo(() => {\r\n    return {\r\n      ids: categoriesUIContext.ids,\r\n      queryParams: categoriesUIContext.queryParams,\r\n    };\r\n  }, [categoriesUIContext]);\r\n\r\n  // Categories Redux state\r\n  const { categories } = useSelector(\r\n    (state) => ({\r\n      categories: selectedCategories(state.categories.entities, categoriesUIProps.ids),\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  // if there weren't selected ids we should close modal\r\n  useEffect(() => {\r\n    if (!categoriesUIProps.ids || categoriesUIProps.ids.length === 0) {\r\n      onHide();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [categoriesUIProps.ids]);\r\n\r\n  return (\r\n    <Modal\r\n      show={show}\r\n      onHide={onHide}\r\n      aria-labelledby=\"example-modal-sizes-title-lg\"\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n          Fetch selected elements\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <div className=\"list-timeline list-timeline-skin-light padding-30\">\r\n          <div className=\"list-timeline-items\">\r\n            {categories.map((category) => (\r\n              <div className=\"list-timeline-item mb-3\" key={category.id}>\r\n                <span className=\"list-timeline-text\">\r\n                  <span\r\n                    className={`label label-lg label-light-${\r\n                      CategoryStatusCssClasses[category.status]\r\n                    } label-inline`}\r\n                    style={{ width: \"60px\" }}\r\n                  >\r\n                    ID: {category.id}\r\n                  </span>{\" \"}\r\n                  <span className=\"ml-5\">\r\n                    {category.manufacture}, {category.model}\r\n                  </span>\r\n                </span>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            onClick={onHide}\r\n            className=\"btn btn-light btn-elevate\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <> </>\r\n          <button\r\n            type=\"button\"\r\n            onClick={onHide}\r\n            className=\"btn btn-primary btn-elevate\"\r\n          >\r\n            Ok\r\n          </button>\r\n        </div>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { useEffect, useState, useMemo } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport { CategoryStatusCssClasses } from \"../CategoriesUIHelpers\";\r\nimport * as actions from \"../../../_redux/categories/categoriesActions\";\r\nimport { useCategoriesUIContext } from \"../CategoriesUIContext\";\r\n\r\nconst selectedCategories = (entities, ids) => {\r\n  const _categories = [];\r\n  ids.forEach((id) => {\r\n    const category = entities.find((el) => el.id === id);\r\n    if (category) {\r\n      _categories.push(category);\r\n    }\r\n  });\r\n  return _categories;\r\n};\r\n\r\nexport function CategoriesUpdateStatusDialog({ show, onHide }) {\r\n  // Categories UI Context\r\n  const categoriesUIContext = useCategoriesUIContext();\r\n  const categoriesUIProps = useMemo(() => {\r\n    return {\r\n      ids: categoriesUIContext.ids,\r\n      setIds: categoriesUIContext.setIds,\r\n      queryParams: categoriesUIContext.queryParams,\r\n    };\r\n  }, [categoriesUIContext]);\r\n\r\n  // Categories Redux state\r\n  const { categories, isLoading } = useSelector(\r\n    (state) => ({\r\n      categories: selectedCategories(state.categories.entities, categoriesUIProps.ids),\r\n      isLoading: state.categories.actionsLoading,\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  // if there weren't selected categories we should close modal\r\n  useEffect(() => {\r\n    if (categoriesUIProps.ids || categoriesUIProps.ids.length === 0) {\r\n      onHide();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [categoriesUIProps.ids]);\r\n\r\n  const [status, setStatus] = useState(0);\r\n\r\n  const dispatch = useDispatch();\r\n  const updateStatus = () => {\r\n    // server request for updateing category by ids\r\n    dispatch(actions.updateCategoriesStatus(categoriesUIProps.ids, status)).then(\r\n      () => {\r\n        // refresh list after deletion\r\n        dispatch(actions.fetchCategories(categoriesUIProps.queryParams)).then(\r\n          () => {\r\n            // clear selections list\r\n            categoriesUIProps.setIds([]);\r\n            // closing delete modal\r\n            onHide();\r\n          }\r\n        );\r\n      }\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      show={show}\r\n      onHide={onHide}\r\n      aria-labelledby=\"example-modal-sizes-title-lg\"\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n          Status has been updated for selected categories\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body className=\"overlay overlay-block cursor-default\">\r\n        {isLoading && (\r\n          <div className=\"overlay-layer bg-transparent\">\r\n            <div className=\"spinner spinner-lg spinner-warning\" />\r\n          </div>\r\n        )}\r\n        <div className=\"list-timeline list-timeline-skin-light padding-30\">\r\n          <div className=\"list-timeline-items\">\r\n            {categories.map((category) => (\r\n              <div className=\"list-timeline-item mb-3\" key={category.id}>\r\n                <span className=\"list-timeline-text\">\r\n                  <span\r\n                    className={`label label-lg label-light-${\r\n                      CategoryStatusCssClasses[category.status]\r\n                    } label-inline`}\r\n                    style={{ width: \"60px\" }}\r\n                  >\r\n                    ID: {category.id}\r\n                  </span>{\" \"}\r\n                  <span className=\"ml-5\">\r\n                    {category.manufacture}, {category.model}\r\n                  </span>\r\n                </span>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </Modal.Body>\r\n      <Modal.Footer className=\"form\">\r\n        <div className=\"form-group\">\r\n          <select\r\n            className={`form-control ${CategoryStatusCssClasses[status]}`}\r\n            value={status}\r\n            onChange={(e) => setStatus(+e.target.value)}\r\n          >\r\n            <option value=\"0\">Selling</option>\r\n            <option value=\"1\">Sold</option>\r\n          </select>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <button\r\n            type=\"button\"\r\n            onClick={onHide}\r\n            className=\"btn btn-light btn-elevate\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <> </>\r\n          <button\r\n            type=\"button\"\r\n            onClick={updateStatus}\r\n            className=\"btn btn-primary btn-elevate\"\r\n          >\r\n            Update Status\r\n          </button>\r\n        </div>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n","/* eslint-disable no-script-url,jsx-a11y/anchor-is-valid */\r\nimport React from \"react\";\r\nimport { OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\nimport SVG from \"react-inlinesvg\";\r\nimport { toAbsoluteUrl } from \"../../../../../../../_metronic/_helpers\";\r\n\r\nexport const ActionsColumnFormatter = (\r\n  cellContent,\r\n  row,\r\n  rowIndex,\r\n  { openEditCategoryPage, openDeleteCategoryDialog }\r\n) => (\r\n  <>\r\n    <OverlayTrigger\r\n      overlay={<Tooltip id=\"categories-edit-tooltip\">Edit category</Tooltip>}\r\n    >\r\n      <a\r\n        className=\"btn btn-icon btn-light btn-hover-primary btn-sm mx-3\"\r\n        onClick={() => openEditCategoryPage(row.id)}\r\n      >\r\n        <span className=\"svg-icon svg-icon-md svg-icon-primary\">\r\n          <SVG\r\n            src={toAbsoluteUrl(\"/static/media/svg/icons/Communication/Write.svg\")}\r\n          />\r\n        </span>\r\n      </a>\r\n    </OverlayTrigger>\r\n\r\n    <> </>\r\n    <OverlayTrigger\r\n      overlay={<Tooltip id=\"categories-delete-tooltip\">Delete category</Tooltip>}\r\n    >\r\n      <a\r\n        className=\"btn btn-icon btn-light btn-hover-danger btn-sm\"\r\n        onClick={() => openDeleteCategoryDialog(row.id)}\r\n      >\r\n        <span className=\"svg-icon svg-icon-md svg-icon-danger\">\r\n          <SVG src={toAbsoluteUrl(\"/static/media/svg/icons/General/Trash.svg\")} />\r\n        </span>\r\n      </a>\r\n    </OverlayTrigger>\r\n  </>\r\n);\r\n","// React bootstrap table next =>\r\n// DOCS: https://react-bootstrap-table.github.io/react-bootstrap-table2/docs/\r\n// STORYBOOK: https://react-bootstrap-table.github.io/react-bootstrap-table2/storybook/index.html\r\nimport React, { useEffect, useMemo } from \"react\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory, {\r\n  PaginationProvider,\r\n} from \"react-bootstrap-table2-paginator\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport * as actions from \"../../../_redux/categories/categoriesActions\";\r\nimport * as uiHelpers from \"../CategoriesUIHelpers\";\r\nimport {\r\n  getSelectRow,\r\n  getHandlerTableChange,\r\n  NoRecordsFoundMessage,\r\n  PleaseWaitMessage,\r\n  sortCaret,\r\n} from \"../../../../../../_metronic/_helpers\";\r\nimport * as columnFormatters from \"./column-formatters\";\r\nimport { Pagination } from \"../../../../../../_metronic/_partials/controls\";\r\nimport { useCategoriesUIContext } from \"../CategoriesUIContext\";\r\n\r\nexport function CategoriesTable() {\r\n  // Categories UI Context\r\n  const categoriesUIContext = useCategoriesUIContext();\r\n  const categoriesUIProps = useMemo(() => {\r\n    return {\r\n      ids: categoriesUIContext.ids,\r\n      setIds: categoriesUIContext.setIds,\r\n      queryParams: categoriesUIContext.queryParams,\r\n      setQueryParams: categoriesUIContext.setQueryParams,\r\n      openEditCategoryPage: categoriesUIContext.openEditCategoryPage,\r\n      openDeleteCategoryDialog: categoriesUIContext.openDeleteCategoryDialog,\r\n    };\r\n  }, [categoriesUIContext]);\r\n\r\n  // Getting curret state of categories list from store (Redux)\r\n  const { currentState } = useSelector(\r\n    (state) => ({ currentState: state.categories }),\r\n    shallowEqual\r\n  );\r\n  const { totalCount, entities, listLoading } = currentState;\r\n  // Categories Redux state\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    // clear selections list\r\n    categoriesUIProps.setIds([]);\r\n    // server call by queryParams\r\n    dispatch(actions.fetchCategories(categoriesUIProps.queryParams));\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [categoriesUIProps.queryParams, dispatch]);\r\n  // Table columns\r\n  const columns = [\r\n    {\r\n      dataField: \"id\",\r\n      text: \"ID\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n    },\r\n    {\r\n      dataField: \"name\",\r\n      text: \"Name\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n    },\r\n    {\r\n      dataField: \"action\",\r\n      text: \"Actions\",\r\n      formatter: columnFormatters.ActionsColumnFormatter,\r\n      formatExtraData: {\r\n        openEditCategoryPage: categoriesUIProps.openEditCategoryPage,\r\n        openDeleteCategoryDialog: categoriesUIProps.openDeleteCategoryDialog,\r\n      },\r\n      classes: \"text-right pr-0\",\r\n      headerClasses: \"text-right pr-3\",\r\n      style: {\r\n        minWidth: \"100px\",\r\n      },\r\n    },\r\n  ];\r\n  // Table pagination properties\r\n  const paginationOptions = {\r\n    custom: true,\r\n    totalSize: totalCount,\r\n    sizePerPageList: uiHelpers.sizePerPageList,\r\n    sizePerPage: categoriesUIProps.queryParams.pageSize,\r\n    page: categoriesUIProps.queryParams.pageNumber,\r\n  };\r\n  let data = [];\r\n  return (\r\n    <>\r\n      <PaginationProvider pagination={paginationFactory(paginationOptions)}>\r\n        {({ paginationProps, paginationTableProps }) => {\r\n          return (\r\n            <Pagination\r\n              isLoading={listLoading}\r\n              paginationProps={paginationProps}\r\n            >\r\n              <BootstrapTable\r\n                wrapperClasses=\"table-responsive\"\r\n                classes=\"table table-head-custom table-vertical-center overflow-hidden\"\r\n                bootstrap4\r\n                bordered={false}\r\n                remote\r\n                keyField=\"id\"\r\n                data= {entities}\r\n                columns={columns}\r\n                defaultSorted={uiHelpers.defaultSorted}\r\n                onTableChange={getHandlerTableChange(\r\n                  categoriesUIProps.setQueryParams\r\n                )}\r\n                selectRow={getSelectRow({\r\n                  entities,\r\n                  ids: categoriesUIProps.ids,\r\n                  setIds: categoriesUIProps.setIds,\r\n                })}\r\n                {...paginationTableProps}\r\n              >\r\n                <PleaseWaitMessage entities={entities} />\r\n                <NoRecordsFoundMessage entities={entities} />\r\n              </BootstrapTable>\r\n            </Pagination>\r\n          );\r\n        }}\r\n      </PaginationProvider>\r\n    </>\r\n  );\r\n}\r\n","import React, { useMemo } from \"react\";\r\nimport { useCategoriesUIContext } from \"../CategoriesUIContext\";\r\n\r\nexport function CategoriesGrouping() {\r\n  // Categories UI Context\r\n  const categoriesUIContext = useCategoriesUIContext();\r\n  const categoriesUIProps = useMemo(() => {\r\n    return {\r\n      ids: categoriesUIContext.ids,\r\n      setIds: categoriesUIContext.setIds,\r\n      openDeleteCategoriesDialog: categoriesUIContext.openDeleteCategoriesDialog,\r\n      openFetchCategoriesDialog: categoriesUIContext.openFetchCategoriesDialog,\r\n      openUpdateCategoriesStatusDialog:\r\n        categoriesUIContext.openUpdateCategoriesStatusDialog,\r\n    };\r\n  }, [categoriesUIContext]);\r\n\r\n  return (\r\n    <div className=\"form\">\r\n      <div className=\"row align-items-center form-group-actions margin-top-20 margin-bottom-20\">\r\n        <div className=\"col-xl-12\">\r\n          <div className=\"form-group form-group-inline\">\r\n            <div className=\"form-label form-label-no-wrap\">\r\n              <label className=\"-font-bold font-danger-\">\r\n                <span>\r\n                  Selected records count: <b>{categoriesUIProps.ids.length}</b>\r\n                </span>\r\n              </label>\r\n            </div>\r\n            <div>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-danger font-weight-bolder font-size-sm\"\r\n                onClick={categoriesUIProps.openDeleteCategoriesDialog}\r\n              >\r\n                <i className=\"fa fa-trash\"></i> Delete All\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, {useMemo} from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar,\r\n} from \"../../../../../_metronic/_partials/controls\";\r\nimport { CategoriesFilter } from \"./categories-filter/CategoriesFilter\";\r\nimport { CategoriesTable } from \"./categories-table/CategoriesTable\";\r\nimport { CategoriesGrouping } from \"./categories-grouping/CategoriesGrouping\";\r\nimport { useCategoriesUIContext } from \"./CategoriesUIContext\";\r\n\r\nexport function CategoriesCard() {\r\n  const categoriesUIContext = useCategoriesUIContext();\r\n  const categoriesUIProps = useMemo(() => {\r\n    return {\r\n      ids: categoriesUIContext.ids,\r\n      queryParams: categoriesUIContext.queryParams,\r\n      setQueryParams: categoriesUIContext.setQueryParams,\r\n      newCategoryButtonClick: categoriesUIContext.newCategoryButtonClick,\r\n      openDeleteCategoriesDialog: categoriesUIContext.openDeleteCategoriesDialog,\r\n      openEditCategoryPage: categoriesUIContext.openEditCategoryPage,\r\n      openUpdateCategoriesStatusDialog:\r\n        categoriesUIContext.openUpdateCategoriesStatusDialog,\r\n      openFetchCategoriesDialog: categoriesUIContext.openFetchCategoriesDialog,\r\n    };\r\n  }, [categoriesUIContext]);\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader title=\"Categories\">\r\n        <CardHeaderToolbar>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-primary\"\r\n            onClick={categoriesUIProps.newCategoryButtonClick}\r\n          >\r\n            Add Category\r\n          </button>\r\n        </CardHeaderToolbar>\r\n      </CardHeader>\r\n      <CardBody>\r\n        {/* <CategoriesFilter /> */}\r\n        {categoriesUIProps.ids.length > 0 && (\r\n          <>\r\n            <CategoriesGrouping />\r\n          </>\r\n        )}\r\n        <CategoriesTable />\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { CategoriesLoadingDialog } from \"./categories-loading-dialog/CategoriesLoadingDialog\";\r\nimport { CategoryDeleteDialog } from \"./category-delete-dialog/CategoryDeleteDialog\";\r\nimport { CategoriesDeleteDialog } from \"./categories-delete-dialog/CategoriesDeleteDialog\";\r\nimport { CategoriesFetchDialog } from \"./categories-fetch-dialog/CategoriesFetchDialog\";\r\nimport { CategoriesUpdateStatusDialog } from \"./categories-update-status-dialog/CategoriesUpdateStatusDialog\";\r\nimport { CategoriesCard } from \"./CategoriesCard\";\r\nimport { CategoriesUIProvider } from \"./CategoriesUIContext\";\r\nimport {ADMIN_ROUTE} from '../../../../pages/helper/api'\r\n\r\nexport function CategoriesPage({ history }) {\r\n  const categoriesUIEvents = {\r\n    newCategoryButtonClick: () => {\r\n      history.push(`/${ADMIN_ROUTE}/categories/new`);\r\n    },\r\n    openEditCategoryPage: (id) => {\r\n      history.push(`/${ADMIN_ROUTE}/categories/${id}/edit`);\r\n    },\r\n    openDeleteCategoryDialog: (id) => {\r\n      history.push(`/${ADMIN_ROUTE}/categories/${id}/delete`);\r\n    },\r\n    openDeleteCategoriesDialog: () => {\r\n      history.push(`/${ADMIN_ROUTE}/categories/deleteCategories`);\r\n    },\r\n    openFetchCategoriesDialog: () => {\r\n      history.push(`/${ADMIN_ROUTE}/categories/fetch`);\r\n    },\r\n    openUpdateCategoriesStatusDialog: () => {\r\n      history.push(\"/\"+ADMIN_ROUTE+\"/categories/updateStatus\");\r\n    },\r\n  };\r\n\r\n  return (\r\n    <CategoriesUIProvider categoriesUIEvents={categoriesUIEvents}>\r\n      <CategoriesLoadingDialog />\r\n      <Route path={\"/\"+ADMIN_ROUTE+\"/categories/deleteCategories\"}>\r\n        {({ history, match }) => (\r\n          <CategoriesDeleteDialog\r\n            show={match != null}\r\n            onHide={() => {\r\n              history.push(\"/\"+ADMIN_ROUTE+\"/categories\");\r\n            }}\r\n          />\r\n        )}\r\n      </Route>\r\n      <Route path={\"/\"+ADMIN_ROUTE+\"/categories/:id/delete\"}>\r\n        {({ history, match }) => (\r\n          <CategoryDeleteDialog\r\n            show={match != null}\r\n            id={match && match.params.id}\r\n            onHide={() => {\r\n              history.push(\"/\"+ADMIN_ROUTE+\"/categories\");\r\n            }}\r\n          />\r\n        )}\r\n      </Route>\r\n      <Route path={\"/\"+ADMIN_ROUTE+\"/categories/fetch\"}>\r\n        {({ history, match }) => (\r\n          <CategoriesFetchDialog\r\n            show={match != null}\r\n            onHide={() => {\r\n              history.push(\"/\"+ADMIN_ROUTE+\"/categories\");\r\n            }}\r\n          />\r\n        )}\r\n      </Route>\r\n      <Route path={\"/\"+ADMIN_ROUTE+\"/categories/updateStatus\"}>\r\n        {({ history, match }) => (\r\n          <CategoriesUpdateStatusDialog\r\n            show={match != null}\r\n            onHide={() => {\r\n              history.push(\"/\"+ADMIN_ROUTE+\"/categories\");\r\n            }}\r\n          />\r\n        )}\r\n      </Route>\r\n      <CategoriesCard />\r\n    </CategoriesUIProvider>\r\n  );\r\n}\r\n","// Form is based on Formik\r\n// Data validation is based on Yup\r\n// Please, be familiar with article first:\r\n// https://hackernoon.com/react-form-validation-with-formik-and-yup-8b76bda62e10\r\nimport React, { useEffect, useState, useRef } from \"react\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { Input, Select as MSelect } from \"../../../../../../_metronic/_partials/controls\";\r\nimport Creatable from \"react-select/creatable\";\r\nimport { withAsyncPaginate, AsyncPaginate } from \"react-select-async-paginate\";\r\nconst CreatableAsyncPaginate = withAsyncPaginate(Creatable);\r\n// Validation schema\r\nconst CategoryEditSchema = Yup.object().shape({\r\n  name: Yup.string()\r\n    .min(2, \"Minimum 2 symbols\")\r\n    .max(50, \"Maximum 50 symbols\")\r\n    .required(\"Name is required\"),\r\n  // category_category: Yup.string(),\r\n  // supplier: Yup.string(),\r\n  // category_manufacturer: Yup.string(),\r\n  // unit_price: Yup.number(),\r\n  // condition: Yup.string()\r\n  //   .min(2, \"Minimum 2 symbols\")\r\n  //   .max(50, \"Maximum 2 symbols\"),\r\n  // quantity: Yup.number()\r\n  //   .min(0, \"Quantity can'be negative\"),\r\n  // tag_date: Yup.date(),\r\n  // turn_around_time: Yup.string(),\r\n  // hazmat: Yup.string(),\r\n  // certification: Yup.string(),\r\n  // unit_of_measure: Yup.string(),\r\n  // hot_sale_item: Yup.string(),\r\n  // status: Yup.string(),\r\n});\r\n\r\nexport function CategoryEditForm({\r\n  category,\r\n  btnRef,\r\n  saveCategory,\r\n}) {\r\n\r\n  return (\r\n    <>\r\n      <Formik\r\n        enableReinitialize={true}\r\n        initialValues={category}\r\n        validationSchema={CategoryEditSchema}\r\n        onSubmit={(values) => {\r\n          saveCategory(values);\r\n        }}\r\n      >\r\n        {({ handleSubmit }) => (\r\n          <>\r\n            <Form className=\"form form-label-right\">\r\n              <div className=\"form-group row\">\r\n                <div className=\"col-lg-12\">\r\n                  <Field\r\n                    name=\"name\"\r\n                    component={Input}\r\n                    placeholder=\"Name\"\r\n                    label=\"Category Name\"\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <button\r\n                type=\"submit\"\r\n                style={{ display: \"none\" }}\r\n                ref={btnRef}\r\n                onSubmit={() => handleSubmit()}\r\n              ></button>\r\n            </Form>\r\n          </>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n}\r\n","export const defaultSorted = [{ dataField: \"id\", order: \"asc\" }];\r\nexport const sizePerPageList = [\r\n  { text: \"1\", value: 1 },\r\n  { text: \"3\", value: 3 },\r\n  { text: \"5\", value: 5 },\r\n];\r\nexport const initialFilter = {\r\n  filter: {\r\n    value: \"\",\r\n  },\r\n  sortOrder: \"asc\", // asc||desc\r\n  sortField: \"name\",\r\n  pageNumber: 1,\r\n  pageSize: 5,\r\n};\r\n\r\nexport const SPECIFICATIONS_DICTIONARY = [\r\n  { id: 0, name: \"Seats\" },\r\n  { id: 1, name: \"Fuel Type\" },\r\n  { id: 2, name: \"Stock\" },\r\n  { id: 3, name: \"Door count\" },\r\n  { id: 4, name: \"Engine\" },\r\n  { id: 5, name: \"Transmission\" },\r\n  { id: 6, name: \"Drivetrain\" },\r\n  { id: 7, name: \"Combined MPG\" },\r\n  { id: 8, name: \"Warranty\" },\r\n  { id: 9, name: \"Wheels\" },\r\n];\r\n","/* eslint-disable no-unused-vars */\r\nimport React, {\r\n  useEffect,\r\n  useContext,\r\n  createContext,\r\n  useState,\r\n  useCallback,\r\n} from \"react\";\r\nimport { isEqual, isFunction } from \"lodash\";\r\nimport { initialFilter } from \"./SpecificationsUIHelper\";\r\n\r\nconst SpecificationsUIContext = createContext();\r\n\r\nexport function useSpecificationsUIContext() {\r\n  return useContext(SpecificationsUIContext);\r\n}\r\n\r\nexport const SpecificationsUIConsumer = SpecificationsUIContext.Consumer;\r\n\r\nexport function SpecificationsUIProvider({ currentCategoryId, children }) {\r\n  const [categoryId, setCategoryId] = useState(currentCategoryId);\r\n  const [queryParams, setQueryParamsBase] = useState(initialFilter);\r\n  const [ids, setIds] = useState([]);\r\n  const setQueryParams = useCallback((nextQueryParams) => {\r\n    setQueryParamsBase((prevQueryParams) => {\r\n      if (isFunction(nextQueryParams)) {\r\n        nextQueryParams = nextQueryParams(prevQueryParams);\r\n      }\r\n\r\n      if (isEqual(prevQueryParams, nextQueryParams)) {\r\n        return prevQueryParams;\r\n      }\r\n\r\n      return nextQueryParams;\r\n    });\r\n  }, []);\r\n  const [selectedId, setSelectedId] = useState(null);\r\n  const initSpecification = {\r\n    id: undefined,\r\n    value: \"\",\r\n    specId: 0,\r\n    carId: categoryId,\r\n  };\r\n  useEffect(() => {\r\n    initSpecification.carId = currentCategoryId;\r\n    initSpecification.categoryId = currentCategoryId;\r\n    setCategoryId(currentCategoryId);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [currentCategoryId]);\r\n  const [\r\n    showEditSpecificationDialog,\r\n    setShowEditSpecificationDialog,\r\n  ] = useState(false);\r\n  const openNewSpecificationDialog = () => {\r\n    setSelectedId(undefined);\r\n    setShowEditSpecificationDialog(true);\r\n  };\r\n  const openEditSpecificationDialog = (id) => {\r\n    setSelectedId(id);\r\n    setShowEditSpecificationDialog(true);\r\n  };\r\n  const closeEditSpecificationDialog = () => {\r\n    setSelectedId(undefined);\r\n    setShowEditSpecificationDialog(false);\r\n  };\r\n  const [\r\n    showDeleteSpecificationDialog,\r\n    setShowDeleteSpecificationDialog,\r\n  ] = useState(false);\r\n  const openDeleteSpecificationDialog = (id) => {\r\n    setSelectedId(id);\r\n    setShowDeleteSpecificationDialog(true);\r\n  };\r\n  const closeDeleteSpecificationDialog = () => {\r\n    setSelectedId(undefined);\r\n    setShowDeleteSpecificationDialog(false);\r\n  };\r\n  const [\r\n    showDeleteSpecificationsDialog,\r\n    setShowDeleteSpecificationsDialog,\r\n  ] = useState(false);\r\n  const openDeleteSpecificationsDialog = () => {\r\n    setShowDeleteSpecificationsDialog(true);\r\n  };\r\n  const closeDeleteSpecificationsDialog = () => {\r\n    setShowDeleteSpecificationsDialog(false);\r\n  };\r\n  const [\r\n    showFetchSpecificationsDialog,\r\n    setShowFetchSpecificationsDialog,\r\n  ] = useState(false);\r\n  const openFetchSpecificationsDialog = () => {\r\n    setShowFetchSpecificationsDialog(true);\r\n  };\r\n  const closeFetchSpecificationsDialog = () => {\r\n    setShowFetchSpecificationsDialog(false);\r\n  };\r\n  const value = {\r\n    ids,\r\n    setIds,\r\n    categoryId,\r\n    setCategoryId,\r\n    queryParams,\r\n    setQueryParams,\r\n    initSpecification,\r\n    selectedId,\r\n    showEditSpecificationDialog,\r\n    openEditSpecificationDialog,\r\n    openNewSpecificationDialog,\r\n    closeEditSpecificationDialog,\r\n    showDeleteSpecificationDialog,\r\n    openDeleteSpecificationDialog,\r\n    closeDeleteSpecificationDialog,\r\n    showDeleteSpecificationsDialog,\r\n    openDeleteSpecificationsDialog,\r\n    closeDeleteSpecificationsDialog,\r\n    showFetchSpecificationsDialog,\r\n    openFetchSpecificationsDialog,\r\n    closeFetchSpecificationsDialog,\r\n  };\r\n\r\n  return (\r\n    <SpecificationsUIContext.Provider value={value}>\r\n      {children}\r\n    </SpecificationsUIContext.Provider>\r\n  );\r\n}\r\n","// Form is based on Formik\r\n// Data validation is based on Yup\r\n// Please, be familiar with article first:\r\n// https://hackernoon.com/react-form-validation-with-formik-and-yup-8b76bda62e10\r\nimport React from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport {\r\n  Select,\r\n  Input,\r\n} from \"../../../../../../../_metronic/_partials/controls\";\r\nimport { SPECIFICATIONS_DICTIONARY } from \"../SpecificationsUIHelper\";\r\n\r\n// Validation schema\r\nconst SpecificationEditSchema = Yup.object().shape({\r\n  value: Yup.string()\r\n    .min(2, \"Minimum 2 symbols\")\r\n    .max(50, \"Maximum 50 symbols\")\r\n    .required(\"Value is required\"),\r\n  specId: Yup.number().required(\"Specification type is required\"),\r\n});\r\n\r\nexport function SpecificationEditForm({\r\n  saveSpecification,\r\n  specification,\r\n  actionsLoading,\r\n  onHide,\r\n}) {\r\n  return (\r\n    <>\r\n      <Formik\r\n        enableReinitialize={true}\r\n        initialValues={specification}\r\n        validationSchema={SpecificationEditSchema}\r\n        onSubmit={(values) => {\r\n          saveSpecification(values);\r\n        }}\r\n      >\r\n        {({ handleSubmit }) => (\r\n          <>\r\n            <Modal.Body className=\"overlay overlay-block cursor-default\">\r\n              {actionsLoading && (\r\n                <div className=\"overlay-layer bg-transparent\">\r\n                  <div className=\"spinner spinner-lg spinner-success\" />\r\n                </div>\r\n              )}\r\n              <Form className=\"form form-label-right\">\r\n                <div className=\"form-group row\">\r\n                  <div className=\"col-lg-12\">\r\n                    <Select name=\"specId\" label=\"Specification Type\">\r\n                      {SPECIFICATIONS_DICTIONARY.map((spec) => (\r\n                        <option key={spec.id} value={spec.id}>\r\n                          {spec.name}\r\n                        </option>\r\n                      ))}\r\n                    </Select>\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                  <div className=\"col-lg-12\">\r\n                    <Field\r\n                      name=\"value\"\r\n                      component={Input}\r\n                      placeholder=\"Value\"\r\n                      label=\"Value\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <button\r\n                type=\"button\"\r\n                onClick={onHide}\r\n                className=\"btn btn-light btn-elevate\"\r\n              >\r\n                Cancel\r\n              </button>\r\n              <> </>\r\n              <button\r\n                type=\"submit\"\r\n                onClick={() => handleSubmit()}\r\n                className=\"btn btn-primary btn-elevate\"\r\n              >\r\n                Save\r\n              </button>\r\n            </Modal.Footer>\r\n          </>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n}\r\n","/* eslint-disable no-unused-vars */\r\nimport React, { useEffect, useContext, createContext, useState, useCallback } from \"react\";\r\nimport {isEqual, isFunction} from \"lodash\";\r\nimport {initialFilter} from \"./RemarksUIHelper\";\r\n\r\nconst RemarksUIContext = createContext();\r\n\r\nexport function useRemarksUIContext() {\r\n  return useContext(RemarksUIContext);\r\n}\r\n\r\nexport const RemarksUIConsumer = RemarksUIContext.Consumer;\r\n\r\nexport function RemarksUIProvider({ currentCategoryId, children }) {\r\n  const [categoryId, setCategoryId] = useState(currentCategoryId);\r\n  const [queryParams, setQueryParamsBase] = useState(initialFilter);\r\n  const [ids, setIds] = useState([]);\r\n  const setQueryParams = useCallback(nextQueryParams => {\r\n    setQueryParamsBase(prevQueryParams => {\r\n      if (isFunction(nextQueryParams)) {\r\n        nextQueryParams = nextQueryParams(prevQueryParams);\r\n      }\r\n\r\n      if (isEqual(prevQueryParams, nextQueryParams)) {\r\n        return prevQueryParams;\r\n      }\r\n\r\n      return nextQueryParams;\r\n    });\r\n  }, []);\r\n  const [selectedId, setSelectedId] = useState(null);\r\n  const [showEditRemarkDialog, setShowEditRemarkDialog] = useState(false);\r\n  const initRemark = {\r\n    id: undefined,\r\n    text: \"\",\r\n    type: 0,\r\n    dueDate: \"01/07/2020\",\r\n    carId: categoryId\r\n  };\r\n  useEffect(()=> {\r\n    initRemark.categoryId = currentCategoryId;\r\n    initRemark.carId = currentCategoryId;\r\n    setCategoryId(currentCategoryId);\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [currentCategoryId]);\r\n  const openNewRemarkDialog = () => {\r\n    setSelectedId(undefined);\r\n    setShowEditRemarkDialog(true);\r\n  };\r\n  const openEditRemarkDialog = id => {\r\n    setSelectedId(id);\r\n    setShowEditRemarkDialog(true);\r\n  };\r\n  const closeEditRemarkDialog = () => {\r\n    setSelectedId(undefined);\r\n    setShowEditRemarkDialog(false);\r\n  };\r\n  const [showDeleteRemarkDialog, setShowDeleteRemarkDialog] = useState(false);\r\n  const openDeleteRemarkDialog = id => {\r\n    setSelectedId(id);\r\n    setShowDeleteRemarkDialog(true);\r\n  };\r\n  const closeDeleteRemarkDialog = () => {\r\n    setSelectedId(undefined);\r\n    setShowDeleteRemarkDialog(false);\r\n  };\r\n\r\n  const [showDeleteRemarksDialog, setShowDeleteRemarksDialog] = useState(false);\r\n  const openDeleteRemarksDialog = () => {\r\n    setShowDeleteRemarksDialog(true);\r\n  };\r\n  const closeDeleteRemarksDialog = () => {\r\n    setShowDeleteRemarksDialog(false);\r\n  };\r\n\r\n  const [showFetchRemarksDialog, setShowFetchRemarksDialog] = useState(false);\r\n  const openFetchRemarksDialog = () => {\r\n    setShowFetchRemarksDialog(true);\r\n  };\r\n  const closeFetchRemarksDialog = () => {\r\n    setShowFetchRemarksDialog(false);\r\n  };\r\n\r\n  const value = {\r\n    ids,\r\n    setIds,\r\n    categoryId,\r\n    setCategoryId,\r\n    queryParams,\r\n    setQueryParams,\r\n    initRemark,\r\n    selectedId,\r\n    showEditRemarkDialog,\r\n    openNewRemarkDialog,    \r\n    openEditRemarkDialog,\r\n    closeEditRemarkDialog,\r\n    showDeleteRemarkDialog,\r\n    openDeleteRemarkDialog,\r\n    closeDeleteRemarkDialog,\r\n    showDeleteRemarksDialog,\r\n    openDeleteRemarksDialog,\r\n    closeDeleteRemarksDialog,\r\n    openFetchRemarksDialog,\r\n    closeFetchRemarksDialog,\r\n    showFetchRemarksDialog\r\n  };\r\n  \r\n  return (\r\n    <RemarksUIContext.Provider value={value}>\r\n      {children}\r\n    </RemarksUIContext.Provider>\r\n  );\r\n}\r\n","// Form is based on Formik\r\n// Data validation is based on Yup\r\n// Please, be familiar with article first:\r\n// https://hackernoon.com/react-form-validation-with-formik-and-yup-8b76bda62e10\r\nimport React from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport {\r\n  Input,\r\n  Select,\r\n  DatePickerField,\r\n} from \"../../../../../../../_metronic/_partials/controls\";\r\n\r\n// Validation schema\r\nconst RemarkEditSchema = Yup.object().shape({\r\n  text: Yup.string()\r\n    .min(2, \"Minimum 2 symbols\")\r\n    .max(50, \"Maximum 50 symbols\")\r\n    .required(\"Text is required\"),\r\n  type: Yup.number().required(\"Type is required\"),\r\n  dueDate: Yup.mixed()\r\n    .nullable(false)\r\n    .required(\"Due date is required\"),\r\n});\r\n\r\nexport function RemarkEditForm({ saveRemark, remark, actionsLoading, onHide }) {\r\n  return (\r\n    <>\r\n      <Formik\r\n        enableReinitialize={true}\r\n        initialValues={remark}\r\n        validationSchema={RemarkEditSchema}\r\n        onSubmit={(values) => saveRemark(values)}\r\n      >\r\n        {({ handleSubmit }) => (\r\n          <>\r\n            <Modal.Body className=\"overlay overlay-block cursor-default\">\r\n              {actionsLoading && (\r\n                <div className=\"overlay-layer bg-transparent\">\r\n                  <div className=\"spinner spinner-lg spinner-success\" />\r\n                </div>\r\n              )}\r\n              <Form className=\"form form-label-right\">\r\n                <div className=\"form-group row\">\r\n                  <div className=\"col-lg-12\">\r\n                    <Field\r\n                      name=\"text\"\r\n                      component={Input}\r\n                      placeholder=\"Text\"\r\n                      label=\"Text\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                  <div className=\"col-lg-12\">\r\n                    <DatePickerField name=\"dueDate\" label=\"Due date\" />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                  <div className=\"col-lg-12\">\r\n                    <Select name=\"type\" label=\"Type\">\r\n                      <option value=\"0\">Info</option>\r\n                      <option value=\"1\">Note</option>\r\n                      <option value=\"2\">Reminder</option>\r\n                    </Select>\r\n                  </div>\r\n                </div>\r\n              </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <button\r\n                type=\"button\"\r\n                onClick={onHide}\r\n                className=\"btn btn-light btn-elevate\"\r\n              >\r\n                Cancel\r\n              </button>\r\n              <> </>\r\n              <button\r\n                type=\"submit\"\r\n                onClick={() => handleSubmit()}\r\n                className=\"btn btn-primary btn-elevate\"\r\n              >\r\n                Save\r\n              </button>\r\n            </Modal.Footer>\r\n          </>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n}\r\n","/* eslint-disable no-script-url,jsx-a11y/anchor-is-valid,jsx-a11y/role-supports-aria-props */\r\nimport React, { useEffect, useState, useRef } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { shallowEqual, useSelector } from \"react-redux\";\r\nimport * as actions from \"../../../_redux/categories/categoriesActions\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar,\r\n} from \"../../../../../../_metronic/_partials/controls\";\r\nimport { CategoryEditForm } from \"./CategoryEditForm\";\r\nimport { Specifications } from \"../category-specifications/Specifications\";\r\nimport { SpecificationsUIProvider } from \"../category-specifications/SpecificationsUIContext\";\r\nimport { useSubheader } from \"../../../../../../_metronic/layout\";\r\nimport { ModalProgressBar } from \"../../../../../../_metronic/_partials/controls\";\r\nimport { RemarksUIProvider } from \"../category-remarks/RemarksUIContext\";\r\nimport { Remarks } from \"../category-remarks/Remarks\";\r\nimport { ADMIN_ROUTE } from \"../../../../../pages/helper/api\";\r\n\r\nconst initCategory = {\r\n  id: undefined,\r\n  name: \"\",\r\n \r\n};\r\n\r\nexport function CategoryEdit({\r\n  history,\r\n  match: {\r\n    params: { id },\r\n  },\r\n}) {\r\n  // Subheader\r\n  const suhbeader = useSubheader();\r\n\r\n  // Tabs\r\n  const [tab, setTab] = useState(\"basic\");\r\n  const [title, setTitle] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  // const layoutDispatch = useContext(LayoutContext.Dispatch);\r\n  const { actionsLoading, categoryForEdit } = useSelector(\r\n    (state) => ({\r\n      actionsLoading: state.categories.actionsLoading,\r\n      categoryForEdit: state.categories.categoryForEdit,\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(actions.fetchCategory(id));\r\n  }, [id, dispatch]);\r\n\r\n  useEffect(() => {\r\n    let _title = id ? \"\" : \"New Category\";\r\n    if (categoryForEdit && id) {\r\n      _title = `Edit category - ${categoryForEdit.name}`;\r\n    }\r\n\r\n    setTitle(_title);\r\n    suhbeader.setTitle(_title);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [categoryForEdit, id]);\r\n\r\n  const saveCategory = (values) => {\r\n      console.log('values', values);\r\n    \r\n    if (!id) {\r\n      dispatch(actions.createCategory(values)).then(() => backToCategoriesList());\r\n    } else {\r\n\r\n      dispatch(actions.updateCategory(values)).then(() => backToCategoriesList());\r\n    }\r\n  };\r\n\r\n  const btnRef = useRef();  \r\n  const saveCategoryClick = () => {\r\n    if (btnRef && btnRef.current) {\r\n      btnRef.current.click();\r\n    }\r\n  };\r\n\r\n  const backToCategoriesList = () => {\r\n    history.push(`/${ADMIN_ROUTE}/categories`);\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      {actionsLoading && <ModalProgressBar />}\r\n      <CardHeader title={title}>\r\n        <CardHeaderToolbar>\r\n          <button\r\n            type=\"button\"\r\n            onClick={backToCategoriesList}\r\n            className=\"btn btn-light\"\r\n          >\r\n            <i className=\"fa fa-arrow-left\"></i>\r\n            Back\r\n          </button>\r\n          {`  `}\r\n          <button className=\"btn btn-light ml-2\">\r\n            <i className=\"fa fa-redo\"></i>\r\n            Reset\r\n          </button>\r\n          {`  `}\r\n          <button\r\n            type=\"submit\"\r\n            className=\"btn btn-primary ml-2\"\r\n            onClick={saveCategoryClick}\r\n          >\r\n            Save\r\n          </button>\r\n        </CardHeaderToolbar>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <div className=\"mt-5\">\r\n            <CategoryEditForm\r\n              actionsLoading={actionsLoading}\r\n              category={categoryForEdit || initCategory}\r\n              btnRef={btnRef}\r\n              saveCategory={saveCategory}\r\n            />\r\n        </div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n}\r\n","import React, { Suspense } from \"react\";\r\nimport { Redirect, Switch } from \"react-router-dom\";\r\nimport { CategoriesPage } from \"./CategoriesPage\";\r\nimport { CategoryEdit } from \"./category-edit/CategoryEdit\";\r\nimport { LayoutSplashScreen, ContentRoute } from \"../../../../../_metronic/layout\";\r\nimport { ADMIN_ROUTE } from '../../../../../app/pages/helper/api'\r\n\r\nexport default function CategoriesPages() {\r\n  return (\r\n    <Suspense fallback={<LayoutSplashScreen />}>\r\n      <Switch>\r\n        <ContentRoute path={\"/\"+ADMIN_ROUTE+\"/categories/new\"} component={CategoryEdit} />\r\n        <ContentRoute\r\n          path={\"/\"+ADMIN_ROUTE+\"/categories/:id/edit\"}\r\n          component={CategoryEdit}\r\n        />\r\n        <ContentRoute path={\"/\"+ADMIN_ROUTE+'/categories'} component={CategoriesPage} />\r\n      </Switch>\r\n    </Suspense>\r\n  );\r\n}\r\n"],"sourceRoot":""}