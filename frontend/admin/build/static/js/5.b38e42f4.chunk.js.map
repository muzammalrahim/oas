{"version":3,"sources":["app/modules/ECommerce/_redux/specifications/specificationsActions.js","app/modules/ECommerce/_redux/specifications/specificationsCrud.js","app/modules/ECommerce/_redux/remarks/remarksActions.js","app/modules/ECommerce/_redux/remarks/remarksCrud.js","app/modules/ECommerce/pages/products/products-loading-dialog/ProductsLoadingDialog.js","app/modules/ECommerce/_redux/products/productsCrud.js","app/modules/ECommerce/_redux/products/productsActions.js","app/modules/ECommerce/pages/products/ProductsUIHelpers.js","app/modules/ECommerce/pages/products/ProductsUIContext.js","app/modules/ECommerce/pages/products/product-delete-dialog/ProductDeleteDialog.js","app/modules/ECommerce/pages/products/products-delete-dialog/ProductsDeleteDialog.js","app/modules/ECommerce/pages/products/products-fetch-dialog/ProductsFetchDialog.js","app/modules/ECommerce/pages/products/products-update-status-dialog/ProductsUpdateStatusDialog.js","app/modules/ECommerce/pages/products/products-filter/ProductsFilter.js","app/modules/ECommerce/pages/products/products-table/column-formatters/StatusColumnFormatter.js","app/modules/ECommerce/pages/products/products-table/column-formatters/ConditionColumnFormatter.js","app/modules/ECommerce/pages/products/products-table/column-formatters/ActionsColumnFormatter.js","app/modules/ECommerce/pages/products/products-table/ProductsTable.js","app/modules/ECommerce/pages/products/products-grouping/ProductsGrouping.js","app/modules/ECommerce/pages/products/ProductsCard.js","app/modules/ECommerce/pages/products/ProductsPage.js","app/modules/ECommerce/pages/products/product-edit/ProductEditForm.js","app/modules/ECommerce/pages/products/product-specifications/SpecificationsUIHelper.js","app/modules/ECommerce/pages/products/product-specifications/SpecificationsUIContext.js","app/modules/ECommerce/pages/products/product-specifications/specification-edit-dialog/SpecificationEditForm.js","app/modules/ECommerce/pages/products/product-remarks/RemarksUIContext.js","app/modules/ECommerce/pages/products/product-remarks/remark-edit-dialog/RemarkEditForm.js","app/modules/ECommerce/pages/products/product-edit/ProductEdit.js","app/modules/ECommerce/pages/products/product-view/ProductView.js","app/modules/ECommerce/pages/products/ProductsPages.js"],"names":["actions","specificationsSlice","fetchSpecifications","queryParams","productId","dispatch","startCall","callType","callTypes","list","axios","post","requestFromServer","then","response","data","totalCount","entities","specificationsFetched","catch","error","clientMessage","catchError","fetchSpecification","id","action","specificationId","get","specification","specificationFetched","specificationForEdit","undefined","deleteSpecification","delete","specificationDeleted","createSpecification","specificationForCreation","specificationCreated","updateSpecification","put","specificationUpdated","deleteSpecifications","ids","specificationsDeleted","remarksSlice","fetchRemarks","remarksFetched","fetchRemark","remarkId","remark","remarkFetched","remarkForEdit","deleteRemark","remarkDeleted","createRemark","remarkForCreation","remarkCreated","updateRemark","remarkUpdated","deleteRemarks","console","log","remarksDeleted","ProductsLoadingDialog","isLoading","useSelector","state","products","listLoading","shallowEqual","useEffect","text","PRODUCTS_URL","API_URL","productsSlice","fetchProducts","pageNumber","filter","params","page","count","results","next","url","URL","productsFetched","searchParams","fetchProduct","product","supplier_company_name","supplier","company_name","product_manufacturer_name","product_manufacturer","name","product_category_name","product_category","productFetched","productForEdit","deleteProduct","productDeleted","createProduct","productForCreation","productCreated","updateProduct","productUpdated","updateProductsStatus","status","productsStatusUpdated","deleteProducts","productsDeleted","ProductStatusCssClasses","ProductStatusTitles","ProductConditionCssClasses","ProductConditionTitles","YES_NO_OPTIONS","UOM_CHOICES","defaultSorted","dataField","order","sizePerPageList","value","initialFilter","model","manufacture","VINCode","sortOrder","sortField","pageSize","ProductsUIContext","createContext","useProductsUIContext","useContext","Consumer","ProductsUIProvider","productsUIEvents","children","useState","setQueryParamsBase","setIds","setQueryParams","useCallback","nextQueryParams","prevQueryParams","isFunction","isEqual","newProductButtonClick","openViewProductPage","openEditProductPage","openDeleteProductDialog","openDeleteProductsDialog","openFetchProductsDialog","openUpdateProductsStatusDialog","Provider","ProductDeleteDialog","show","onHide","productsUIContext","productsUIProps","useMemo","useDispatch","actionsLoading","Modal","aria-labelledby","variant","Header","closeButton","Title","Body","Footer","type","onClick","className","ProductsDeleteDialog","length","selectedProducts","_products","forEach","find","el","push","ProductsFetchDialog","map","key","style","width","ProductsUpdateStatusDialog","setStatus","onChange","e","target","ProductsFilter","applyFilter","values","newQueryParams","condition","hazmat","unit_of_measure","hot_sale_item","searchText","search","prepareFilter","initialValues","onSubmit","handleSubmit","handleBlur","setFieldValue","handleChange","placeholder","onBlur","i","opt","StatusColumnFormatter","cellContent","row","ConditionColumnFormatter","toUpperCase","ActionsColumnFormatter","rowIndex","OverlayTrigger","overlay","Tooltip","src","toAbsoluteUrl","ProductsTable","currentState","columns","sort","sortCaret","formatter","columnFormatters","formatExtraData","classes","headerClasses","minWidth","paginationOptions","custom","totalSize","uiHelpers","sizePerPage","onPageChange","onSizePerPageChange","pagination","paginationFactory","paginationProps","paginationTableProps","wrapperClasses","bootstrap4","bordered","remote","keyField","onTableChange","getHandlerTableChange","selectRow","getSelectRow","ProductsGrouping","selector","variantIcon","success","CheckCircleIcon","warning","WarningIcon","ErrorIcon","info","InfoIcon","useStylesSnackbarContent","makeStyles","theme","backgroundColor","green","palette","dark","primary","main","amber","icon","fontSize","iconVariant","opacity","marginRight","spacing","message","display","alignItems","SnackbarContentWrapper","props","onClose","other","Icon","SnackbarContent","clsx","aria-describedby","IconButton","aria-label","color","Close","ProductsCard","csvData","setCsvData","csvModal","setCsvModal","processing","setProcessing","importData","setImportData","setMessage","React","messageType","open","setOpen","inputFile","createRef","handleCloseSnackbar","event","reason","title","href","ref","download","backdrop","size","cssClass","cssInputClass","label","onFileLoaded","csvDataTemp","obj_dt","col","k","shift","current","click","noHeader","dense","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","ProductsPage","history","ADMIN_ROUTE","path","match","CreatableAsyncPaginate","withAsyncPaginate","Creatable","ProductEditSchema","Yup","shape","part_number","min","max","required","ProductEditForm","btnRef","saveProduct","categories","setCategories","manufacturers","setManufacturers","suppliers","setSuppliers","modelsLoaded","setModelsLoaded","category","setCategory","manfacturer","setManfacturer","setSupplier","selectedFile","setSelectFile","previewFile","setPreviewFile","productImage","setProductImage","fileChangedHandler","file","files","createObjectURL","size_c","toFixed","reader","FileReader","readAsDataURL","onloadend","result","models","ProductCategory","Manufacturer","Supplier","manf","product_image","filename_pieces","split","name_c","STATIC_URL","product_image_name","enableReinitialize","validationSchema","component","Input","onCreateOption","option","createCategory","isClearable","loadOptions","prevOptions","debounceTimeout","DROPDOWN_WAIT","createManfacturer","createSupplier","index","editor","ClassicEditor","description","getData","accept","htmlFor","Button","CloudUpload","marginLeft","data-dz-name","data-dz-size","data-dz-errormessage","document","getElementById","data-dz-remove","SpecificationsUIContext","specId","RemarksUIContext","dueDate","nullable","initProduct","alt_part_number","tag_date","unit_price","quantity","turn_around_time","certification","un_code","stock_location","short_description","product_title","ProductEdit","suhbeader","useSubheader","setTitle","_title","useRef","backToProductsList","ProductView","Grid","container","item","xs","md","dangerouslySetInnerHTML","__html","getDateFormat","created_at","updated_at","maxHeight","maxWidth","ProductsPages","fallback"],"mappings":"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","file":"static/js/5.b38e42f4.chunk.js","sourcesContent":["import * as requestFromServer from \"./specificationsCrud\";\r\nimport {specificationsSlice, callTypes} from \"./specificationsSlice\";\r\n\r\nconst {actions} = specificationsSlice;\r\n\r\nexport const fetchSpecifications = (queryParams, productId) => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.list }));\r\n  if (!productId) {\r\n    return dispatch(\r\n      actions.specificationsFetched({ totalCount: 0, entities: null })\r\n    );\r\n  }\r\n\r\n  return requestFromServer\r\n    .findSpecifications(queryParams, productId)\r\n    .then(response => {\r\n      const { totalCount, entities } = response.data;\r\n      dispatch(actions.specificationsFetched({ totalCount, entities }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't find specifications\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.list }));\r\n    });\r\n};\r\n\r\nexport const fetchSpecification = id => dispatch => {\r\n  if (!id) {\r\n    return dispatch(\r\n      actions.specificationFetched({ specificationForEdit: undefined })\r\n    );\r\n  }\r\n\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .getSpecificationById(id)\r\n    .then(response => {\r\n      const specification = response.data;\r\n      dispatch(\r\n        actions.specificationFetched({ specificationForEdit: specification })\r\n      );\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't find specification\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const deleteSpecification = id => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .deleteSpecification(id)\r\n    .then(response => {\r\n      dispatch(actions.specificationDeleted({ id }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't delete specification\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const createSpecification = specificationForCreation => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .createSpecification(specificationForCreation)\r\n    .then(response => {\r\n      const { specification } = response.data;\r\n      dispatch(actions.specificationCreated({ specification }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't create specification\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const updateSpecification = specification => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .updateSpecification(specification)\r\n    .then(() => {\r\n      dispatch(actions.specificationUpdated({ specification }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't update specification\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const deleteSpecifications = ids => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .deleteSpecifications(ids)\r\n    .then(() => {\r\n      dispatch(actions.specificationsDeleted({ ids }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't delete specifications\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n","import axios from \"axios\";\r\n\r\nexport const SPECIFICATIONS_URL = \"api/specifications\";\r\n\r\n// CREATE =>  POST: add a new specifications to the server\r\nexport function createSpecification(specification) {\r\n  return axios.post(SPECIFICATIONS_URL, { specification });\r\n}\r\n\r\n// READ\r\n// Server should return filtered specifications by productId\r\nexport function getAllProductSpecificationsByProductId(productId) {\r\n  return axios.get(`${SPECIFICATIONS_URL}?productId=${productId}`);\r\n}\r\n\r\nexport function getSpecificationById(specificationId) {\r\n  return axios.get(`${SPECIFICATIONS_URL}/${specificationId}`);\r\n}\r\n\r\n// Server should return sorted/filtered specifications and merge with items from state\r\n// TODO: Change your URL to REAL API, right now URL is 'api/specificationsfind/{productId}'. Should be 'api/specifications/find/{productId}'!!!\r\nexport function findSpecifications(queryParams, productId) {\r\n  return axios.post(`${SPECIFICATIONS_URL}find/${productId}`, { queryParams });\r\n}\r\n\r\n// UPDATE => PUT: update the specification\r\nexport function updateSpecification(specification) {\r\n  return axios.put(`${SPECIFICATIONS_URL}/${specification.id}`, {\r\n    specification\r\n  });\r\n}\r\n\r\n// DELETE => delete the specification\r\nexport function deleteSpecification(specificationId) {\r\n  return axios.delete(`${SPECIFICATIONS_URL}/${specificationId}`);\r\n}\r\n\r\n// DELETE specifications by ids\r\nexport function deleteSpecifications(ids) {\r\n  return axios.post(`${SPECIFICATIONS_URL}/deleteSpecifications`, { ids });\r\n}\r\n","import * as requestFromServer from \"./remarksCrud\";\r\nimport {remarksSlice, callTypes} from \"./remarksSlice\";\r\n\r\nconst {actions} = remarksSlice;\r\n\r\nexport const fetchRemarks = (queryParams, productId) => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.list }));\r\n  if (!productId) {\r\n    return dispatch(actions.remarksFetched({ totalCount: 0, entities: null }));\r\n  }\r\n\r\n  return requestFromServer\r\n    .findRemarks(queryParams, productId)\r\n    .then(response => {\r\n      const { totalCount, entities } = response.data;\r\n      dispatch(actions.remarksFetched({ totalCount, entities }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't find remarks\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.list }));\r\n    });\r\n};\r\n\r\nexport const fetchRemark = id => dispatch => {\r\n  if (!id) {\r\n    return dispatch(actions.remarkFetched({ remarkForEdit: undefined }));\r\n  }\r\n\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .getRemarkById(id)\r\n    .then(response => {\r\n      const remark = response.data;\r\n      dispatch(actions.remarkFetched({ remarkForEdit: remark }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't find remark\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const deleteRemark = id => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .deleteRemark(id)\r\n    .then(response => {\r\n      dispatch(actions.remarkDeleted({ id }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't delete remark\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const createRemark = remarkForCreation => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .createRemark(remarkForCreation)\r\n    .then(response => {\r\n      const { remark } = response.data;\r\n      dispatch(actions.remarkCreated({ remark }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't create remark\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const updateRemark = remark => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .updateRemark(remark)\r\n    .then(() => {\r\n      dispatch(actions.remarkUpdated({ remark }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't update remark\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const deleteRemarks = ids => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .deleteRemarks(ids)\r\n    .then(() => {\r\n      console.log(\"delete return\");\r\n      dispatch(actions.remarksDeleted({ ids }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't delete remarks\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n","import axios from \"axios\";\r\n\r\nexport const REMARKS_URL = \"api/remarks\";\r\n\r\n// CREATE =>  POST: add a new remark to the server\r\nexport function createRemark(remark) {\r\n  return axios.post(REMARKS_URL, { remark });\r\n}\r\n\r\n// READ\r\n// Server should return filtered remarks by productId\r\nexport function getAllProductRemarksByProductId(productId) {\r\n  return axios.get(`${REMARKS_URL}?productId=${productId}`);\r\n}\r\n\r\nexport function getRemarkById(remarkId) {\r\n  return axios.get(`${REMARKS_URL}/${remarkId}`);\r\n}\r\n\r\n// Server should return sorted/filtered remarks and merge with items from state\r\n// TODO: Change your URL to REAL API, right now URL is 'api/remarksfind/{productId}'. Should be 'api/remarks/find/{productId}'!!!\r\nexport function findRemarks(queryParams, productId) {\r\n  return axios.post(`${REMARKS_URL}find/${productId}`, { queryParams });\r\n}\r\n\r\n// UPDATE => PUT: update the remark\r\nexport function updateRemark(remark) {\r\n  return axios.put(`${REMARKS_URL}/${remark.id}`, { remark });\r\n}\r\n\r\n// DELETE => delete the remark\r\nexport function deleteRemark(remarkId) {\r\n  return axios.delete(`${REMARKS_URL}/${remarkId}`);\r\n}\r\n\r\n// DELETE Remarks by ids\r\nexport function deleteRemarks(ids) {\r\n  return axios.post(`${REMARKS_URL}/deleteRemarks`, { ids });\r\n}\r\n","import React, {useEffect} from \"react\";\r\nimport {shallowEqual, useSelector} from \"react-redux\";\r\nimport {LoadingDialog} from \"../../../../../../_metronic/_partials/controls\";\r\n\r\nexport function ProductsLoadingDialog() {\r\n  const { isLoading } = useSelector(\r\n    state => ({ isLoading: state.products.listLoading }),\r\n    shallowEqual\r\n  );\r\n  useEffect(() => {}, [isLoading]);\r\n  return <LoadingDialog isLoading={isLoading} text=\"Loading ...\" />;\r\n}\r\n","import axios from \"axios\";\r\nimport { API_URL } from '../../../../pages/helper/api'\r\n\r\nexport const PRODUCTS_URL = API_URL + \"inventory\";\r\n\r\n// CREATE =>  POST: add a new product to the server\r\nexport function createProduct(product) {\r\n  return axios.post(PRODUCTS_URL+'/', { ...product });\r\n}\r\n\r\n// READ\r\nexport function getAllProducts({pageNumber, filter}) {\r\n  return axios.get(PRODUCTS_URL,  {\r\n    params: {...filter, page:pageNumber}\r\n  });\r\n}\r\n\r\nexport function getProductById(productId) {\r\n  return axios.get(`${PRODUCTS_URL}/${productId}`);\r\n}\r\n\r\n// Method from server should return QueryResultsModel(items: any[], totalsCount: number)\r\n// items => filtered/sorted result\r\nexport function findProducts(queryParams) {\r\n  return axios.post(`${PRODUCTS_URL}/find`, { queryParams });\r\n}\r\n\r\n// UPDATE => PUT: update the procuct on the server\r\nexport function updateProduct(product) {\r\n  return axios.put(`${PRODUCTS_URL}/${product.id}/`, { ...product });\r\n}\r\n\r\n// UPDATE Status\r\nexport function updateStatusForProducts(ids, status) {\r\n  return axios.post(`${PRODUCTS_URL}/updateStatusForProducts`, {\r\n    ids,\r\n    status\r\n  });\r\n}\r\n\r\n// DELETE => delete the product from the server\r\nexport function deleteProduct(productId) {\r\n  return axios.delete(`${PRODUCTS_URL}/${productId}`);\r\n}\r\n\r\n// DELETE Products by ids\r\nexport function deleteProducts(ids) {\r\n  return axios.post(`${PRODUCTS_URL}/delete-all/`, { ids });\r\n}\r\n","import * as requestFromServer from \"./productsCrud\";\r\nimport {productsSlice, callTypes} from \"./productsSlice\";\r\n\r\nconst {actions} = productsSlice;\r\n\r\nexport const fetchProducts = queryParams => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.list }));\r\n  return requestFromServer\r\n    .getAllProducts(queryParams)\r\n    .then(response => {\r\n      const { count, results, next } = response.data;\r\n      let url = new URL(next);\r\n      dispatch(actions.productsFetched({ count, results, pageNumber:url.searchParams.get('page') }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't find products\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.list }));\r\n    });\r\n};\r\n\r\nexport const fetchProduct = id => dispatch => {\r\n  if (!id) {\r\n    return dispatch(actions.productFetched({ productForEdit: undefined }));\r\n  }\r\n\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .getProductById(id)\r\n    .then(response => {\r\n      const product = {\r\n        ...response.data, \r\n        supplier_company_name:response.data.supplier ? response.data.supplier.company_name : \"\",\r\n        supplier:response.data.supplier ? response.data.supplier.id : \"\",\r\n        product_manufacturer_name:response.data.product_manufacturer ? response.data.product_manufacturer.name : \"\",\r\n        product_manufacturer:response.data.product_manufacturer ? response.data.product_manufacturer.id : \"\",\r\n        product_category_name:response.data.product_category ? response.data.product_category.name : \"\",\r\n        product_category:response.data.product_category ? response.data.product_category.id : \"\",\r\n      };\r\n\r\n      dispatch(actions.productFetched({ productForEdit: product }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't find product\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const deleteProduct = id => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .deleteProduct(id)\r\n    .then(response => {\r\n      dispatch(actions.productDeleted({ id }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't delete product\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const createProduct = productForCreation => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .createProduct(productForCreation)\r\n    .then(response => {\r\n      const { data } = response;\r\n      dispatch(actions.productCreated({ product:data }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't create product\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const updateProduct = product => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  console.log('proudct', product);\r\n  return requestFromServer\r\n    .updateProduct(product)\r\n    .then(() => {\r\n      dispatch(actions.productUpdated({ product }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't update product\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const updateProductsStatus = (ids, status) => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .updateStatusForProducts(ids, status)\r\n    .then(() => {\r\n      dispatch(actions.productsStatusUpdated({ ids, status }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't update products status\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const deleteProducts = ids => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .deleteProducts(ids)\r\n    .then(() => {\r\n      dispatch(actions.productsDeleted({ ids }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't delete products\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n","export const ProductStatusCssClasses = [\"danger\", \"success\", \"info\", \"\"];\r\nexport const ProductStatusTitles = [\"Inactive\", \"Active\"];\r\nexport const ProductConditionCssClasses = [\"success\", \"danger\", \"\"];\r\nexport const ProductConditionTitles = ['NE','NS', 'SV', 'AR', 'FN', 'US', 'RP'];\r\nexport const YES_NO_OPTIONS = ['No','Yes'];\r\nexport const UOM_CHOICES = ['CM', 'Box', 'KG'];\r\nexport const defaultSorted = [{ dataField: \"id\", order: \"asc\" }];\r\nexport const sizePerPageList = [\r\n  { text: \"100\", value: 100 },\r\n  { text: \"150\", value: 150 },\r\n  { text: \"200\", value: 200 }\r\n];\r\nexport const initialFilter = {\r\n  filter: {\r\n    model: \"\",\r\n    manufacture: \"\",\r\n    VINCode: \"\"\r\n  },\r\n  sortOrder: \"asc\", // asc||desc\r\n  sortField: \"VINCode\",\r\n  pageNumber: 1,\r\n  pageSize: 100\r\n};\r\nexport const AVAILABLE_COLORS = [\r\n  \"Red\",\r\n  \"CadetBlue\",\r\n  \"Eagle\",\r\n  \"Gold\",\r\n  \"LightSlateGrey\",\r\n  \"RoyalBlue\",\r\n  \"Crimson\",\r\n  \"Blue\",\r\n  \"Sienna\",\r\n  \"Indigo\",\r\n  \"Green\",\r\n  \"Violet\",\r\n  \"GoldenRod\",\r\n  \"OrangeRed\",\r\n  \"Khaki\",\r\n  \"Teal\",\r\n  \"Purple\",\r\n  \"Orange\",\r\n  \"Pink\",\r\n  \"Black\",\r\n  \"DarkTurquoise\"\r\n];\r\n\r\nexport const AVAILABLE_MANUFACTURES = [\r\n  \"Pontiac\",\r\n  \"Kia\",\r\n  \"Lotus\",\r\n  \"Subaru\",\r\n  \"Jeep\",\r\n  \"Isuzu\",\r\n  \"Mitsubishi\",\r\n  \"Oldsmobile\",\r\n  \"Chevrolet\",\r\n  \"Chrysler\",\r\n  \"Audi\",\r\n  \"Suzuki\",\r\n  \"GMC\",\r\n  \"Cadillac\",\r\n  \"Infinity\",\r\n  \"Mercury\",\r\n  \"Dodge\",\r\n  \"Ram\",\r\n  \"Lexus\",\r\n  \"Lamborghini\",\r\n  \"Honda\",\r\n  \"Nissan\",\r\n  \"Ford\",\r\n  \"Hyundai\",\r\n  \"Saab\",\r\n  \"Toyota\"\r\n];\r\n","import React, { createContext, useContext, useState, useCallback } from \"react\";\r\nimport { isEqual, isFunction } from \"lodash\";\r\nimport { initialFilter } from \"./ProductsUIHelpers\";\r\n\r\nconst ProductsUIContext = createContext();\r\n\r\nexport function useProductsUIContext() {\r\n  return useContext(ProductsUIContext);\r\n}\r\n\r\nexport const ProductsUIConsumer = ProductsUIContext.Consumer;\r\n\r\nexport function ProductsUIProvider({ productsUIEvents, children }) {\r\n  const [queryParams, setQueryParamsBase] = useState(initialFilter);\r\n  const [ids, setIds] = useState([]);\r\n  const setQueryParams = useCallback((nextQueryParams) => {\r\n    setQueryParamsBase((prevQueryParams) => {\r\n      if (isFunction(nextQueryParams)) {\r\n        nextQueryParams = nextQueryParams(prevQueryParams);\r\n      }\r\n\r\n      if (isEqual(prevQueryParams, nextQueryParams)) {\r\n        return prevQueryParams;\r\n      }\r\n\r\n      return nextQueryParams;\r\n    });\r\n  }, []);\r\n\r\n  const value = {\r\n    queryParams,\r\n    setQueryParamsBase,\r\n    ids,\r\n    setIds,\r\n    setQueryParams,\r\n    newProductButtonClick: productsUIEvents.newProductButtonClick,\r\n    openViewProductPage: productsUIEvents.openViewProductPage,\r\n    openEditProductPage: productsUIEvents.openEditProductPage,\r\n    openDeleteProductDialog: productsUIEvents.openDeleteProductDialog,\r\n    openDeleteProductsDialog: productsUIEvents.openDeleteProductsDialog,\r\n    openFetchProductsDialog: productsUIEvents.openFetchProductsDialog,\r\n    openUpdateProductsStatusDialog:\r\n      productsUIEvents.openUpdateProductsStatusDialog,\r\n  };\r\n\r\n  return (\r\n    <ProductsUIContext.Provider value={value}>\r\n      {children}\r\n    </ProductsUIContext.Provider>\r\n  );\r\n}\r\n","/* eslint-disable no-restricted-imports */\r\nimport React, { useEffect, useMemo } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport { ModalProgressBar } from \"../../../../../../_metronic/_partials/controls\";\r\nimport * as actions from \"../../../_redux/products/productsActions\";\r\nimport { useProductsUIContext } from \"../ProductsUIContext\";\r\n\r\nexport function ProductDeleteDialog({ id, show, onHide }) {\r\n  // Products UI Context\r\n  const productsUIContext = useProductsUIContext();\r\n  const productsUIProps = useMemo(() => {\r\n    return {\r\n      setIds: productsUIContext.setIds,\r\n      queryParams: productsUIContext.queryParams,\r\n    };\r\n  }, [productsUIContext]);\r\n\r\n  // Products Redux state\r\n  const dispatch = useDispatch();\r\n  const { isLoading } = useSelector(\r\n    (state) => ({ isLoading: state.products.actionsLoading }),\r\n    shallowEqual\r\n  );\r\n\r\n  // if !id we should close modal\r\n  useEffect(() => {\r\n    if (!id) {\r\n      onHide();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [id]);\r\n\r\n  // looking for loading/dispatch\r\n  useEffect(() => {}, [isLoading, dispatch]);\r\n\r\n  const deleteProduct = () => {\r\n    // server request for deleting product by id\r\n    dispatch(actions.deleteProduct(id)).then(() => {\r\n      // refresh list after deletion\r\n      dispatch(actions.fetchProducts(productsUIProps.queryParams));\r\n      // clear selections list\r\n      productsUIProps.setIds([]);\r\n      // closing delete modal\r\n      onHide();\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      show={show}\r\n      onHide={onHide}\r\n      aria-labelledby=\"example-modal-sizes-title-lg\"\r\n    >\r\n      {isLoading && <ModalProgressBar variant=\"query\" />}\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n          Product Delete\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        {!isLoading && (\r\n          <span>Are you sure to permanently delete this product?</span>\r\n        )}\r\n        {isLoading && <span>Product is deleting...</span>}\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            onClick={onHide}\r\n            className=\"btn btn-light btn-elevate\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <> </>\r\n          <button\r\n            type=\"button\"\r\n            onClick={deleteProduct}\r\n            className=\"btn btn-danger btn-elevate\"\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n","/* eslint-disable no-restricted-imports */\r\nimport React, { useEffect, useMemo } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport { ModalProgressBar } from \"../../../../../../_metronic/_partials/controls\";\r\nimport * as actions from \"../../../_redux/products/productsActions\";\r\nimport { useProductsUIContext } from \"../ProductsUIContext\";\r\n\r\nexport function ProductsDeleteDialog({ show, onHide }) {\r\n  // Products UI Context\r\n  const productsUIContext = useProductsUIContext();\r\n  const productsUIProps = useMemo(() => {\r\n    return {\r\n      ids: productsUIContext.ids,\r\n      setIds: productsUIContext.setIds,\r\n      queryParams: productsUIContext.queryParams,\r\n    };\r\n  }, [productsUIContext]);\r\n\r\n  // Products Redux state\r\n  const dispatch = useDispatch();\r\n  const { isLoading } = useSelector(\r\n    (state) => ({ isLoading: state.products.actionsLoading }),\r\n    shallowEqual\r\n  );\r\n\r\n  // looking for loading/dispatch\r\n  useEffect(() => {}, [isLoading, dispatch]);\r\n\r\n  // if there weren't selected products we should close modal\r\n  useEffect(() => {\r\n    if (!productsUIProps.ids || productsUIProps.ids.length === 0) {\r\n      onHide();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [productsUIProps.ids]);\r\n\r\n  const deleteProducts = () => {\r\n    // server request for deleting product by seleted ids\r\n    dispatch(actions.deleteProducts(productsUIProps.ids)).then(() => {\r\n      // refresh list after deletion\r\n      dispatch(actions.fetchProducts(productsUIProps.queryParams)).then(() => {\r\n        // clear selections list\r\n        productsUIProps.setIds([]);\r\n        // closing delete modal\r\n        onHide();\r\n      });\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      show={show}\r\n      onHide={onHide}\r\n      aria-labelledby=\"example-modal-sizes-title-lg\"\r\n    >\r\n      {isLoading && <ModalProgressBar />}\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n          Products Delete\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        {!isLoading && (\r\n          <span>Are you sure to permanently delete selected products?</span>\r\n        )}\r\n        {isLoading && <span>Products are deleting...</span>}\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            onClick={onHide}\r\n            className=\"btn btn-light btn-elevate\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <> </>\r\n          <button\r\n            type=\"button\"\r\n            onClick={deleteProducts}\r\n            className=\"btn btn-danger btn-elevate\"\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { useEffect, useMemo } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { shallowEqual, useSelector } from \"react-redux\";\r\nimport { ProductStatusCssClasses } from \"../ProductsUIHelpers\";\r\nimport { useProductsUIContext } from \"../ProductsUIContext\";\r\n\r\nconst selectedProducts = (entities, ids) => {\r\n  const _products = [];\r\n  ids.forEach((id) => {\r\n    const product = entities.find((el) => el.id === id);\r\n    if (product) {\r\n      _products.push(product);\r\n    }\r\n  });\r\n  return _products;\r\n};\r\n\r\nexport function ProductsFetchDialog({ show, onHide }) {\r\n  // Products UI Context\r\n  const productsUIContext = useProductsUIContext();\r\n  const productsUIProps = useMemo(() => {\r\n    return {\r\n      ids: productsUIContext.ids,\r\n      queryParams: productsUIContext.queryParams,\r\n    };\r\n  }, [productsUIContext]);\r\n\r\n  // Products Redux state\r\n  const { products } = useSelector(\r\n    (state) => ({\r\n      products: selectedProducts(state.products.entities, productsUIProps.ids),\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  // if there weren't selected ids we should close modal\r\n  useEffect(() => {\r\n    if (!productsUIProps.ids || productsUIProps.ids.length === 0) {\r\n      onHide();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [productsUIProps.ids]);\r\n\r\n  return (\r\n    <Modal\r\n      show={show}\r\n      onHide={onHide}\r\n      aria-labelledby=\"example-modal-sizes-title-lg\"\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n          Fetch selected elements\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <div className=\"list-timeline list-timeline-skin-light padding-30\">\r\n          <div className=\"list-timeline-items\">\r\n            {products.map((product) => (\r\n              <div className=\"list-timeline-item mb-3\" key={product.id}>\r\n                <span className=\"list-timeline-text\">\r\n                  <span\r\n                    className={`label label-lg label-light-${\r\n                      ProductStatusCssClasses[product.status]\r\n                    } label-inline`}\r\n                    style={{ width: \"60px\" }}\r\n                  >\r\n                    ID: {product.id}\r\n                  </span>{\" \"}\r\n                  <span className=\"ml-5\">\r\n                    {product.manufacture}, {product.model}\r\n                  </span>\r\n                </span>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            onClick={onHide}\r\n            className=\"btn btn-light btn-elevate\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <> </>\r\n          <button\r\n            type=\"button\"\r\n            onClick={onHide}\r\n            className=\"btn btn-info btn-elevate\"\r\n          >\r\n            Ok\r\n          </button>\r\n        </div>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { useEffect, useState, useMemo } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport { ProductStatusCssClasses } from \"../ProductsUIHelpers\";\r\nimport * as actions from \"../../../_redux/products/productsActions\";\r\nimport { useProductsUIContext } from \"../ProductsUIContext\";\r\n\r\nconst selectedProducts = (entities, ids) => {\r\n  const _products = [];\r\n  ids.forEach((id) => {\r\n    const product = entities.find((el) => el.id === id);\r\n    if (product) {\r\n      _products.push(product);\r\n    }\r\n  });\r\n  return _products;\r\n};\r\n\r\nexport function ProductsUpdateStatusDialog({ show, onHide }) {\r\n  // Products UI Context\r\n  const productsUIContext = useProductsUIContext();\r\n  const productsUIProps = useMemo(() => {\r\n    return {\r\n      ids: productsUIContext.ids,\r\n      setIds: productsUIContext.setIds,\r\n      queryParams: productsUIContext.queryParams,\r\n    };\r\n  }, [productsUIContext]);\r\n\r\n  // Products Redux state\r\n  const { products, isLoading } = useSelector(\r\n    (state) => ({\r\n      products: selectedProducts(state.products.entities, productsUIProps.ids),\r\n      isLoading: state.products.actionsLoading,\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  // if there weren't selected products we should close modal\r\n  useEffect(() => {\r\n    if (productsUIProps.ids || productsUIProps.ids.length === 0) {\r\n      onHide();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [productsUIProps.ids]);\r\n\r\n  const [status, setStatus] = useState(0);\r\n\r\n  const dispatch = useDispatch();\r\n  const updateStatus = () => {\r\n    // server request for updateing product by ids\r\n    dispatch(actions.updateProductsStatus(productsUIProps.ids, status)).then(\r\n      () => {\r\n        // refresh list after deletion\r\n        dispatch(actions.fetchProducts(productsUIProps.queryParams)).then(\r\n          () => {\r\n            // clear selections list\r\n            productsUIProps.setIds([]);\r\n            // closing delete modal\r\n            onHide();\r\n          }\r\n        );\r\n      }\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      show={show}\r\n      onHide={onHide}\r\n      aria-labelledby=\"example-modal-sizes-title-lg\"\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n          Status has been updated for selected products\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body className=\"overlay overlay-block cursor-default\">\r\n        {isLoading && (\r\n          <div className=\"overlay-layer bg-transparent\">\r\n            <div className=\"spinner spinner-lg spinner-warning\" />\r\n          </div>\r\n        )}\r\n        <div className=\"list-timeline list-timeline-skin-light padding-30\">\r\n          <div className=\"list-timeline-items\">\r\n            {products.map((product) => (\r\n              <div className=\"list-timeline-item mb-3\" key={product.id}>\r\n                <span className=\"list-timeline-text\">\r\n                  <span\r\n                    className={`label label-lg label-light-${\r\n                      ProductStatusCssClasses[product.status]\r\n                    } label-inline`}\r\n                    style={{ width: \"60px\" }}\r\n                  >\r\n                    ID: {product.id}\r\n                  </span>{\" \"}\r\n                  <span className=\"ml-5\">\r\n                    {product.manufacture}, {product.model}\r\n                  </span>\r\n                </span>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </Modal.Body>\r\n      <Modal.Footer className=\"form\">\r\n        <div className=\"form-group\">\r\n          <select\r\n            className={`form-control ${ProductStatusCssClasses[status]}`}\r\n            value={status}\r\n            onChange={(e) => setStatus(+e.target.value)}\r\n          >\r\n            <option value=\"0\">Selling</option>\r\n            <option value=\"1\">Sold</option>\r\n          </select>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <button\r\n            type=\"button\"\r\n            onClick={onHide}\r\n            className=\"btn btn-light btn-elevate\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <> </>\r\n          <button\r\n            type=\"button\"\r\n            onClick={updateStatus}\r\n            className=\"btn btn-info btn-elevate\"\r\n          >\r\n            Update Status\r\n          </button>\r\n        </div>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { useMemo } from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport { isEqual } from \"lodash\";\r\nimport { useProductsUIContext } from \"../ProductsUIContext\";\r\nimport {ProductConditionTitles, YES_NO_OPTIONS, UOM_CHOICES} from \"../ProductsUIHelpers\";\r\n\r\nconst prepareFilter = (queryParams, values) => {\r\n  const { status, condition, hazmat, unit_of_measure, hot_sale_item, searchText } = values;\r\n  const newQueryParams = { ...queryParams };\r\n  const filter = {};\r\n  // Filter by status\r\n  filter.status = status !== \"\" ? status : undefined;\r\n  // Filter by condition\r\n  filter.condition = condition !== \"\" ? condition : undefined;\r\n  filter.unit_of_measure = unit_of_measure !== \"\" ? unit_of_measure : undefined;\r\n  filter.hot_sale_item = hot_sale_item !== \"\" ? hot_sale_item : undefined;\r\n  filter.hazmat = hazmat !== \"\" ? hazmat : undefined;\r\n  // Filter by all fields\r\n  filter.search = searchText;\r\n\r\n  newQueryParams.filter = filter;\r\n  return newQueryParams;\r\n};\r\n\r\nexport function ProductsFilter({ listLoading }) {\r\n  // Products UI Context\r\n  const productsUIContext = useProductsUIContext();\r\n  const productsUIProps = useMemo(() => {\r\n    return {\r\n      setQueryParams: productsUIContext.setQueryParams,\r\n      queryParams: productsUIContext.queryParams,\r\n    };\r\n  }, [productsUIContext]);\r\n\r\n  const applyFilter = (values) => {\r\n    const newQueryParams = prepareFilter(productsUIProps.queryParams, values);\r\n    if (!isEqual(newQueryParams, productsUIProps.queryParams)) {\r\n      newQueryParams.pageNumber = 1;\r\n      productsUIProps.setQueryParams(newQueryParams);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Formik\r\n        initialValues={{\r\n          status: \"\", // values => All=\"\"/Selling=0/Sold=1\r\n          condition: \"\", // values => All=\"\"/New=0/Used=1\r\n          searchText: \"\", \r\n          hazmat:\"\", \r\n          unit_of_measure:\"\", \r\n          hot_sale_item:\"\",\r\n        }}\r\n        onSubmit={(values) => {\r\n          applyFilter(values);\r\n        }}\r\n      >\r\n        {({\r\n          values,\r\n          handleSubmit,\r\n          handleBlur,\r\n          handleChange,\r\n          setFieldValue,\r\n        }) => (\r\n          <form onSubmit={handleSubmit} className=\"form form-label-right\">\r\n            <div className=\"form-group row\">\r\n              <div className=\"col-lg-2\">\r\n                <select\r\n                  className=\"form-control\"\r\n                  name=\"status\"\r\n                  placeholder=\"Filter by Status\"\r\n                  onChange={(e) => {\r\n                    setFieldValue(\"status\", e.target.value);\r\n                    handleSubmit();\r\n                  }}\r\n                  onBlur={handleBlur}\r\n                  value={values.status}\r\n                >\r\n                  <option value=\"\">All</option>\r\n                  <option value=\"0\">Inactive</option>\r\n                  <option value=\"1\">Active</option>\r\n                </select>\r\n                <small className=\"form-text text-muted\">\r\n                  <b>Filter</b> by Status\r\n                </small>\r\n              </div>\r\n              <div className=\"col-lg-2\">\r\n                <select\r\n                  className=\"form-control\"\r\n                  placeholder=\"Filter by condition\"\r\n                  name=\"condition\"\r\n                  onBlur={handleBlur}\r\n                  onChange={(e) => {\r\n                    setFieldValue(\"condition\", e.target.value);\r\n                    handleSubmit();\r\n                  }}\r\n                  value={values.condition}\r\n                >\r\n                  <option value=\"\">All</option>\r\n                  {ProductConditionTitles.map((condition, i) => \r\n                    <option key={i} value={condition}>{condition}</option>)\r\n                  }\r\n                </select>\r\n                <small className=\"form-text text-muted\">\r\n                  <b>Filter</b> by Condition\r\n                </small>\r\n              </div>\r\n              <div className=\"col-lg-2\">\r\n                <select\r\n                  className=\"form-control\"\r\n                  placeholder=\"Filter by UOM\"\r\n                  name=\"unit_of_measure\"\r\n                  onBlur={handleBlur}\r\n                  onChange={(e) => {\r\n                    setFieldValue(\"unit_of_measure\", e.target.value);\r\n                    handleSubmit();\r\n                  }}\r\n                  value={values.unit_of_measure}\r\n                >\r\n                  <option value=\"\">All</option>\r\n                  {UOM_CHOICES.map((opt, i) => \r\n                    <option key={i} value={opt}>{opt}</option>)\r\n                  }\r\n                </select>\r\n                <small className=\"form-text text-muted\">\r\n                  <b>Filter</b> by UOM\r\n                </small>\r\n              </div>\r\n              <div className=\"col-lg-2\">\r\n                <select\r\n                  className=\"form-control\"\r\n                  placeholder=\"Filter by Hazmat\"\r\n                  name=\"hazmat\"\r\n                  onBlur={handleBlur}\r\n                  onChange={(e) => {\r\n                    setFieldValue(\"hazmat\", e.target.value);\r\n                    handleSubmit();\r\n                  }}\r\n                  value={values.hazmat}\r\n                >\r\n                  <option value=\"\">All</option>\r\n                  {YES_NO_OPTIONS.map((opt, i) => \r\n                    <option key={i} value={opt}>{opt}</option>)\r\n                  }\r\n                </select>\r\n                <small className=\"form-text text-muted\">\r\n                  <b>Filter</b> by Hazmat\r\n                </small>\r\n              </div>\r\n              <div className=\"col-lg-2\">\r\n                <select\r\n                  className=\"form-control\"\r\n                  placeholder=\"Filter by Hot Sale Item\"\r\n                  name=\"hot_sale_item\"\r\n                  onBlur={handleBlur}\r\n                  onChange={(e) => {\r\n                    setFieldValue(\"hot_sale_item\", e.target.value);\r\n                    handleSubmit();\r\n                  }}\r\n                  value={values.hot_sale_item}\r\n                >\r\n                  <option value=\"\">All</option>\r\n                  {YES_NO_OPTIONS.map((opt, i) => \r\n                    <option key={i} value={opt}>{opt}</option>)\r\n                  }\r\n                </select>\r\n                <small className=\"form-text text-muted\">\r\n                  <b>Filter</b> by Hot Sale Item\r\n                </small>\r\n              </div>\r\n              <div className=\"col-lg-2\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"searchText\"\r\n                  placeholder=\"Search\"\r\n                  onBlur={handleBlur}\r\n                  value={values.searchText}\r\n                  onChange={(e) => {\r\n                    setFieldValue(\"searchText\", e.target.value);\r\n                    handleSubmit();\r\n                  }}\r\n                />\r\n                <small className=\"form-text text-muted\">\r\n                  <b>Search</b> in all fields\r\n                </small>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  ProductStatusCssClasses,\r\n  ProductStatusTitles\r\n} from \"../../ProductsUIHelpers\";\r\n\r\nexport const StatusColumnFormatter = (cellContent, row) => (\r\n  <span\r\n    className={`label label-lg label-light-${\r\n      ProductStatusCssClasses[row.status]\r\n    } label-inline`}\r\n  >\r\n    {ProductStatusTitles[row.status]}\r\n  </span>\r\n);\r\n","import React from \"react\";\r\nimport {\r\n  ProductConditionCssClasses,\r\n  ProductConditionTitles\r\n} from \"../../ProductsUIHelpers\";\r\n\r\nexport const ConditionColumnFormatter = (cellContent, row) => (\r\n  <>\r\n    <span\r\n      className={`badge badge-${\r\n        'info'\r\n      } badge-dot`}\r\n    ></span>\r\n    &nbsp;\r\n    <span\r\n      className={`font-bold font-${\r\n        ProductConditionCssClasses[row.condition]\r\n      }`}\r\n    >\r\n      {row?.condition?.toUpperCase()}\r\n    </span>\r\n  </>\r\n);\r\n","/* eslint-disable no-script-url,jsx-a11y/anchor-is-valid */\r\nimport React from \"react\";\r\nimport { OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\nimport SVG from \"react-inlinesvg\";\r\nimport { toAbsoluteUrl } from \"../../../../../../../_metronic/_helpers\";\r\n\r\nexport const ActionsColumnFormatter = (\r\n  cellContent,\r\n  row,\r\n  rowIndex,\r\n  { openViewProductPage, openEditProductPage, openDeleteProductDialog }\r\n) => (\r\n  <>\r\n    <OverlayTrigger\r\n      overlay={<Tooltip id=\"products-view-tooltip\">View product</Tooltip>}\r\n    >\r\n      <a\r\n        className=\"btn btn-icon btn-light btn-hover-info btn-xs\"\r\n        onClick={() => openViewProductPage(row.id)}\r\n      >\r\n        <span className=\"svg-icon svg-icon-md svg-icon-info\">\r\n         <i className=\"text-info fa fa-eye\"></i>\r\n        </span>\r\n      </a>\r\n    </OverlayTrigger>\r\n    <OverlayTrigger\r\n      overlay={<Tooltip id=\"products-edit-tooltip\">Edit product</Tooltip>}\r\n    >\r\n      <a\r\n        className=\"btn btn-icon btn-light btn-hover-info btn-xs\"\r\n        onClick={() => openEditProductPage(row.id)}\r\n      >\r\n        <span className=\"svg-icon svg-icon-md svg-icon-info\">\r\n          <SVG\r\n            src={toAbsoluteUrl(\"/static/media/svg/icons/Communication/Write.svg\")}\r\n          />\r\n        </span>\r\n      </a>\r\n    </OverlayTrigger>\r\n\r\n    <> </>\r\n    <OverlayTrigger\r\n      overlay={<Tooltip id=\"products-delete-tooltip\">Delete product</Tooltip>}\r\n    >\r\n      <a\r\n        className=\"btn btn-icon btn-light btn-hover-danger btn-xs\"\r\n        onClick={() => openDeleteProductDialog(row.id)}\r\n      >\r\n        <span className=\"svg-icon svg-icon-md svg-icon-danger\">\r\n          <SVG src={toAbsoluteUrl(\"/static/media/svg/icons/General/Trash.svg\")} />\r\n        </span>\r\n      </a>\r\n    </OverlayTrigger>\r\n  </>\r\n);\r\n","// React bootstrap table next =>\r\n// DOCS: https://react-bootstrap-table.github.io/react-bootstrap-table2/docs/\r\n// STORYBOOK: https://react-bootstrap-table.github.io/react-bootstrap-table2/storybook/index.html\r\nimport React, { useEffect, useMemo } from \"react\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory, {\r\n  PaginationProvider,\r\n} from \"react-bootstrap-table2-paginator\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport * as actions from \"../../../_redux/products/productsActions\";\r\nimport * as uiHelpers from \"../ProductsUIHelpers\";\r\nimport {\r\n  getSelectRow,\r\n  getHandlerTableChange,\r\n  NoRecordsFoundMessage,\r\n  PleaseWaitMessage,\r\n  sortCaret,\r\n} from \"../../../../../../_metronic/_helpers\";\r\nimport * as columnFormatters from \"./column-formatters\";\r\nimport { Pagination } from \"../../../../../../_metronic/_partials/controls\";\r\nimport { useProductsUIContext } from \"../ProductsUIContext\";\r\n\r\nexport function ProductsTable() {\r\n  // Products UI Context\r\n  const productsUIContext = useProductsUIContext();\r\n  const productsUIProps = useMemo(() => {\r\n    return {\r\n      ids: productsUIContext.ids,\r\n      setIds: productsUIContext.setIds,\r\n      queryParams: productsUIContext.queryParams,\r\n      setQueryParams: productsUIContext.setQueryParams,\r\n      openViewProductPage: productsUIContext.openViewProductPage,\r\n      openEditProductPage: productsUIContext.openEditProductPage,\r\n      openDeleteProductDialog: productsUIContext.openDeleteProductDialog,\r\n    };\r\n  }, [productsUIContext]);\r\n\r\n  // Getting curret state of products list from store (Redux)\r\n  const { currentState } = useSelector(\r\n    (state) => ({ currentState: state.products }),\r\n    shallowEqual\r\n  );\r\n  const { totalCount, entities, listLoading, pageNumber } = currentState;\r\n  // Products Redux state\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    console.log('checking', productsUIProps.queryParams);\r\n    // clear selections list\r\n    productsUIProps.setIds([]);\r\n    // server call by queryParams\r\n    dispatch(actions.fetchProducts(productsUIProps.queryParams));\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [productsUIProps.queryParams, dispatch]);\r\n  // Table columns\r\n  const columns = [\r\n    {\r\n      dataField: \"part_number\",\r\n      text: \"PN\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n    },\r\n    {\r\n      dataField: \"product_title\",\r\n      text: \"Title\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n    },\r\n    {\r\n      dataField: \"short_description\",\r\n      text: \"Description\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n    },\r\n    {\r\n      dataField: \"condition\",\r\n      text: \"Condition\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      formatter: columnFormatters.ConditionColumnFormatter,\r\n    },\r\n    {\r\n      dataField: \"hazmat\",\r\n      text: \"Hazmat\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n    },\r\n    {\r\n      dataField: \"unit_price\",\r\n      text: \"Unit Price\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n    },\r\n    {\r\n      dataField: \"status\",\r\n      text: \"Status\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      formatter: columnFormatters.StatusColumnFormatter,\r\n    },\r\n    {\r\n      dataField: \"action\",\r\n      text: \"Actions\",\r\n      formatter: columnFormatters.ActionsColumnFormatter,\r\n      formatExtraData: {\r\n        openViewProductPage: productsUIProps.openViewProductPage,\r\n        openEditProductPage: productsUIProps.openEditProductPage,\r\n        openDeleteProductDialog: productsUIProps.openDeleteProductDialog,\r\n      },\r\n      classes: \"text-right pr-0\",\r\n      headerClasses: \"text-right pr-3\",\r\n      style: {\r\n        minWidth: \"100px\",\r\n      },\r\n    },\r\n  ];\r\n  // Table pagination properties\r\n  const paginationOptions = {\r\n    custom: true,\r\n    totalSize: totalCount,\r\n    sizePerPageList: uiHelpers.sizePerPageList,\r\n    sizePerPage: productsUIProps.queryParams.pageSize,\r\n    page: pageNumber,\r\n    onPageChange: (page, sizePerPage) => {\r\n       console.log('productsUIProps.queryParams', productsUIProps.queryParams);\r\n      productsUIProps.setQueryParams({...productsUIProps.queryParams, pageNumber:pageNumber});\r\n      console.log('page', page);\r\n      console.log('sizePerPage', sizePerPage);\r\n    },\r\n    onSizePerPageChange: (page, sizePerPage) => {\r\n       // productsUIProps.setQueryParams();\r\n      console.log('page', page);\r\n      console.log('sizePerPage', sizePerPage);\r\n    }\r\n  };\r\n  let data = [];\r\n  return (\r\n    <>\r\n      <PaginationProvider pagination={paginationFactory(paginationOptions)}>\r\n        {({ paginationProps, paginationTableProps }) => {\r\n          return (\r\n            <Pagination\r\n              isLoading={listLoading}\r\n              paginationProps={paginationProps}\r\n            >\r\n              <BootstrapTable\r\n                wrapperClasses=\"table-responsive\"\r\n                classes=\"table table-head-custom table-vertical-center overflow-hidden\"\r\n                bootstrap4\r\n                bordered={false}\r\n                remote\r\n                keyField=\"id\"\r\n                data= {entities}\r\n                columns={columns}\r\n                defaultSorted={uiHelpers.defaultSorted}\r\n                onTableChange={getHandlerTableChange(\r\n                  productsUIProps.setQueryParams\r\n                )}\r\n                selectRow={getSelectRow({\r\n                  entities,\r\n                  ids: productsUIProps.ids,\r\n                  setIds: productsUIProps.setIds,\r\n                })}\r\n                {...paginationTableProps}\r\n              >\r\n                <PleaseWaitMessage entities={entities} />\r\n                <NoRecordsFoundMessage entities={entities} />\r\n              </BootstrapTable>\r\n            </Pagination>\r\n          );\r\n        }}\r\n      </PaginationProvider>\r\n    </>\r\n  );\r\n}\r\n","import React, { useMemo } from \"react\";\r\nimport { useProductsUIContext } from \"../ProductsUIContext\";\r\n\r\nexport function ProductsGrouping() {\r\n  // Products UI Context\r\n  const productsUIContext = useProductsUIContext();\r\n  const productsUIProps = useMemo(() => {\r\n    return {\r\n      ids: productsUIContext.ids,\r\n      setIds: productsUIContext.setIds,\r\n      openDeleteProductsDialog: productsUIContext.openDeleteProductsDialog,\r\n      openFetchProductsDialog: productsUIContext.openFetchProductsDialog,\r\n      openUpdateProductsStatusDialog:\r\n        productsUIContext.openUpdateProductsStatusDialog,\r\n    };\r\n  }, [productsUIContext]);\r\n\r\n  return (\r\n    <div className=\"form\">\r\n      <div className=\"row align-items-center form-group-actions margin-top-20 margin-bottom-20\">\r\n        <div className=\"col-xl-12\">\r\n          <div className=\"form-group form-group-inline\">\r\n            <div className=\"form-label form-label-no-wrap\">\r\n              <label className=\"-font-bold font-danger-\">\r\n                <span>\r\n                  Selected records count: <b>{productsUIProps.ids.length}</b>\r\n                </span>\r\n              </label>\r\n            </div>\r\n            <div>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-danger font-weight-bolder font-size-sm\"\r\n                onClick={productsUIProps.openDeleteProductsDialog}\r\n              >\r\n                <i className=\"fa fa-trash\"></i> Delete All\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, {useMemo, createRef, useState} from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar,\r\n} from \"../../../../../_metronic/_partials/controls\";\r\nimport { ProductsFilter } from \"./products-filter/ProductsFilter\";\r\nimport { ProductsTable } from \"./products-table/ProductsTable\";\r\nimport { ProductsGrouping } from \"./products-grouping/ProductsGrouping\";\r\nimport { useProductsUIContext } from \"./ProductsUIContext\";\r\nimport CSVReader from 'react-csv-reader';\r\nimport {post} from '../../../../pages/helper/api';\r\nimport { CsvToHtmlTable } from 'react-csv-to-table';\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport { Importer, ImporterField } from 'react-csv-importer';\r\nimport CsvViewer from \"react-csv-viewer\";\r\nimport DataTable from 'react-data-table-component';\r\nimport PropTypes from 'prop-types';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport { amber, green } from '@material-ui/core/colors';\r\nimport {\r\n    IconButton, Paper, FormControlLabel, Switch, Snackbar, Checkbox, Toolbar, Tooltip, Typography, SnackbarContent\r\n} from '@material-ui/core';\r\nimport clsx from 'clsx';\r\nimport {\r\n    Delete as DeleteIcon, Close as CloseIcon, CheckCircle as CheckCircleIcon, Error as ErrorIcon, Info as InfoIcon,\r\n    Warning as WarningIcon\r\n} from '@material-ui/icons';\r\n\r\n\r\nconst columns = [\r\n  {selector: 'product_title'        , name: 'Product Title'        },\r\n  {selector: 'part_number'          , name: 'Part Number'          },\r\n  {selector: 'alt_part_number'      , name: 'Alt Part Number'      },\r\n  {selector: 'quantity'             , name: 'Quantity'             },\r\n  {selector: 'unit_of_measure'      , name: 'Measure Unit'      },\r\n  {selector: 'unit_price'           , name: 'unit_price'           },\r\n  {selector: 'description'          , name: 'Description'          },\r\n  {selector: 'short_description'    , name: 'Short Description'    },\r\n  {selector: 'condition'            , name: 'Condition'            },\r\n  {selector: 'tag_date'             , name: 'Tag Date'             },\r\n  {selector: 'turn_around_time'     , name: 'Turn Around Time'     },\r\n  {selector: 'hazmat'               , name: 'Hazmat'               },\r\n  {selector: 'un_code'              , name: 'Un Code'              },\r\n  {selector: 'stock_location'       , name: 'Stock Location'       },\r\n  {selector: 'certification'        , name: 'Certification'        },\r\n  {selector: 'hot_sale_item'        , name: 'Hot Sale Item'        },\r\n  {selector: 'supplier'             , name: 'Supplier'             },\r\n  {selector: 'product_category'     , name: 'Product Category'     },\r\n  {selector: 'product_manufacturer' , name: 'Product Manufacturer' }\r\n];\r\n\r\nconst variantIcon = {\r\n  success: CheckCircleIcon,\r\n  warning: WarningIcon,\r\n  error: ErrorIcon,\r\n  info: InfoIcon,\r\n};\r\n\r\nconst useStylesSnackbarContent = makeStyles(theme => ({\r\n  success: {\r\n    backgroundColor: green[600],\r\n  },\r\n  error: {\r\n    backgroundColor: theme.palette.error.dark,\r\n  },\r\n  info: {\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n  warning: {\r\n    backgroundColor: amber[700],\r\n  },\r\n  icon: {\r\n    fontSize: 20,\r\n  },\r\n  iconVariant: {\r\n    opacity: 0.9,\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  message: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n}));\r\n\r\nfunction SnackbarContentWrapper(props) {\r\n  const classes = useStylesSnackbarContent();\r\n  const { className, message, onClose, variant, ...other } = props;\r\n  const Icon = variantIcon[variant];\r\n\r\n  return (\r\n    <SnackbarContent\r\n      className={clsx(classes[variant], className)}\r\n      aria-describedby=\"client-snackbar\"\r\n      message={\r\n        <span id=\"client-snackbar\" className={classes.message}>\r\n          <Icon className={clsx(classes.icon, classes.iconVariant)} />\r\n          {message}\r\n        </span>\r\n      }\r\n      action={[\r\n        <IconButton key=\"close\" aria-label=\"close\" color=\"inherit\" onClick={onClose}>\r\n          <CloseIcon className={classes.icon} />\r\n        </IconButton>,\r\n      ]}\r\n      {...other}\r\n    />\r\n  );\r\n}\r\n\r\nSnackbarContentWrapper.propTypes = {\r\n  className: PropTypes.string,\r\n  message: PropTypes.string,\r\n  onClose: PropTypes.func,\r\n  variant: PropTypes.oneOf(['error', 'info', 'success', 'warning']).isRequired,\r\n};\r\n\r\nexport function ProductsCard() {\r\n  const [csvData, setCsvData] = useState('');\r\n  const [csvModal, setCsvModal] = useState(false);\r\n  const [processing, setProcessing] = useState(false);\r\n  const [importData, setImportData] = useState([]);\r\n  const [message, setMessage] = useState('');\r\n  const [messageType, setMessageType] = React.useState('success');\r\n  const [open, setOpen] = React.useState(false); // show/hide Snackbar\r\n  const productsUIContext = useProductsUIContext();\r\n  const productsUIProps = useMemo(() => {\r\n    return {\r\n      ids: productsUIContext.ids,\r\n      queryParams: productsUIContext.queryParams,\r\n      setQueryParams: productsUIContext.setQueryParams,\r\n      newProductButtonClick: productsUIContext.newProductButtonClick,\r\n      openDeleteProductsDialog: productsUIContext.openDeleteProductsDialog,\r\n      openEditProductPage: productsUIContext.openEditProductPage,\r\n      openViewProductPage: productsUIContext.openViewProductPage,\r\n      openUpdateProductsStatusDialog:\r\n        productsUIContext.openUpdateProductsStatusDialog,\r\n      openFetchProductsDialog: productsUIContext.openFetchProductsDialog,\r\n    };\r\n  }, [productsUIContext]);\r\n\r\n  const inputFile = createRef();\r\n\r\n  const handleCloseSnackbar = (event, reason) => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader title=\"Products\">\r\n        <CardHeaderToolbar>\r\n          <a\r\n            href=\"/static/Product_Sample.csv\"\r\n            ref={inputFile}\r\n            download\r\n            style={{display:'none'}}\r\n          >\r\n          </a>\r\n    \r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-danger mr-2\"\r\n            onClick={() => setCsvModal(true)}\r\n          >\r\n            Import Products\r\n          </button>\r\n\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-info\"\r\n            onClick={productsUIProps.newProductButtonClick}\r\n          >\r\n            Add Product\r\n          </button>\r\n        </CardHeaderToolbar>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <Modal\r\n          backdrop={processing ? \"static\":true}\r\n          size=\"xl\"\r\n          show={csvModal}\r\n          onHide={() => {setCsvModal(false);setCsvData([])}}\r\n          aria-labelledby=\"example-modal-sizes-title-lg\"\r\n        >\r\n          <Modal.Header closeButton className=\"pr-0\">\r\n              <div className=\"row\" style={{width:'100%'}}>\r\n                <div className=\"col-md-4\">\r\n                  <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n                    Import Data\r\n                  </Modal.Title>\r\n                </div>\r\n                <div className=\"col-md-8 text-right\">\r\n                  {csvData.length ?\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-danger mr-2 float-right\"\r\n                    onClick={() => {\r\n                      if(!processing) {\r\n                        setProcessing(true);\r\n                        post(\"import\", {data:importData, model:\"Inventory\"}).then((response) => {\r\n                          setProcessing(false);\r\n                          setImportData([]);\r\n                          setCsvData([]);\r\n                          setOpen(true);\r\n                          setCsvModal(false);\r\n                          setMessage('Product imported successfully');\r\n                        }).catch((error) => {\r\n                          setProcessing(false);\r\n                          setImportData([]);\r\n                          setCsvData([]);\r\n                          setOpen(true);\r\n                          setMessage('Error occur! Try again');\r\n                        });\r\n                      }\r\n                    }}\r\n                  > {processing ? 'Importing...' : 'Confirm Import'}\r\n                  </button> :\r\n                  <CSVReader\r\n                    cssClass=\"float-right\"\r\n                    cssInputClass=\"d-none\"\r\n                    label={<span className=\" btn btn-info mr-2\">Choose CSV File</span>}\r\n                    onFileLoaded={(data) => {\r\n                      setImportData(data);\r\n                      let csvDataTemp = data.map((row, i) => {\r\n                        let obj_dt = {}\r\n                        row.map((col, k) => {\r\n                          console.log('col', col);\r\n                          obj_dt[data[0][k]] = col;\r\n                        });\r\n                        return obj_dt;\r\n                      });\r\n\r\n                      csvDataTemp.shift();\r\n\r\n                      setCsvData(csvDataTemp);\r\n\r\n                    }}\r\n                  />}\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-success mr-2\"\r\n                    onClick={() => inputFile.current.click()}\r\n                  >\r\n                    Download Template\r\n                  </button>\r\n                </div>\r\n              </div>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n\r\n          <DataTable\r\n            data={csvData}\r\n            columns={columns}\r\n            pagination\r\n            noHeader={true}\r\n            dense={true}\r\n          />\r\n\r\n          </Modal.Body>\r\n        </Modal>\r\n        <ProductsFilter />\r\n        {productsUIProps.ids.length > 0 && (\r\n          <>\r\n            <ProductsGrouping />\r\n          </>\r\n        )}\r\n        <ProductsTable />\r\n      <Snackbar\r\n          anchorOrigin={{\r\n            vertical: 'top',\r\n            horizontal: 'right',\r\n          }}\r\n          open={open}\r\n          autoHideDuration={3000}\r\n          onClose={handleCloseSnackbar}\r\n        >\r\n          <SnackbarContentWrapper\r\n            onClose={handleCloseSnackbar}\r\n            variant={messageType}\r\n            message={message}\r\n          />\r\n      </Snackbar>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { ProductsLoadingDialog } from \"./products-loading-dialog/ProductsLoadingDialog\";\r\nimport { ProductDeleteDialog } from \"./product-delete-dialog/ProductDeleteDialog\";\r\nimport { ProductsDeleteDialog } from \"./products-delete-dialog/ProductsDeleteDialog\";\r\nimport { ProductsFetchDialog } from \"./products-fetch-dialog/ProductsFetchDialog\";\r\nimport { ProductsUpdateStatusDialog } from \"./products-update-status-dialog/ProductsUpdateStatusDialog\";\r\nimport { ProductsCard } from \"./ProductsCard\";\r\nimport { ProductsUIProvider } from \"./ProductsUIContext\";\r\nimport {ADMIN_ROUTE} from '../../../../pages/helper/api'\r\n\r\nexport function ProductsPage({ history }) {\r\n  const productsUIEvents = {\r\n    newProductButtonClick: () => {\r\n      history.push(`/${ADMIN_ROUTE}/products/new`);\r\n    },\r\n    openEditProductPage: (id) => {\r\n      history.push(`/${ADMIN_ROUTE}/products/${id}/edit`);\r\n    },\r\n    openViewProductPage: (id) => {\r\n      history.push(`/${ADMIN_ROUTE}/products/${id}/view`);\r\n    },\r\n    openDeleteProductDialog: (id) => {\r\n      history.push(`/${ADMIN_ROUTE}/products/${id}/delete`);\r\n    },\r\n    openDeleteProductsDialog: () => {\r\n      history.push(`/${ADMIN_ROUTE}/products/deleteProducts`);\r\n    },\r\n    openFetchProductsDialog: () => {\r\n      history.push(`/${ADMIN_ROUTE}/products/fetch`);\r\n    },\r\n    openUpdateProductsStatusDialog: () => {\r\n      history.push(\"/\"+ADMIN_ROUTE+\"/products/updateStatus\");\r\n    },\r\n  };\r\n\r\n  return (\r\n    <ProductsUIProvider productsUIEvents={productsUIEvents}>\r\n      <ProductsLoadingDialog />\r\n      <Route path={\"/\"+ADMIN_ROUTE+\"/products/deleteProducts\"}>\r\n        {({ history, match }) => (\r\n          <ProductsDeleteDialog\r\n            show={match != null}\r\n            onHide={() => {\r\n              history.push(\"/\"+ADMIN_ROUTE+\"/products\");\r\n            }}\r\n          />\r\n        )}\r\n      </Route>\r\n      <Route path={\"/\"+ADMIN_ROUTE+\"/products/:id/delete\"}>\r\n        {({ history, match }) => (\r\n          <ProductDeleteDialog\r\n            show={match != null}\r\n            id={match && match.params.id}\r\n            onHide={() => {\r\n              history.push(\"/\"+ADMIN_ROUTE+\"/products\");\r\n            }}\r\n          />\r\n        )}\r\n      </Route>\r\n      <Route path={\"/\"+ADMIN_ROUTE+\"/products/fetch\"}>\r\n        {({ history, match }) => (\r\n          <ProductsFetchDialog\r\n            show={match != null}\r\n            onHide={() => {\r\n              history.push(\"/\"+ADMIN_ROUTE+\"/products\");\r\n            }}\r\n          />\r\n        )}\r\n      </Route>\r\n      <Route path={\"/\"+ADMIN_ROUTE+\"/products/updateStatus\"}>\r\n        {({ history, match }) => (\r\n          <ProductsUpdateStatusDialog\r\n            show={match != null}\r\n            onHide={() => {\r\n              history.push(\"/\"+ADMIN_ROUTE+\"/products\");\r\n            }}\r\n          />\r\n        )}\r\n      </Route>\r\n      <ProductsCard />\r\n    </ProductsUIProvider>\r\n  );\r\n}\r\n","// Form is based on Formik\r\n// Data validation is based on Yup\r\n// Please, be familiar with article first:\r\n// https://hackernoon.com/react-form-validation-with-formik-and-yup-8b76bda62e10\r\nimport React, { useEffect, useState, useRef } from \"react\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { Input, DatePickerField, Select as MSelect } from \"../../../../../../_metronic/_partials/controls\";\r\nimport Creatable from \"react-select/creatable\";\r\nimport { withAsyncPaginate, AsyncPaginate } from \"react-select-async-paginate\";\r\n\r\nimport Select from 'react-select';\r\nimport {\r\n  AVAILABLE_COLORS,\r\n  AVAILABLE_MANUFACTURES,\r\n  ProductStatusTitles,\r\n  YES_NO_OPTIONS,\r\n  UOM_CHOICES,\r\n  ProductConditionTitles,\r\n} from \"../ProductsUIHelpers\";\r\nimport { list, loadOptions, DROPDOWN_WAIT, post } from \"../../../../../pages/helper/api\";\r\nimport {CloudUpload as CloudUploadIcon} from \"@material-ui/icons\";\r\nimport {\r\n    Button as ButtonCore,\r\n} from \"@material-ui/core\";\r\nimport { STATIC_URL } from \"../../../../../pages/helper/api\";\r\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\r\nimport {CKEditor} from \"@ckeditor/ckeditor5-react\";\r\n\r\nconst CreatableAsyncPaginate = withAsyncPaginate(Creatable);\r\n// Validation schema\r\nconst ProductEditSchema = Yup.object().shape({\r\n  part_number: Yup.string()\r\n    .min(2, \"Minimum 2 symbols\")\r\n    .max(50, \"Maximum 50 symbols\")\r\n    .required(\"Part number is required\"),\r\n  // alt_part_number: Yup.string()\r\n  //   .min(2, \"Minimum 2 symbols\")\r\n  //   .max(50, \"Maximum 50 symbols\")\r\n  //   .required(\"Alt part number is required\"),\r\n  // product_category: Yup.string(),\r\n  // supplier: Yup.string(),\r\n  // product_manufacturer: Yup.string(),\r\n  // unit_price: Yup.number(),\r\n  // condition: Yup.string()\r\n  //   .min(2, \"Minimum 2 symbols\")\r\n  //   .max(50, \"Maximum 2 symbols\"),\r\n  // quantity: Yup.number()\r\n  //   .min(0, \"Quantity can'be negative\"),\r\n  // tag_date: Yup.date(),\r\n  // turn_around_time: Yup.string(),\r\n  // hazmat: Yup.string(),\r\n  // certification: Yup.string(),\r\n  // unit_of_measure: Yup.string(),\r\n  // hot_sale_item: Yup.string(),\r\n  // status: Yup.string(),\r\n});\r\n\r\nexport function ProductEditForm({\r\n  product,\r\n  btnRef,\r\n  saveProduct,\r\n}) {\r\n\r\n  const [categories, setCategories] = useState([]);\r\n  const [manufacturers, setManufacturers] = useState([]);\r\n  const [suppliers, setSuppliers] = useState([]);\r\n  const [modelsLoaded, setModelsLoaded] = useState(false);\r\n  const [category, setCategory] = useState({});\r\n  const [manfacturer, setManfacturer] = useState({});\r\n  const [supplier, setSupplier] = useState({});\r\n  const [selectedFile, setSelectFile] = useState(null);\r\n  const [news, setNews] = useState(null);\r\n  const [previewFile, setPreviewFile] = useState(null);\r\n  const [productImage, setProductImage] = useState(null);\r\n\r\n\r\n  useEffect(() => {\r\n    loadModels();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (product.id) {\r\n      categories.map(category => {\r\n        if(category.id === product.product_category) \r\n          setCategory(category);\r\n      })\r\n      manufacturers.map(manf => {\r\n        if(manf.id === product.product_manufacturer) \r\n          setManfacturer(manf);\r\n      })\r\n      suppliers.map(supplier => {\r\n        if(supplier.id === product.supplier) \r\n          setSupplier(supplier);\r\n      })\r\n    }\r\n\r\n    if(product.product_image) {\r\n      let file = {};\r\n      let filename_pieces = product.product_image.split('/');\r\n      file.name_c = filename_pieces[filename_pieces.length - 1];\r\n      setPreviewFile(STATIC_URL+product.product_image_name);\r\n      setSelectFile(file);\r\n    }\r\n\r\n  }, [product])\r\n\r\n  function loadModels() {\r\n    let models = {\r\n      'Manufacturer':{},\r\n      'Supplier':{},\r\n      'ProductCategory':{},\r\n    }\r\n    post('oas-models', {models:models}).then(function(response){\r\n      for(let opt in response.data){\r\n        response.data[opt].map((row, i) => {\r\n          response.data[opt][i].label = row.name ? row.name : row.company_name;\r\n          response.data[opt][i].value = row.id;\r\n\r\n          if(opt === 'ProductCategory' && row.value === product.product_category)\r\n            setCategory(row);\r\n\r\n          if(opt === 'Manufacturer' && row.value === product.product_manufacturer)\r\n            setManfacturer(row);\r\n\r\n          if(opt === 'Supplier' && row.value === product.supplier)\r\n            setSupplier(row);\r\n\r\n        })\r\n      }\r\n\r\n      setCategories(response.data.ProductCategory);\r\n      setManufacturers(response.data.Manufacturer);\r\n      setSuppliers(response.data.Supplier);\r\n      setModelsLoaded(true);\r\n    })\r\n  }\r\n\r\n  function createCategory(option, setFieldValue) {\r\n    post('product-category', {name:option}).then(function(response){\r\n      setCategory({label:response.data.name, value:response.data.id});\r\n      setFieldValue('product_category', response.data.id);\r\n    })\r\n  }\r\n\r\n  function createManfacturer(option, setFieldValue) {\r\n    post('manufacturer', {name:option}).then(function(response){\r\n      setManfacturer({label:response.data.name, value:response.data.id});\r\n      setFieldValue('product_manufacturer', response.data.id);\r\n    })\r\n  }\r\n\r\n  function createSupplier(option, setFieldValue) {\r\n    post('supplier', {company_name:option}).then(function(response){\r\n      setSupplier({label:response.data.company_name, value:response.data.id});\r\n      setFieldValue('supplier', response.data.id);\r\n    })\r\n  }\r\n\r\n\r\n  function fileChangedHandler(event)  {\r\n        let file = event.target.files[0];\r\n        setPreviewFile(URL.createObjectURL(file));\r\n        if (file != undefined) {\r\n            file.size_c = file.size / 1024;\r\n\r\n            if ((file.size_c) / 1024 > 2) {\r\n                file.size_c = (file.size_c / 1024).toFixed(2) + ' MB';\r\n                file.error = \"Error: File is too big\";\r\n                setSelectFile(file);\r\n            } else {\r\n                file.error = null;\r\n                file.size_c = file.size_c.toFixed(2) + ' KB';\r\n                let reader = new FileReader();\r\n                reader.readAsDataURL(file);\r\n                reader.onloadend = () => {\r\n                    setProductImage(reader.result);\r\n                    setSelectFile(file);\r\n                };\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n  function handleFileRemove(event) {\r\n      setProductImage(null);\r\n      setSelectFile(null);\r\n      document.getElementById('news-image-upload').value = '';\r\n  }\r\n  return (\r\n    <>\r\n      <Formik\r\n        enableReinitialize={true}\r\n        initialValues={product}\r\n        validationSchema={ProductEditSchema}\r\n        onSubmit={(values) => {\r\n          values.product_image = productImage;\r\n          saveProduct(values);\r\n        }}\r\n      >\r\n        {({ handleSubmit, setFieldValue, values, }) => (\r\n          <>\r\n            <Form className=\"form form-label-right\">\r\n              <div className=\"row\">\r\n                <div className=\"form-group col-lg-4\">\r\n                  <Field\r\n                    name=\"part_number\"\r\n                    component={Input}\r\n                    placeholder=\"e.g AB123\"\r\n                    label=\"Part Number\"\r\n                  />\r\n                </div>\r\n                <div className=\"form-group col-lg-4\">\r\n                  <Field\r\n                    name=\"alt_part_number\"\r\n                    component={Input}\r\n                    placeholder=\"e.g AB123\"\r\n                    label=\"Alternative Part Number\"\r\n                  />\r\n                </div>\r\n                <div className=\"form-group col-lg-4\">\r\n                  <Field\r\n                    name=\"product_title\"\r\n                    component={Input}\r\n                    label=\"Product Title\"\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"row\">\r\n                <div className=\"form-group col-lg-4\">\r\n                  <label>Select Category</label>\r\n                  <CreatableAsyncPaginate\r\n                    name=\"product_category\"\r\n                    onChange= {(value) => {\r\n                      setFieldValue('product_category', value.value);\r\n                      setCategory(value);\r\n                    }}\r\n                    value={category}\r\n                    onCreateOption={(option) => createCategory(option, setFieldValue)}\r\n                    isClearable = {true}\r\n                    loadOptions={(search, prevOptions) => loadOptions(search, prevOptions, categories, modelsLoaded)}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group col-lg-4\">\r\n                  <label>Select Manufacturer</label>\r\n                  <CreatableAsyncPaginate \r\n                    debounceTimeout={!modelsLoaded ? DROPDOWN_WAIT : 0}\r\n                    isClearable = {true}\r\n                    onChange= {(value) => {\r\n                      setFieldValue('product_manufacturer', value.value);\r\n                      setManfacturer(value);\r\n                    }}\r\n                    value={manfacturer}\r\n                    name=\"product_manufacturer\" \r\n                    onCreateOption={(option) => createManfacturer(option, setFieldValue)}\r\n                    loadOptions={(search, prevOptions) => loadOptions(search, prevOptions, manufacturers, modelsLoaded)}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group col-lg-4\">\r\n                  <label>Select Supplier</label>\r\n                  <CreatableAsyncPaginate\r\n                    debounceTimeout={!modelsLoaded ? DROPDOWN_WAIT : 0}\r\n                    isClearable = {true}  \r\n                    onChange= {(value) => {\r\n                      setFieldValue('supplier', value.value);\r\n                      setSupplier(value);\r\n                    }}\r\n                    name=\"supplier\" \r\n                    value={supplier}\r\n                    onCreateOption={(option) => createSupplier(option, setFieldValue)}\r\n                    loadOptions={(search, prevOptions) => loadOptions(search, prevOptions, suppliers, modelsLoaded)}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"row\">\r\n                <div className=\"form-group col-lg-4\">\r\n                  <MSelect name=\"condition\" label=\"Condition\">\r\n                    <option value=\"\">--None--</option>\r\n                    {ProductConditionTitles.map((condition, index) => (\r\n                      <option key={condition} value={condition}>\r\n                        {condition}\r\n                      </option>\r\n                    ))}\r\n                  </MSelect>\r\n                </div>\r\n                <div className=\"form-group col-lg-4\">\r\n                  <Field\r\n                    name=\"quantity\"\r\n                    component={Input}\r\n                    placeholder=\"Default 0\"\r\n                    label=\"Quantity\"\r\n                  />\r\n                </div>\r\n                <div className=\"form-group col-lg-4\">\r\n                  <Field\r\n                    name=\"stock_location\"\r\n                    component={Input}\r\n                    label=\"Stock Location\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"row\">\r\n                <div className=\"form-group col-lg-4\">\r\n                   <DatePickerField\r\n                      name=\"tag_date\"\r\n                      label=\"Tag Date\"\r\n                    />\r\n                </div>\r\n                <div className=\"form-group col-lg-4\">\r\n                  <Field\r\n                    name=\"turn_around_time\"\r\n                    component={Input}\r\n                    placeholder=\"\"\r\n                    label=\"Turn around time\"\r\n                  />\r\n                </div>\r\n                <div className=\"form-group col-lg-4\">\r\n                  <MSelect name=\"hazmat\" label=\"Hazmat\">\r\n                    {YES_NO_OPTIONS.map((status, index) => (\r\n                      <option key={status} value={status}>\r\n                        {status}\r\n                      </option>\r\n                    ))}\r\n                  </MSelect>\r\n                </div>\r\n              </div>\r\n              <div className=\"row\">\r\n                {values.hazmat === 'Yes' && <div className=\"form-group col-lg-4\">\r\n                  <Field\r\n                    name=\"un_code\"\r\n                    component={Input}\r\n                    placeholder=\"\"\r\n                    label=\"UN Code\"\r\n                  />\r\n                </div>}\r\n                <div className=\"form-group col-lg-4\">\r\n                  <Field\r\n                    name=\"certification\"\r\n                    component={Input}\r\n                    placeholder=\"\"\r\n                    label=\"Certification\"\r\n                  />\r\n                </div>\r\n                <div className=\"form-group col-lg-4\">\r\n                  <MSelect name=\"unit_of_measure\" label=\"Unit of measure\">\r\n                    <option value=\"\">--None--</option>\r\n                    {UOM_CHOICES.map((status, index) => (\r\n                      <option key={status} value={status}>\r\n                        {status}\r\n                      </option>\r\n                    ))}\r\n                  </MSelect>\r\n                </div>\r\n                <div className=\"form-group col-lg-4\">\r\n                  <Field\r\n                    name=\"unit_price\"\r\n                    component={Input}\r\n                    placeholder=\"\"\r\n                    label=\"Unit price\"\r\n                  />\r\n                </div>\r\n                <div className=\"form-group col-lg-4\">\r\n                  <MSelect name=\"hot_sale_item\" label=\"Hot sale item\">\r\n                    {YES_NO_OPTIONS.map((status, index) => (\r\n                      <option key={status} value={status}>\r\n                        {status}\r\n                      </option>\r\n                    ))}\r\n                  </MSelect>\r\n                </div>\r\n                <div className=\"form-group col-lg-4\">\r\n                  <MSelect name=\"status\" label=\"Status\">\r\n                    {ProductStatusTitles.map((status, index) => (\r\n                      <option key={status} value={index}>\r\n                        {status}\r\n                      </option>\r\n                    ))}\r\n                  </MSelect>\r\n                </div>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <Field\r\n                  name=\"short_description\"\r\n                  component={Input}\r\n                  placeholder='Descriptiion'\r\n                  label=\"Short Description\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n\r\n                <CKEditor\r\n                    name=\"description\"\r\n                    editor={ ClassicEditor }\r\n                    data={values?.description ? values?.description : ''}\r\n                    onChange={ ( event, editor ) => {\r\n                      const data = editor.getData();\r\n                      setFieldValue('description', data);\r\n                    } }\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                  <input\r\n                      accept=\"image/*\"\r\n                      style={{display: 'none'}}\r\n                      type=\"file\"\r\n                      id=\"news-image-upload\"\r\n                      name=\"image\"\r\n                      onChange={fileChangedHandler}\r\n                  />\r\n                  <br/>\r\n                <label htmlFor=\"news-image-upload\">\r\n                    <ButtonCore variant=\"outlined\" color=\"inherit\" component=\"span\">\r\n                        Select Image\r\n                        <CloudUploadIcon style={{marginLeft: '5px'}}/>\r\n                    </ButtonCore>\r\n                </label>\r\n              </div>\r\n                        <div className=\"form-group form-group-last row\">\r\n                            <div className=\"col-12 col-md-4\">\r\n                                <div className=\"dropzone dropzone-multi\" id=\"kt_dropzone_5\">\r\n                                    <div className=\"dropzone-items\" style={{display: selectedFile ? 'block' : 'none'}}>\r\n                                        <div className=\"dropzone-item\">\r\n                                            <div className=\"dropzone-file\">\r\n                                                {previewFile &&\r\n                                                <div style={{'maxWidth': '250px'}}><img style={{width: \"100%\"}}\r\n                                                                                         src={previewFile}/>\r\n                                                </div>\r\n                                                }\r\n                                                <div className=\"dropzone-filename\" title=\"some_image_file_name.jpg\">\r\n                                                    <span\r\n                                                        data-dz-name>{selectedFile ? selectedFile.name : 'No file selected'}</span>\r\n                                                    <strong>(<span\r\n                                                        data-dz-size>{selectedFile && selectedFile.size_c ? selectedFile.size_c : ''}</span>)</strong>\r\n                                                </div>\r\n                                                <div className=\"dropzone-error\"\r\n                                                     data-dz-errormessage>{selectedFile && selectedFile.error ? selectedFile.error : ''}</div>\r\n                                            </div>\r\n                                            <div className=\"dropzone-toolbar\">\r\n                                                <span onClick={(e) => handleFileRemove(e)}\r\n                                                      className=\"dropzone-delete\" data-dz-remove><i\r\n                                                    className=\"flaticon2-cross\"></i></span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <span className=\"form-text text-muted\">Max file size is 2MB.</span>\r\n                            </div>\r\n                        </div>\r\n              <button\r\n                type=\"submit\"\r\n                style={{ display: \"none\" }}\r\n                ref={btnRef}\r\n                onSubmit={() => handleSubmit()}\r\n              ></button>\r\n            </Form>\r\n          </>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n}\r\n","export const defaultSorted = [{ dataField: \"id\", order: \"asc\" }];\r\nexport const sizePerPageList = [\r\n  { text: \"1\", value: 1 },\r\n  { text: \"3\", value: 3 },\r\n  { text: \"5\", value: 5 },\r\n];\r\nexport const initialFilter = {\r\n  filter: {\r\n    value: \"\",\r\n  },\r\n  sortOrder: \"asc\", // asc||desc\r\n  sortField: \"name\",\r\n  pageNumber: 1,\r\n  pageSize: 5,\r\n};\r\n\r\nexport const SPECIFICATIONS_DICTIONARY = [\r\n  { id: 0, name: \"Seats\" },\r\n  { id: 1, name: \"Fuel Type\" },\r\n  { id: 2, name: \"Stock\" },\r\n  { id: 3, name: \"Door count\" },\r\n  { id: 4, name: \"Engine\" },\r\n  { id: 5, name: \"Transmission\" },\r\n  { id: 6, name: \"Drivetrain\" },\r\n  { id: 7, name: \"Combined MPG\" },\r\n  { id: 8, name: \"Warranty\" },\r\n  { id: 9, name: \"Wheels\" },\r\n];\r\n","/* eslint-disable no-unused-vars */\r\nimport React, {\r\n  useEffect,\r\n  useContext,\r\n  createContext,\r\n  useState,\r\n  useCallback,\r\n} from \"react\";\r\nimport { isEqual, isFunction } from \"lodash\";\r\nimport { initialFilter } from \"./SpecificationsUIHelper\";\r\n\r\nconst SpecificationsUIContext = createContext();\r\n\r\nexport function useSpecificationsUIContext() {\r\n  return useContext(SpecificationsUIContext);\r\n}\r\n\r\nexport const SpecificationsUIConsumer = SpecificationsUIContext.Consumer;\r\n\r\nexport function SpecificationsUIProvider({ currentProductId, children }) {\r\n  const [productId, setProductId] = useState(currentProductId);\r\n  const [queryParams, setQueryParamsBase] = useState(initialFilter);\r\n  const [ids, setIds] = useState([]);\r\n  const setQueryParams = useCallback((nextQueryParams) => {\r\n    setQueryParamsBase((prevQueryParams) => {\r\n      if (isFunction(nextQueryParams)) {\r\n        nextQueryParams = nextQueryParams(prevQueryParams);\r\n      }\r\n\r\n      if (isEqual(prevQueryParams, nextQueryParams)) {\r\n        return prevQueryParams;\r\n      }\r\n\r\n      return nextQueryParams;\r\n    });\r\n  }, []);\r\n  const [selectedId, setSelectedId] = useState(null);\r\n  const initSpecification = {\r\n    id: undefined,\r\n    value: \"\",\r\n    specId: 0,\r\n    carId: productId,\r\n  };\r\n  useEffect(() => {\r\n    initSpecification.carId = currentProductId;\r\n    initSpecification.productId = currentProductId;\r\n    setProductId(currentProductId);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [currentProductId]);\r\n  const [\r\n    showEditSpecificationDialog,\r\n    setShowEditSpecificationDialog,\r\n    showViewSpecificationDialog,\r\n    setShowViewSpecificationDialog,\r\n  ] = useState(false);\r\n  const openNewSpecificationDialog = () => {\r\n    setSelectedId(undefined);\r\n    setShowEditSpecificationDialog(true);\r\n  };\r\n  const openEditSpecificationDialog = (id) => {\r\n    setSelectedId(id);\r\n    setShowEditSpecificationDialog(true);\r\n  };\r\n  const closeEditSpecificationDialog = () => {\r\n    setSelectedId(undefined);\r\n    setShowEditSpecificationDialog(false);\r\n  };\r\n  const openViewSpecificationDialog = (id) => {\r\n    setSelectedId(id);\r\n    setShowViewSpecificationDialog(true);\r\n  };\r\n  const closeViewSpecificationDialog = () => {\r\n    setSelectedId(undefined);\r\n    setShowViewSpecificationDialog(false);\r\n  };\r\n  const [\r\n    showDeleteSpecificationDialog,\r\n    setShowDeleteSpecificationDialog,\r\n  ] = useState(false);\r\n  const openDeleteSpecificationDialog = (id) => {\r\n    setSelectedId(id);\r\n    setShowDeleteSpecificationDialog(true);\r\n  };\r\n  const closeDeleteSpecificationDialog = () => {\r\n    setSelectedId(undefined);\r\n    setShowDeleteSpecificationDialog(false);\r\n  };\r\n  const [\r\n    showDeleteSpecificationsDialog,\r\n    setShowDeleteSpecificationsDialog,\r\n  ] = useState(false);\r\n  const openDeleteSpecificationsDialog = () => {\r\n    setShowDeleteSpecificationsDialog(true);\r\n  };\r\n  const closeDeleteSpecificationsDialog = () => {\r\n    setShowDeleteSpecificationsDialog(false);\r\n  };\r\n  const [\r\n    showFetchSpecificationsDialog,\r\n    setShowFetchSpecificationsDialog,\r\n  ] = useState(false);\r\n  const openFetchSpecificationsDialog = () => {\r\n    setShowFetchSpecificationsDialog(true);\r\n  };\r\n  const closeFetchSpecificationsDialog = () => {\r\n    setShowFetchSpecificationsDialog(false);\r\n  };\r\n  const value = {\r\n    ids,\r\n    setIds,\r\n    productId,\r\n    setProductId,\r\n    queryParams,\r\n    setQueryParams,\r\n    initSpecification,\r\n    selectedId,\r\n    showEditSpecificationDialog,\r\n    openEditSpecificationDialog,\r\n    showViewSpecificationDialog,\r\n    openViewSpecificationDialog,\r\n    openNewSpecificationDialog,\r\n    closeEditSpecificationDialog,\r\n    showDeleteSpecificationDialog,\r\n    openDeleteSpecificationDialog,\r\n    closeDeleteSpecificationDialog,\r\n    showDeleteSpecificationsDialog,\r\n    openDeleteSpecificationsDialog,\r\n    closeDeleteSpecificationsDialog,\r\n    showFetchSpecificationsDialog,\r\n    openFetchSpecificationsDialog,\r\n    closeFetchSpecificationsDialog,\r\n  };\r\n\r\n  return (\r\n    <SpecificationsUIContext.Provider value={value}>\r\n      {children}\r\n    </SpecificationsUIContext.Provider>\r\n  );\r\n}\r\n","// Form is based on Formik\r\n// Data validation is based on Yup\r\n// Please, be familiar with article first:\r\n// https://hackernoon.com/react-form-validation-with-formik-and-yup-8b76bda62e10\r\nimport React from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport {\r\n  Select,\r\n  Input,\r\n} from \"../../../../../../../_metronic/_partials/controls\";\r\nimport { SPECIFICATIONS_DICTIONARY } from \"../SpecificationsUIHelper\";\r\n\r\n// Validation schema\r\nconst SpecificationEditSchema = Yup.object().shape({\r\n  value: Yup.string()\r\n    .min(2, \"Minimum 2 symbols\")\r\n    .max(50, \"Maximum 50 symbols\")\r\n    .required(\"Value is required\"),\r\n  specId: Yup.number().required(\"Specification type is required\"),\r\n});\r\n\r\nexport function SpecificationEditForm({\r\n  saveSpecification,\r\n  specification,\r\n  actionsLoading,\r\n  onHide,\r\n}) {\r\n  return (\r\n    <>\r\n      <Formik\r\n        enableReinitialize={true}\r\n        initialValues={specification}\r\n        validationSchema={SpecificationEditSchema}\r\n        onSubmit={(values) => {\r\n          saveSpecification(values);\r\n        }}\r\n      >\r\n        {({ handleSubmit }) => (\r\n          <>\r\n            <Modal.Body className=\"overlay overlay-block cursor-default\">\r\n              {actionsLoading && (\r\n                <div className=\"overlay-layer bg-transparent\">\r\n                  <div className=\"spinner spinner-lg spinner-success\" />\r\n                </div>\r\n              )}\r\n              <Form className=\"form form-label-right\">\r\n                <div className=\"form-group row\">\r\n                  <div className=\"col-lg-12\">\r\n                    <Select name=\"specId\" label=\"Specification Type\">\r\n                      {SPECIFICATIONS_DICTIONARY.map((spec) => (\r\n                        <option key={spec.id} value={spec.id}>\r\n                          {spec.name}\r\n                        </option>\r\n                      ))}\r\n                    </Select>\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                  <div className=\"col-lg-12\">\r\n                    <Field\r\n                      name=\"value\"\r\n                      component={Input}\r\n                      placeholder=\"Value\"\r\n                      label=\"Value\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <button\r\n                type=\"button\"\r\n                onClick={onHide}\r\n                className=\"btn btn-light btn-elevate\"\r\n              >\r\n                Cancel\r\n              </button>\r\n              <> </>\r\n              <button\r\n                type=\"submit\"\r\n                onClick={() => handleSubmit()}\r\n                className=\"btn btn-info btn-elevate\"\r\n              >\r\n                Save\r\n              </button>\r\n            </Modal.Footer>\r\n          </>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n}\r\n","/* eslint-disable no-unused-vars */\r\nimport React, { useEffect, useContext, createContext, useState, useCallback } from \"react\";\r\nimport {isEqual, isFunction} from \"lodash\";\r\nimport {initialFilter} from \"./RemarksUIHelper\";\r\n\r\nconst RemarksUIContext = createContext();\r\n\r\nexport function useRemarksUIContext() {\r\n  return useContext(RemarksUIContext);\r\n}\r\n\r\nexport const RemarksUIConsumer = RemarksUIContext.Consumer;\r\n\r\nexport function RemarksUIProvider({ currentProductId, children }) {\r\n  const [productId, setProductId] = useState(currentProductId);\r\n  const [queryParams, setQueryParamsBase] = useState(initialFilter);\r\n  const [ids, setIds] = useState([]);\r\n  const setQueryParams = useCallback(nextQueryParams => {\r\n    setQueryParamsBase(prevQueryParams => {\r\n      if (isFunction(nextQueryParams)) {\r\n        nextQueryParams = nextQueryParams(prevQueryParams);\r\n      }\r\n\r\n      if (isEqual(prevQueryParams, nextQueryParams)) {\r\n        return prevQueryParams;\r\n      }\r\n\r\n      return nextQueryParams;\r\n    });\r\n  }, []);\r\n  const [selectedId, setSelectedId] = useState(null);\r\n  const [showEditRemarkDialog, setShowEditRemarkDialog] = useState(false);\r\n  const initRemark = {\r\n    id: undefined,\r\n    text: \"\",\r\n    type: 0,\r\n    dueDate: \"01/07/2020\",\r\n    carId: productId\r\n  };\r\n  useEffect(()=> {\r\n    initRemark.productId = currentProductId;\r\n    initRemark.carId = currentProductId;\r\n    setProductId(currentProductId);\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [currentProductId]);\r\n  const openNewRemarkDialog = () => {\r\n    setSelectedId(undefined);\r\n    setShowEditRemarkDialog(true);\r\n  };\r\n  const openEditRemarkDialog = id => {\r\n    setSelectedId(id);\r\n    setShowEditRemarkDialog(true);\r\n  };\r\n  const closeEditRemarkDialog = () => {\r\n    setSelectedId(undefined);\r\n    setShowEditRemarkDialog(false);\r\n  };\r\n  const [showDeleteRemarkDialog, setShowDeleteRemarkDialog] = useState(false);\r\n  const openDeleteRemarkDialog = id => {\r\n    setSelectedId(id);\r\n    setShowDeleteRemarkDialog(true);\r\n  };\r\n  const closeDeleteRemarkDialog = () => {\r\n    setSelectedId(undefined);\r\n    setShowDeleteRemarkDialog(false);\r\n  };\r\n\r\n  const [showDeleteRemarksDialog, setShowDeleteRemarksDialog] = useState(false);\r\n  const openDeleteRemarksDialog = () => {\r\n    setShowDeleteRemarksDialog(true);\r\n  };\r\n  const closeDeleteRemarksDialog = () => {\r\n    setShowDeleteRemarksDialog(false);\r\n  };\r\n\r\n  const [showFetchRemarksDialog, setShowFetchRemarksDialog] = useState(false);\r\n  const openFetchRemarksDialog = () => {\r\n    setShowFetchRemarksDialog(true);\r\n  };\r\n  const closeFetchRemarksDialog = () => {\r\n    setShowFetchRemarksDialog(false);\r\n  };\r\n\r\n  const value = {\r\n    ids,\r\n    setIds,\r\n    productId,\r\n    setProductId,\r\n    queryParams,\r\n    setQueryParams,\r\n    initRemark,\r\n    selectedId,\r\n    showEditRemarkDialog,\r\n    openNewRemarkDialog,    \r\n    openEditRemarkDialog,\r\n    closeEditRemarkDialog,\r\n    showDeleteRemarkDialog,\r\n    openDeleteRemarkDialog,\r\n    closeDeleteRemarkDialog,\r\n    showDeleteRemarksDialog,\r\n    openDeleteRemarksDialog,\r\n    closeDeleteRemarksDialog,\r\n    openFetchRemarksDialog,\r\n    closeFetchRemarksDialog,\r\n    showFetchRemarksDialog\r\n  };\r\n  \r\n  return (\r\n    <RemarksUIContext.Provider value={value}>\r\n      {children}\r\n    </RemarksUIContext.Provider>\r\n  );\r\n}\r\n","// Form is based on Formik\r\n// Data validation is based on Yup\r\n// Please, be familiar with article first:\r\n// https://hackernoon.com/react-form-validation-with-formik-and-yup-8b76bda62e10\r\nimport React from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport {\r\n  Input,\r\n  Select,\r\n  DatePickerField,\r\n} from \"../../../../../../../_metronic/_partials/controls\";\r\n\r\n// Validation schema\r\nconst RemarkEditSchema = Yup.object().shape({\r\n  text: Yup.string()\r\n    .min(2, \"Minimum 2 symbols\")\r\n    .max(50, \"Maximum 50 symbols\")\r\n    .required(\"Text is required\"),\r\n  type: Yup.number().required(\"Type is required\"),\r\n  dueDate: Yup.mixed()\r\n    .nullable(false)\r\n    .required(\"Due date is required\"),\r\n});\r\n\r\nexport function RemarkEditForm({ saveRemark, remark, actionsLoading, onHide }) {\r\n  return (\r\n    <>\r\n      <Formik\r\n        enableReinitialize={true}\r\n        initialValues={remark}\r\n        validationSchema={RemarkEditSchema}\r\n        onSubmit={(values) => saveRemark(values)}\r\n      >\r\n        {({ handleSubmit }) => (\r\n          <>\r\n            <Modal.Body className=\"overlay overlay-block cursor-default\">\r\n              {actionsLoading && (\r\n                <div className=\"overlay-layer bg-transparent\">\r\n                  <div className=\"spinner spinner-lg spinner-success\" />\r\n                </div>\r\n              )}\r\n              <Form className=\"form form-label-right\">\r\n                <div className=\"form-group row\">\r\n                  <div className=\"col-lg-12\">\r\n                    <Field\r\n                      name=\"text\"\r\n                      component={Input}\r\n                      placeholder=\"Text\"\r\n                      label=\"Text\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                  <div className=\"col-lg-12\">\r\n                    <DatePickerField name=\"dueDate\" label=\"Due date\" />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                  <div className=\"col-lg-12\">\r\n                    <Select name=\"type\" label=\"Type\">\r\n                      <option value=\"0\">Info</option>\r\n                      <option value=\"1\">Note</option>\r\n                      <option value=\"2\">Reminder</option>\r\n                    </Select>\r\n                  </div>\r\n                </div>\r\n              </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <button\r\n                type=\"button\"\r\n                onClick={onHide}\r\n                className=\"btn btn-light btn-elevate\"\r\n              >\r\n                Cancel\r\n              </button>\r\n              <> </>\r\n              <button\r\n                type=\"submit\"\r\n                onClick={() => handleSubmit()}\r\n                className=\"btn btn-info btn-elevate\"\r\n              >\r\n                Save\r\n              </button>\r\n            </Modal.Footer>\r\n          </>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n}\r\n","/* eslint-disable no-script-url,jsx-a11y/anchor-is-valid,jsx-a11y/role-supports-aria-props */\r\nimport React, { useEffect, useState, useRef } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { shallowEqual, useSelector } from \"react-redux\";\r\nimport * as actions from \"../../../_redux/products/productsActions\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar,\r\n} from \"../../../../../../_metronic/_partials/controls\";\r\nimport { ProductEditForm } from \"./ProductEditForm\";\r\nimport { Specifications } from \"../product-specifications/Specifications\";\r\nimport { SpecificationsUIProvider } from \"../product-specifications/SpecificationsUIContext\";\r\nimport { useSubheader } from \"../../../../../../_metronic/layout\";\r\nimport { ModalProgressBar } from \"../../../../../../_metronic/_partials/controls\";\r\nimport { RemarksUIProvider } from \"../product-remarks/RemarksUIContext\";\r\nimport { Remarks } from \"../product-remarks/Remarks\";\r\nimport { ADMIN_ROUTE } from \"../../../../../pages/helper/api\";\r\n// import moment from \"moment\";\r\n\r\nconst initProduct = {\r\n  id: undefined,\r\n  condition: \"\",\r\n  product_manufacturer: \"\",\r\n  supplier: \"\",\r\n  product_category: \"\",\r\n  part_number: \"\",\r\n  alt_part_number: \"\",\r\n  description: \"\",\r\n  tag_date: null,\r\n  status: 1,\r\n  hazmat: \"No\",\r\n  unit_price: 0,\r\n  unit_of_measure:\"\",\r\n  quantity:1,\r\n  turn_around_time:\"\",\r\n  hot_sale_item:\"No\",\r\n  certification:\"\",\r\n  product_image_name:\"\",\r\n  un_code:\"\",\r\n  stock_location:\"\",\r\n  short_description:\"\",\r\n  product_title:\"\"\r\n};\r\n\r\nexport function ProductEdit({\r\n  history,\r\n  match: {\r\n    params: { id },\r\n  },\r\n}) {\r\n  // Subheader\r\n  const suhbeader = useSubheader();\r\n\r\n  // Tabs\r\n  const [tab, setTab] = useState(\"basic\");\r\n  const [title, setTitle] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  // const layoutDispatch = useContext(LayoutContext.Dispatch);\r\n  const { actionsLoading, productForEdit } = useSelector(\r\n    (state) => ({\r\n      actionsLoading: state.products.actionsLoading,\r\n      productForEdit: state.products.productForEdit,\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(actions.fetchProduct(id));\r\n  }, [id, dispatch]);\r\n\r\n  useEffect(() => {\r\n    let _title = id ? \"\" : \"New Product\";\r\n    if (productForEdit && id) {\r\n      _title = `Edit product - ${productForEdit.part_number}`;\r\n    }\r\n\r\n    setTitle(_title);\r\n    suhbeader.setTitle(_title);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [productForEdit, id]);\r\n\r\n  const saveProduct = (values) => {\r\n      console.log('values', values);\r\n    \r\n    if (!id) {\r\n      dispatch(actions.createProduct(values)).then(() => backToProductsList());\r\n    } else {\r\n\r\n      dispatch(actions.updateProduct(values)).then(() => backToProductsList());\r\n    }\r\n  };\r\n\r\n  const btnRef = useRef();  \r\n  const saveProductClick = () => {\r\n    if (btnRef && btnRef.current) {\r\n      btnRef.current.click();\r\n    }\r\n  };\r\n\r\n  const backToProductsList = () => {\r\n    history.push(`/${ADMIN_ROUTE}/products`);\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      {actionsLoading && <ModalProgressBar />}\r\n      <CardHeader title={title}>\r\n        <CardHeaderToolbar>\r\n          <button\r\n            type=\"button\"\r\n            onClick={backToProductsList}\r\n            className=\"btn btn-light\"\r\n          >\r\n            <i className=\"fa fa-arrow-left\"></i>\r\n            Back\r\n          </button>\r\n          {`  `}\r\n          <button\r\n            type=\"submit\"\r\n            className=\"btn btn-info ml-2\"\r\n            onClick={saveProductClick}\r\n          >\r\n            Save\r\n          </button>\r\n        </CardHeaderToolbar>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <div className=\"mt-5\">\r\n            <ProductEditForm\r\n              actionsLoading={actionsLoading}\r\n              product={productForEdit || initProduct}\r\n              btnRef={btnRef}\r\n              saveProduct={saveProduct}\r\n            />\r\n        </div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n}\r\n","/* eslint-disable no-script-url,jsx-a11y/anchor-is-valid,jsx-a11y/role-supports-aria-props */\r\nimport React, { useEffect, useState, useRef } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { shallowEqual, useSelector } from \"react-redux\";\r\nimport * as actions from \"../../../_redux/products/productsActions\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar,\r\n} from \"../../../../../../_metronic/_partials/controls\";\r\nimport { Specifications } from \"../product-specifications/Specifications\";\r\nimport { SpecificationsUIProvider } from \"../product-specifications/SpecificationsUIContext\";\r\nimport { useSubheader } from \"../../../../../../_metronic/layout\";\r\nimport { ModalProgressBar } from \"../../../../../../_metronic/_partials/controls\";\r\nimport { RemarksUIProvider } from \"../product-remarks/RemarksUIContext\";\r\nimport { Remarks } from \"../product-remarks/Remarks\";\r\nimport { ADMIN_ROUTE, STATIC_URL, getDateFormat } from \"../../../../../pages/helper/api\";\r\nimport {Paper, Grid} from \"@material-ui/core\";\r\n// import moment from \"moment\";\r\n\r\n\r\nexport function ProductView({\r\n  history,\r\n  match: {\r\n    params: { id },\r\n  },\r\n}) {\r\n  // Subheader\r\n  const suhbeader = useSubheader();\r\n\r\n  // Tabs\r\n  const [tab, setTab] = useState(\"basic\");\r\n  const [title, setTitle] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  // const layoutDispatch = useContext(LayoutContext.Dispatch);\r\n  const { actionsLoading, product } = useSelector(\r\n    (state) => ({\r\n      actionsLoading: state.products.actionsLoading,\r\n      product: state.products.productForEdit,\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(actions.fetchProduct(id));\r\n  }, [id, dispatch]);\r\n\r\n  useEffect(() => {\r\n    let _title = id ? \"\" : \"View Product\";\r\n    if (product && id) {\r\n      _title = `View product - ${product.product_title || product.part_number}`;\r\n    }\r\n\r\n    setTitle(_title);\r\n    suhbeader.setTitle(_title);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [product, id]);\r\n\r\n\r\n  const editProductClick = () => {\r\n    history.push(`/${ADMIN_ROUTE}/products/${product.id}/edit`);\r\n  };\r\n\r\n  const backToProductsList = () => {\r\n    history.push(`/${ADMIN_ROUTE}/products`);\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      {actionsLoading && <ModalProgressBar />}\r\n      <CardHeader title={title}>\r\n        <CardHeaderToolbar>\r\n          <button\r\n            type=\"button\"\r\n            onClick={backToProductsList}\r\n            className=\"btn btn-light\"\r\n          >\r\n            <i className=\"fa fa-arrow-left\"></i>\r\n            Back\r\n          </button>\r\n          {`  `}\r\n          <button\r\n            type=\"submit\"\r\n            className=\"btn btn-info ml-2\"\r\n            onClick={editProductClick}\r\n          >\r\n            Edit\r\n          </button>\r\n        </CardHeaderToolbar>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <div className=\"mt-5\">\r\n          <Grid container spacing={3}>\r\n                <Grid item xs={12} md={9}>\r\n                    <div className=\"kt_section__detail\">\r\n                        <div className=\"row mb-4\">\r\n                            <div className=\"col-md-6 col-12\">\r\n                                <div className=\"kt_detail__item_title\">Part Number</div>\r\n                                <div>{product?.part_number ? product.part_number : '---'}</div>\r\n                            </div>\r\n                            <div className=\"col-md-6 col-12\">\r\n                                <div className=\"kt_detail__item_title\">Alt Part Number</div>\r\n                                <div>{product?.alt_part_number ? product.alt_part_number : '---'}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row mb-4\">\r\n                            <div className=\"col-md-6 col-12\">\r\n                                <div className=\"kt_detail__item_title\">Product Title</div>\r\n                                <div>{product?.alt_part_number ? product.alt_part_number : '---'}</div>\r\n                            </div>\r\n                            <div className=\"col-md-6 col-12\">\r\n                                <div className=\"kt_detail__item_title\">Condition</div>\r\n                                <div>{product?.condition ? product.condition : '---'}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row mb-4\">\r\n                            <div className=\"col-md-6 col-12\">\r\n                                <div className=\"kt_detail__item_title\">Quantity</div>\r\n                                <div>{product?.quantity ? product.quantity : '---'}</div>\r\n                            </div>\r\n                            <div className=\"col-md-6 col-12\">\r\n                                <div className=\"kt_detail__item_title\">Stock Location</div>\r\n                                <div>{product?.stock_location ? product.stock_location : '---'}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row mb-4\">\r\n                            <div className=\"col-md-6 col-12\">\r\n                                <div className=\"kt_detail__item_title\">Tag date</div>\r\n                                <div>{product?.tag_date ? product.tag_date : '---'}</div>\r\n                            </div>\r\n                            <div className=\"col-md-6 col-12\">\r\n                                <div className=\"kt_detail__item_title\">Turn Around Time</div>\r\n                                <div>{product?.turn_around_time ? product.turn_around_time : '---'}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-6 col-12 mb-4\">\r\n                                <div className=\"kt_detail__item_title\">Certification</div>\r\n                                <div>{product?.certification ? product.certification : '---'}</div>\r\n                            </div>\r\n                            <div className=\"col-md-6 col-12 mb-4\">\r\n                                <div className=\"kt_detail__item_title\">Hazmat</div>\r\n                                <div>{product?.hazmat ? product.hazmat : '---'}</div>\r\n                            </div>\r\n                            {product?.hazmat &&\r\n                            <div className=\"col-md-6 col-12 mb-4\">\r\n                                <div className=\"kt_detail__item_title\">UN Code</div>\r\n                                <div>{product?.un_code ? product.un_code : '---'}</div>\r\n                            </div>}\r\n                            <div className=\"col-md-6 col-12 mb-4\">\r\n                                <div className=\"kt_detail__item_title\">Unit Price</div>\r\n                                <div>{product?.unit_price ? product.unit_price : '---'}</div>\r\n                            </div>\r\n                            <div className=\"col-md-6 col-12 mb-4\">\r\n                                <div className=\"kt_detail__item_title\">Unit of measure</div>\r\n                                <div>{product?.unit_of_measure ? product.unit_of_measure : '---'}</div>\r\n                            </div>\r\n                            <div className=\"col-md-6 col-12 mb-4\">\r\n                                <div className=\"kt_detail__item_title\">Hot Sale Item</div>\r\n                                <div>{product?.hot_sale_item ? product.hot_sale_item : '---'}</div>\r\n                            </div>\r\n                            <div className=\"col-md-6 col-12 mb-4\">\r\n                                <div className=\"kt_detail__item_title\">Supplier</div>\r\n                                <div>{product?.supplier_company_name ? product.supplier_company_name : '---'}</div>\r\n                            </div>\r\n                            <div className=\"col-md-6 col-12 mb-4\">\r\n                                <div className=\"kt_detail__item_title\">Product Category</div>\r\n                                <div>{product?.product_category_name ? product.product_category_name : '---'}</div>\r\n                            </div>\r\n                            <div className=\"col-md-6 col-12 mb-4\">\r\n                                <div className=\"kt_detail__item_title\">Product Manufacturer</div>\r\n                                <div>{product?.product_manufacturer_name ? product.product_manufacturer_name : '---'}</div>\r\n                            </div>\r\n                            <div className=\"col-md-6 col-12 mb-4\">\r\n                                <div className=\"kt_detail__item_title\">Short Description</div>\r\n                                <div>{product?.short_description }</div>\r\n                            </div>\r\n                            <div className=\"col-md-6 col-12 mb-4\">\r\n                                <div className=\"kt_detail__item_title\">Status</div>\r\n                                <div>{product?.status === 1 ? 'Active' : 'Inactive'}</div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"row mb-4\">\r\n                            <div className=\"col-md-6 col-12 mb-4\">\r\n                                <div className=\"kt_detail__item_title\">Description</div>\r\n                                <div dangerouslySetInnerHTML={{__html: product?.description }}></div>\r\n                            </div>\r\n                        </div>\r\n                        <hr/>\r\n                        <div className=\"row mb-4\">\r\n                            <div className=\"col-md-6 col-12\">\r\n                                <div className=\"kt_detail__item_title\">Date Created</div>\r\n                                <div>{getDateFormat(product?.created_at)}</div>\r\n                            </div>\r\n                            <div className=\"col-md-6 col-12\">\r\n                                <div className=\"kt_detail__item_title\">Date Modified</div>\r\n                                <div>{getDateFormat(product?.updated_at)}</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Grid>\r\n                {product?.product_image &&\r\n                <Grid item xs={12} md={3}>\r\n                    <img style={{maxHeight:'220px', maxWidth:'200px'}} src={ STATIC_URL+product?.product_image_name } />\r\n                </Grid>\r\n              }\r\n          </Grid>\r\n        </div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n}\r\n","import React, { Suspense } from \"react\";\r\nimport { Redirect, Switch } from \"react-router-dom\";\r\nimport { ProductsPage } from \"./ProductsPage\";\r\nimport { ProductEdit } from \"./product-edit/ProductEdit\";\r\nimport { ProductView } from \"./product-view/ProductView\";\r\nimport { LayoutSplashScreen, ContentRoute } from \"../../../../../_metronic/layout\";\r\nimport { ADMIN_ROUTE } from '../../../../../app/pages/helper/api'\r\n\r\nexport default function ProductsPages() {\r\n  return (\r\n    <Suspense fallback={<LayoutSplashScreen />}>\r\n      <Switch>\r\n        <ContentRoute path={\"/\"+ADMIN_ROUTE+\"/products/new\"} component={ProductEdit} />\r\n        <ContentRoute\r\n          path={\"/\"+ADMIN_ROUTE+\"/products/:id/edit\"}\r\n          component={ProductEdit}\r\n        />\r\n        <ContentRoute\r\n          path={\"/\"+ADMIN_ROUTE+\"/products/:id/view\"}\r\n          component={ProductView}\r\n        />\r\n        <ContentRoute path={\"/\"+ADMIN_ROUTE+'/products'} component={ProductsPage} />\r\n      </Switch>\r\n    </Suspense>\r\n  );\r\n}\r\n"],"sourceRoot":""}