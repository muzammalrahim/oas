{"version":3,"sources":["app/modules/ECommerce/_redux/specifications/specificationsActions.js","app/modules/ECommerce/_redux/specifications/specificationsCrud.js","app/modules/ECommerce/_redux/remarks/remarksActions.js","app/modules/ECommerce/_redux/remarks/remarksCrud.js","../node_modules/@material-ui/core/esm/Grid/Grid.js","app/modules/ECommerce/pages/customers/customers-loading-dialog/CustomersLoadingDialog.js","app/modules/ECommerce/_redux/customers/customersCrud.js","app/modules/ECommerce/_redux/customers/customersActions.js","app/modules/ECommerce/pages/customers/CustomersUIHelpers.js","app/modules/ECommerce/pages/customers/CustomersUIContext.js","app/modules/ECommerce/pages/customers/customer-delete-dialog/CustomerDeleteDialog.js","app/modules/ECommerce/pages/customers/customers-delete-dialog/CustomersDeleteDialog.js","app/modules/ECommerce/pages/customers/customers-fetch-dialog/CustomersFetchDialog.js","app/modules/ECommerce/pages/customers/customers-update-status-dialog/CustomersUpdateStatusDialog.js","app/modules/ECommerce/pages/customers/customers-table/column-formatters/ActionsColumnFormatter.js","app/modules/ECommerce/pages/customers/customers-table/CustomersTable.js","app/modules/ECommerce/pages/customers/customers-grouping/CustomersGrouping.js","app/modules/ECommerce/pages/customers/CustomersCard.js","app/modules/ECommerce/pages/customers/CustomersPage.js","app/modules/ECommerce/pages/customers/customer-edit/CustomerEditForm.js","app/modules/ECommerce/pages/customers/customer-edit/CustomerBillingForm.js","app/modules/ECommerce/pages/customers/customer-edit/CustomerShippingForm.js","app/modules/ECommerce/pages/customers/customer-specifications/SpecificationsUIHelper.js","app/modules/ECommerce/pages/customers/customer-specifications/SpecificationsUIContext.js","app/modules/ECommerce/pages/customers/customer-specifications/specification-edit-dialog/SpecificationEditForm.js","app/modules/ECommerce/pages/customers/customer-remarks/RemarksUIContext.js","app/modules/ECommerce/pages/customers/customer-remarks/remark-edit-dialog/RemarkEditForm.js","app/modules/ECommerce/pages/customers/customer-edit/CustomerEdit.js","app/modules/ECommerce/pages/customers/customer-view/CustomerView.js","app/modules/ECommerce/pages/customers/CustomersPages.js"],"names":["actions","specificationsSlice","fetchSpecifications","queryParams","productId","dispatch","startCall","callType","callTypes","list","axios","post","requestFromServer","then","response","data","totalCount","entities","specificationsFetched","catch","error","clientMessage","catchError","fetchSpecification","id","action","specificationId","get","specification","specificationFetched","specificationForEdit","undefined","deleteSpecification","delete","specificationDeleted","createSpecification","specificationForCreation","specificationCreated","updateSpecification","put","specificationUpdated","deleteSpecifications","ids","specificationsDeleted","remarksSlice","fetchRemarks","remarksFetched","fetchRemark","remarkId","remark","remarkFetched","remarkForEdit","deleteRemark","remarkDeleted","createRemark","remarkForCreation","remarkCreated","updateRemark","remarkUpdated","deleteRemarks","console","log","remarksDeleted","SPACINGS","GRID_SIZES","getOffset","val","div","arguments","length","parse","parseFloat","concat","String","replace","Grid","props","ref","_props$alignContent","alignContent","_props$alignItems","alignItems","classes","classNameProp","className","_props$component","component","Component","_props$container","container","_props$direction","direction","_props$item","item","_props$justify","justify","_props$lg","lg","_props$md","md","_props$sm","sm","_props$spacing","spacing","_props$wrap","wrap","_props$xl","xl","_props$xs","xs","_props$zeroMinWidth","zeroMinWidth","other","root","StyledGrid","theme","boxSizing","display","flexWrap","width","margin","minWidth","flexDirection","justifyContent","breakpoint","styles","forEach","themeSpacing","padding","generateGutter","breakpoints","keys","reduce","accumulator","key","globalStyles","size","Math","round","flexBasis","flexGrow","maxWidth","up","generateGrid","name","CustomersLoadingDialog","isLoading","useSelector","state","customers","listLoading","shallowEqual","useEffect","text","PRODUCTS_URL","API_URL","customersSlice","fetchCustomers","filter","params","count","results","customersFetched","fetchCustomer","customerId","customer","user_first_name","user","first_name","user_last_name","last_name","country","customerFetched","customerForEdit","deleteCustomer","customerDeleted","createCustomer","customerForCreation","customerCreated","updateCustomer","customerUpdated","updateCustomersStatus","status","customersStatusUpdated","deleteCustomers","customersDeleted","CustomerStatusCssClasses","defaultSorted","dataField","order","sizePerPageList","value","initialFilter","model","manufacture","VINCode","sortOrder","sortField","pageNumber","pageSize","CustomersUIContext","createContext","useCustomersUIContext","useContext","Consumer","CustomersUIProvider","customersUIEvents","children","useState","setQueryParamsBase","setIds","setQueryParams","useCallback","nextQueryParams","prevQueryParams","isFunction","isEqual","newCustomerButtonClick","openEditCustomerPage","openViewCustomerPage","openDeleteCustomerDialog","openDeleteCustomersDialog","openFetchCustomersDialog","openUpdateCustomersStatusDialog","Provider","CustomerDeleteDialog","show","onHide","customersUIContext","customersUIProps","useMemo","useDispatch","actionsLoading","Modal","aria-labelledby","variant","Header","closeButton","Title","Body","Footer","type","onClick","CustomersDeleteDialog","selectedCustomers","_customers","find","el","push","CustomersFetchDialog","map","style","CustomersUpdateStatusDialog","setStatus","onChange","e","target","ActionsColumnFormatter","cellContent","row","rowIndex","OverlayTrigger","overlay","Tooltip","src","toAbsoluteUrl","CustomersTable","currentState","columns","sort","sortCaret","formatter","columnFormatters","formatExtraData","headerClasses","paginationOptions","custom","totalSize","uiHelpers","sizePerPage","page","pagination","paginationFactory","paginationProps","paginationTableProps","wrapperClasses","bootstrap4","bordered","remote","keyField","onTableChange","getHandlerTableChange","selectRow","getSelectRow","CustomersGrouping","CustomersCard","title","CustomersPage","history","ADMIN_ROUTE","path","match","CustomerEditSchema","withAsyncPaginate","Creatable","Yup","shape","company_name","min","max","required","email","CustomerEditForm","btnRef","saveCustomer","countries","setCountries","modelsLoaded","setModelsLoaded","models","opt","i","label","Country","enableReinitialize","initialValues","validationSchema","onSubmit","values","handleSubmit","Input","placeholder","debounceTimeout","DROPDOWN_WAIT","isClearable","loadOptions","search","prevOptions","BillingEditSchema","billingcontact","SpecificationsUIContext","specId","RemarksUIContext","dueDate","nullable","initCust","password","contact_person","landline_phone","mobile_Phone","bill_address_one","bill_address_two","zip_code","shippingcontact","CustomerEdit","suhbeader","useSubheader","tab","setTab","setTitle","initCustomer","setInitCustomer","saveClick","setSaveClick","_title","part_number","backToCustomersList","alert","useRef","saveCustomerClick","current","click","role","data-toggle","aria-selected","toString","CustomerView","country_name","landing_phone","mobile_phone","created_at","getDateFormat","b","billing_address_one","billing_address_two","updated_at","CustomersPages","fallback"],"mappings":"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","file":"static/js/6.dc7e4daf.chunk.js","sourcesContent":["import * as requestFromServer from \"./specificationsCrud\";\r\nimport {specificationsSlice, callTypes} from \"./specificationsSlice\";\r\n\r\nconst {actions} = specificationsSlice;\r\n\r\nexport const fetchSpecifications = (queryParams, productId) => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.list }));\r\n  if (!productId) {\r\n    return dispatch(\r\n      actions.specificationsFetched({ totalCount: 0, entities: null })\r\n    );\r\n  }\r\n\r\n  return requestFromServer\r\n    .findSpecifications(queryParams, productId)\r\n    .then(response => {\r\n      const { totalCount, entities } = response.data;\r\n      dispatch(actions.specificationsFetched({ totalCount, entities }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't find specifications\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.list }));\r\n    });\r\n};\r\n\r\nexport const fetchSpecification = id => dispatch => {\r\n  if (!id) {\r\n    return dispatch(\r\n      actions.specificationFetched({ specificationForEdit: undefined })\r\n    );\r\n  }\r\n\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .getSpecificationById(id)\r\n    .then(response => {\r\n      const specification = response.data;\r\n      dispatch(\r\n        actions.specificationFetched({ specificationForEdit: specification })\r\n      );\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't find specification\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const deleteSpecification = id => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .deleteSpecification(id)\r\n    .then(response => {\r\n      dispatch(actions.specificationDeleted({ id }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't delete specification\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const createSpecification = specificationForCreation => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .createSpecification(specificationForCreation)\r\n    .then(response => {\r\n      const { specification } = response.data;\r\n      dispatch(actions.specificationCreated({ specification }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't create specification\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const updateSpecification = specification => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .updateSpecification(specification)\r\n    .then(() => {\r\n      dispatch(actions.specificationUpdated({ specification }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't update specification\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const deleteSpecifications = ids => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .deleteSpecifications(ids)\r\n    .then(() => {\r\n      dispatch(actions.specificationsDeleted({ ids }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't delete specifications\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n","import axios from \"axios\";\r\n\r\nexport const SPECIFICATIONS_URL = \"api/specifications\";\r\n\r\n// CREATE =>  POST: add a new specifications to the server\r\nexport function createSpecification(specification) {\r\n  return axios.post(SPECIFICATIONS_URL, { specification });\r\n}\r\n\r\n// READ\r\n// Server should return filtered specifications by productId\r\nexport function getAllProductSpecificationsByProductId(productId) {\r\n  return axios.get(`${SPECIFICATIONS_URL}?productId=${productId}`);\r\n}\r\n\r\nexport function getSpecificationById(specificationId) {\r\n  return axios.get(`${SPECIFICATIONS_URL}/${specificationId}`);\r\n}\r\n\r\n// Server should return sorted/filtered specifications and merge with items from state\r\n// TODO: Change your URL to REAL API, right now URL is 'api/specificationsfind/{productId}'. Should be 'api/specifications/find/{productId}'!!!\r\nexport function findSpecifications(queryParams, productId) {\r\n  return axios.post(`${SPECIFICATIONS_URL}find/${productId}`, { queryParams });\r\n}\r\n\r\n// UPDATE => PUT: update the specification\r\nexport function updateSpecification(specification) {\r\n  return axios.put(`${SPECIFICATIONS_URL}/${specification.id}`, {\r\n    specification\r\n  });\r\n}\r\n\r\n// DELETE => delete the specification\r\nexport function deleteSpecification(specificationId) {\r\n  return axios.delete(`${SPECIFICATIONS_URL}/${specificationId}`);\r\n}\r\n\r\n// DELETE specifications by ids\r\nexport function deleteSpecifications(ids) {\r\n  return axios.post(`${SPECIFICATIONS_URL}/deleteSpecifications`, { ids });\r\n}\r\n","import * as requestFromServer from \"./remarksCrud\";\r\nimport {remarksSlice, callTypes} from \"./remarksSlice\";\r\n\r\nconst {actions} = remarksSlice;\r\n\r\nexport const fetchRemarks = (queryParams, productId) => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.list }));\r\n  if (!productId) {\r\n    return dispatch(actions.remarksFetched({ totalCount: 0, entities: null }));\r\n  }\r\n\r\n  return requestFromServer\r\n    .findRemarks(queryParams, productId)\r\n    .then(response => {\r\n      const { totalCount, entities } = response.data;\r\n      dispatch(actions.remarksFetched({ totalCount, entities }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't find remarks\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.list }));\r\n    });\r\n};\r\n\r\nexport const fetchRemark = id => dispatch => {\r\n  if (!id) {\r\n    return dispatch(actions.remarkFetched({ remarkForEdit: undefined }));\r\n  }\r\n\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .getRemarkById(id)\r\n    .then(response => {\r\n      const remark = response.data;\r\n      dispatch(actions.remarkFetched({ remarkForEdit: remark }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't find remark\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const deleteRemark = id => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .deleteRemark(id)\r\n    .then(response => {\r\n      dispatch(actions.remarkDeleted({ id }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't delete remark\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const createRemark = remarkForCreation => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .createRemark(remarkForCreation)\r\n    .then(response => {\r\n      const { remark } = response.data;\r\n      dispatch(actions.remarkCreated({ remark }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't create remark\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const updateRemark = remark => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .updateRemark(remark)\r\n    .then(() => {\r\n      dispatch(actions.remarkUpdated({ remark }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't update remark\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const deleteRemarks = ids => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .deleteRemarks(ids)\r\n    .then(() => {\r\n      console.log(\"delete return\");\r\n      dispatch(actions.remarksDeleted({ ids }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't delete remarks\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n","import axios from \"axios\";\r\n\r\nexport const REMARKS_URL = \"api/remarks\";\r\n\r\n// CREATE =>  POST: add a new remark to the server\r\nexport function createRemark(remark) {\r\n  return axios.post(REMARKS_URL, { remark });\r\n}\r\n\r\n// READ\r\n// Server should return filtered remarks by productId\r\nexport function getAllProductRemarksByProductId(productId) {\r\n  return axios.get(`${REMARKS_URL}?productId=${productId}`);\r\n}\r\n\r\nexport function getRemarkById(remarkId) {\r\n  return axios.get(`${REMARKS_URL}/${remarkId}`);\r\n}\r\n\r\n// Server should return sorted/filtered remarks and merge with items from state\r\n// TODO: Change your URL to REAL API, right now URL is 'api/remarksfind/{productId}'. Should be 'api/remarks/find/{productId}'!!!\r\nexport function findRemarks(queryParams, productId) {\r\n  return axios.post(`${REMARKS_URL}find/${productId}`, { queryParams });\r\n}\r\n\r\n// UPDATE => PUT: update the remark\r\nexport function updateRemark(remark) {\r\n  return axios.put(`${REMARKS_URL}/${remark.id}`, { remark });\r\n}\r\n\r\n// DELETE => delete the remark\r\nexport function deleteRemark(remarkId) {\r\n  return axios.delete(`${REMARKS_URL}/${remarkId}`);\r\n}\r\n\r\n// DELETE Remarks by ids\r\nexport function deleteRemarks(ids) {\r\n  return axios.post(`${REMARKS_URL}/deleteRemarks`, { ids });\r\n}\r\n","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\"; // A grid component using the following libs as inspiration.\n//\n// For the implementation:\n// - https://getbootstrap.com/docs/4.3/layout/grid/\n// - https://github.com/kristoferjoseph/flexboxgrid/blob/master/src/css/flexboxgrid.css\n// - https://github.com/roylee0704/react-flexbox-grid\n// - https://material.angularjs.org/latest/layout/introduction\n//\n// Follow this flexbox Guide to better understand the underlying model:\n// - https://css-tricks.com/snippets/css/a-guide-to-flexbox/\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport requirePropFactory from '../utils/requirePropFactory';\nvar SPACINGS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nvar GRID_SIZES = ['auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n\nfunction generateGrid(globalStyles, theme, breakpoint) {\n  var styles = {};\n  GRID_SIZES.forEach(function (size) {\n    var key = \"grid-\".concat(breakpoint, \"-\").concat(size);\n\n    if (size === true) {\n      // For the auto layouting\n      styles[key] = {\n        flexBasis: 0,\n        flexGrow: 1,\n        maxWidth: '100%'\n      };\n      return;\n    }\n\n    if (size === 'auto') {\n      styles[key] = {\n        flexBasis: 'auto',\n        flexGrow: 0,\n        maxWidth: 'none'\n      };\n      return;\n    } // Keep 7 significant numbers.\n\n\n    var width = \"\".concat(Math.round(size / 12 * 10e7) / 10e5, \"%\"); // Close to the bootstrap implementation:\n    // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\n\n    styles[key] = {\n      flexBasis: width,\n      flexGrow: 0,\n      maxWidth: width\n    };\n  }); // No need for a media query for the first size.\n\n  if (breakpoint === 'xs') {\n    _extends(globalStyles, styles);\n  } else {\n    globalStyles[theme.breakpoints.up(breakpoint)] = styles;\n  }\n}\n\nfunction getOffset(val) {\n  var div = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  var parse = parseFloat(val);\n  return \"\".concat(parse / div).concat(String(val).replace(String(parse), '') || 'px');\n}\n\nfunction generateGutter(theme, breakpoint) {\n  var styles = {};\n  SPACINGS.forEach(function (spacing) {\n    var themeSpacing = theme.spacing(spacing);\n\n    if (themeSpacing === 0) {\n      return;\n    }\n\n    styles[\"spacing-\".concat(breakpoint, \"-\").concat(spacing)] = {\n      margin: \"-\".concat(getOffset(themeSpacing, 2)),\n      width: \"calc(100% + \".concat(getOffset(themeSpacing), \")\"),\n      '& > $item': {\n        padding: getOffset(themeSpacing, 2)\n      }\n    };\n  });\n  return styles;\n} // Default CSS values\n// flex: '0 1 auto',\n// flexDirection: 'row',\n// alignItems: 'flex-start',\n// flexWrap: 'nowrap',\n// justifyContent: 'flex-start',\n\n\nexport var styles = function styles(theme) {\n  return _extends(_extends({\n    /* Styles applied to the root element. */\n    root: {},\n\n    /* Styles applied to the root element if `container={true}`. */\n    container: {\n      boxSizing: 'border-box',\n      display: 'flex',\n      flexWrap: 'wrap',\n      width: '100%'\n    },\n\n    /* Styles applied to the root element if `item={true}`. */\n    item: {\n      boxSizing: 'border-box',\n      margin: '0' // For instance, it's useful when used with a `figure` element.\n\n    },\n\n    /* Styles applied to the root element if `zeroMinWidth={true}`. */\n    zeroMinWidth: {\n      minWidth: 0\n    },\n\n    /* Styles applied to the root element if `direction=\"column\"`. */\n    'direction-xs-column': {\n      flexDirection: 'column'\n    },\n\n    /* Styles applied to the root element if `direction=\"column-reverse\"`. */\n    'direction-xs-column-reverse': {\n      flexDirection: 'column-reverse'\n    },\n\n    /* Styles applied to the root element if `direction=\"row-reverse\"`. */\n    'direction-xs-row-reverse': {\n      flexDirection: 'row-reverse'\n    },\n\n    /* Styles applied to the root element if `wrap=\"nowrap\"`. */\n    'wrap-xs-nowrap': {\n      flexWrap: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `wrap=\"reverse\"`. */\n    'wrap-xs-wrap-reverse': {\n      flexWrap: 'wrap-reverse'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"center\"`. */\n    'align-items-xs-center': {\n      alignItems: 'center'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"flex-start\"`. */\n    'align-items-xs-flex-start': {\n      alignItems: 'flex-start'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"flex-end\"`. */\n    'align-items-xs-flex-end': {\n      alignItems: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"baseline\"`. */\n    'align-items-xs-baseline': {\n      alignItems: 'baseline'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"center\"`. */\n    'align-content-xs-center': {\n      alignContent: 'center'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"flex-start\"`. */\n    'align-content-xs-flex-start': {\n      alignContent: 'flex-start'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"flex-end\"`. */\n    'align-content-xs-flex-end': {\n      alignContent: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"space-between\"`. */\n    'align-content-xs-space-between': {\n      alignContent: 'space-between'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"space-around\"`. */\n    'align-content-xs-space-around': {\n      alignContent: 'space-around'\n    },\n\n    /* Styles applied to the root element if `justify=\"center\"`. */\n    'justify-xs-center': {\n      justifyContent: 'center'\n    },\n\n    /* Styles applied to the root element if `justify=\"flex-end\"`. */\n    'justify-xs-flex-end': {\n      justifyContent: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-between\"`. */\n    'justify-xs-space-between': {\n      justifyContent: 'space-between'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-around\"`. */\n    'justify-xs-space-around': {\n      justifyContent: 'space-around'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-evenly\"`. */\n    'justify-xs-space-evenly': {\n      justifyContent: 'space-evenly'\n    }\n  }, generateGutter(theme, 'xs')), theme.breakpoints.keys.reduce(function (accumulator, key) {\n    // Use side effect over immutability for better performance.\n    generateGrid(accumulator, theme, key);\n    return accumulator;\n  }, {}));\n};\nvar Grid = React.forwardRef(function Grid(props, ref) {\n  var _props$alignContent = props.alignContent,\n      alignContent = _props$alignContent === void 0 ? 'stretch' : _props$alignContent,\n      _props$alignItems = props.alignItems,\n      alignItems = _props$alignItems === void 0 ? 'stretch' : _props$alignItems,\n      classes = props.classes,\n      classNameProp = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$container = props.container,\n      container = _props$container === void 0 ? false : _props$container,\n      _props$direction = props.direction,\n      direction = _props$direction === void 0 ? 'row' : _props$direction,\n      _props$item = props.item,\n      item = _props$item === void 0 ? false : _props$item,\n      _props$justify = props.justify,\n      justify = _props$justify === void 0 ? 'flex-start' : _props$justify,\n      _props$lg = props.lg,\n      lg = _props$lg === void 0 ? false : _props$lg,\n      _props$md = props.md,\n      md = _props$md === void 0 ? false : _props$md,\n      _props$sm = props.sm,\n      sm = _props$sm === void 0 ? false : _props$sm,\n      _props$spacing = props.spacing,\n      spacing = _props$spacing === void 0 ? 0 : _props$spacing,\n      _props$wrap = props.wrap,\n      wrap = _props$wrap === void 0 ? 'wrap' : _props$wrap,\n      _props$xl = props.xl,\n      xl = _props$xl === void 0 ? false : _props$xl,\n      _props$xs = props.xs,\n      xs = _props$xs === void 0 ? false : _props$xs,\n      _props$zeroMinWidth = props.zeroMinWidth,\n      zeroMinWidth = _props$zeroMinWidth === void 0 ? false : _props$zeroMinWidth,\n      other = _objectWithoutProperties(props, [\"alignContent\", \"alignItems\", \"classes\", \"className\", \"component\", \"container\", \"direction\", \"item\", \"justify\", \"lg\", \"md\", \"sm\", \"spacing\", \"wrap\", \"xl\", \"xs\", \"zeroMinWidth\"]);\n\n  var className = clsx(classes.root, classNameProp, container && [classes.container, spacing !== 0 && classes[\"spacing-xs-\".concat(String(spacing))]], item && classes.item, zeroMinWidth && classes.zeroMinWidth, direction !== 'row' && classes[\"direction-xs-\".concat(String(direction))], wrap !== 'wrap' && classes[\"wrap-xs-\".concat(String(wrap))], alignItems !== 'stretch' && classes[\"align-items-xs-\".concat(String(alignItems))], alignContent !== 'stretch' && classes[\"align-content-xs-\".concat(String(alignContent))], justify !== 'flex-start' && classes[\"justify-xs-\".concat(String(justify))], xs !== false && classes[\"grid-xs-\".concat(String(xs))], sm !== false && classes[\"grid-sm-\".concat(String(sm))], md !== false && classes[\"grid-md-\".concat(String(md))], lg !== false && classes[\"grid-lg-\".concat(String(lg))], xl !== false && classes[\"grid-xl-\".concat(String(xl))]);\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: className,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Grid.propTypes = {\n  /**\n   * Defines the `align-content` style property.\n   * It's applied for all screen sizes.\n   */\n  alignContent: PropTypes.oneOf(['stretch', 'center', 'flex-start', 'flex-end', 'space-between', 'space-around']),\n\n  /**\n   * Defines the `align-items` style property.\n   * It's applied for all screen sizes.\n   */\n  alignItems: PropTypes.oneOf(['flex-start', 'center', 'flex-end', 'stretch', 'baseline']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the component will have the flex *container* behavior.\n   * You should be wrapping *items* with a *container*.\n   */\n  container: PropTypes.bool,\n\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   */\n  direction: PropTypes.oneOf(['row', 'row-reverse', 'column', 'column-reverse']),\n\n  /**\n   * If `true`, the component will have the flex *item* behavior.\n   * You should be wrapping *items* with a *container*.\n   */\n  item: PropTypes.bool,\n\n  /**\n   * Defines the `justify-content` style property.\n   * It is applied for all screen sizes.\n   */\n  justify: PropTypes.oneOf(['flex-start', 'center', 'flex-end', 'space-between', 'space-around', 'space-evenly']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `lg` breakpoint and wider screens if not overridden.\n   */\n  lg: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `md` breakpoint and wider screens if not overridden.\n   */\n  md: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `sm` breakpoint and wider screens if not overridden.\n   */\n  sm: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the space between the type `item` component.\n   * It can only be used on a type `container` component.\n   */\n  spacing: PropTypes.oneOf(SPACINGS),\n\n  /**\n   * Defines the `flex-wrap` style property.\n   * It's applied for all screen sizes.\n   */\n  wrap: PropTypes.oneOf(['nowrap', 'wrap', 'wrap-reverse']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `xl` breakpoint and wider screens.\n   */\n  xl: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for all the screen sizes with the lowest priority.\n   */\n  xs: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * If `true`, it sets `min-width: 0` on the item.\n   * Refer to the limitations section of the documentation to better understand the use case.\n   */\n  zeroMinWidth: PropTypes.bool\n} : void 0;\nvar StyledGrid = withStyles(styles, {\n  name: 'MuiGrid'\n})(Grid);\n\nif (process.env.NODE_ENV !== 'production') {\n  var requireProp = requirePropFactory('Grid');\n  StyledGrid.propTypes = _extends(_extends({}, StyledGrid.propTypes), {}, {\n    alignContent: requireProp('container'),\n    alignItems: requireProp('container'),\n    direction: requireProp('container'),\n    justify: requireProp('container'),\n    lg: requireProp('item'),\n    md: requireProp('item'),\n    sm: requireProp('item'),\n    spacing: requireProp('container'),\n    wrap: requireProp('container'),\n    xs: requireProp('item'),\n    zeroMinWidth: requireProp('item')\n  });\n}\n\nexport default StyledGrid;","import React, {useEffect} from \"react\";\r\nimport {shallowEqual, useSelector} from \"react-redux\";\r\nimport {LoadingDialog} from \"../../../../../../_metronic/_partials/controls\";\r\n\r\nexport function CustomersLoadingDialog() {\r\n  const { isLoading } = useSelector(\r\n    state => ({ isLoading: state.customers.listLoading }),\r\n    shallowEqual\r\n  );\r\n  useEffect(() => {}, [isLoading]);\r\n  return <LoadingDialog isLoading={isLoading} text=\"Loading ...\" />;\r\n}\r\n","import axios from \"axios\";\r\nimport { API_URL } from '../../../../pages/helper/api'\r\n\r\nexport const PRODUCTS_URL = API_URL + \"customer\";\r\n\r\n// CREATE =>  POST: add a new customer to the server\r\nexport function createCustomer(customer) {\r\n  return axios.post(PRODUCTS_URL+'/', { ...customer });\r\n}\r\n\r\n// READ\r\nexport function getAllCustomers({filter}) {\r\n  return axios.get(PRODUCTS_URL,  {\r\n    params: filter\r\n  });\r\n}\r\n\r\nexport function getCustomerById(customerId) {\r\n  return axios.get(`${PRODUCTS_URL}/${customerId}`);\r\n}\r\n\r\n// Method from server should return QueryResultsModel(items: any[], totalsCount: number)\r\n// items => filtered/sorted result\r\nexport function findCustomers(queryParams) {\r\n  return axios.post(`${PRODUCTS_URL}/find`, { queryParams });\r\n}\r\n\r\n// UPDATE => PUT: update the procuct on the server\r\nexport function updateCustomer(customer) {\r\n  return axios.put(`${PRODUCTS_URL}/${customer.id}/`, { ...customer });\r\n}\r\n\r\n// UPDATE Status\r\nexport function updateStatusForCustomers(ids, status) {\r\n  return axios.post(`${PRODUCTS_URL}/updateStatusForCustomers`, {\r\n    ids,\r\n    status\r\n  });\r\n}\r\n\r\n// DELETE => delete the customer from the server\r\nexport function deleteCustomer(customerId) {\r\n  return axios.delete(`${PRODUCTS_URL}/${customerId}`);\r\n}\r\n\r\n// DELETE Customers by ids\r\nexport function deleteCustomers(ids) {\r\n  return axios.post(`${PRODUCTS_URL}/delete-all/`, { ids });\r\n}\r\n","import * as requestFromServer from \"./customersCrud\";\r\nimport {customersSlice, callTypes} from \"./customersSlice\";\r\n\r\nconst {actions} = customersSlice;\r\n\r\nexport const fetchCustomers = queryParams => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.list }));\r\n  return requestFromServer\r\n    .getAllCustomers(queryParams)\r\n    .then(response => {\r\n      const { count, results } = response.data;\r\n      dispatch(actions.customersFetched({ count, results }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't find customers\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.list }));\r\n    });\r\n};\r\n\r\nexport const fetchCustomer = id => dispatch => {\r\n  if (!id) {\r\n    return dispatch(actions.customerFetched({ customerForEdit: undefined }));\r\n  }\r\n\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .getCustomerById(id)\r\n    .then(response => {\r\n      const customer = {\r\n        ...response.data, \r\n        user_first_name:response.data.user ? response.data.user.first_name : \"\",\r\n        user_last_name:response.data.user ? response.data.user.last_name : \"\",\r\n        country:response.data.country ? response.data.country.id : \"\",\r\n      };\r\n\r\n      dispatch(actions.customerFetched({ customerForEdit: customer }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't find customer\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const deleteCustomer = id => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .deleteCustomer(id)\r\n    .then(response => {\r\n      dispatch(actions.customerDeleted({ id }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't delete customer\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const createCustomer = customerForCreation => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .createCustomer(customerForCreation)\r\n    .then(response => {\r\n      const { data } = response;\r\n      dispatch(actions.customerCreated({ customer:data }));\r\n      return response;\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't create customer\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n      return error;\r\n    });\r\n};\r\n\r\nexport const updateCustomer = customer => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  console.log('proudct', customer);\r\n  return requestFromServer\r\n    .updateCustomer(customer)\r\n    .then((response) => {\r\n      dispatch(actions.customerUpdated({ customer }));\r\n      return response;\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't update customer\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n      return error;\r\n    });\r\n};\r\n\r\nexport const updateCustomersStatus = (ids, status) => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .updateStatusForCustomers(ids, status)\r\n    .then(() => {\r\n      dispatch(actions.customersStatusUpdated({ ids, status }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't update customers status\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const deleteCustomers = ids => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .deleteCustomers(ids)\r\n    .then(() => {\r\n      dispatch(actions.customersDeleted({ ids }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't delete customers\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n","export const CustomerStatusCssClasses = [\"danger\", \"success\", \"info\", \"\"];\r\nexport const CustomerStatusTitles = [\"Inactive\", \"Active\"];\r\nexport const CustomerConditionCssClasses = [\"success\", \"danger\", \"\"];\r\nexport const CustomerConditionTitles = ['NE','NS', 'SV', 'AR', 'FN', 'US', 'RP'];\r\nexport const YES_NO_OPTIONS = ['YES', 'NO'];\r\nexport const UOM_CHOICES = ['CM', 'BOX', 'KG'];\r\nexport const defaultSorted = [{ dataField: \"id\", order: \"asc\" }];\r\nexport const sizePerPageList = [\r\n  { text: \"10\", value: 10 },\r\n  { text: \"25\", value: 25 },\r\n  { text: \"50\", value: 50 }\r\n];\r\nexport const initialFilter = {\r\n  filter: {\r\n    model: \"\",\r\n    manufacture: \"\",\r\n    VINCode: \"\"\r\n  },\r\n  sortOrder: \"asc\", // asc||desc\r\n  sortField: \"VINCode\",\r\n  pageNumber: 1,\r\n  pageSize: 10\r\n};\r\nexport const AVAILABLE_COLORS = [\r\n  \"Red\",\r\n  \"CadetBlue\",\r\n  \"Eagle\",\r\n  \"Gold\",\r\n  \"LightSlateGrey\",\r\n  \"RoyalBlue\",\r\n  \"Crimson\",\r\n  \"Blue\",\r\n  \"Sienna\",\r\n  \"Indigo\",\r\n  \"Green\",\r\n  \"Violet\",\r\n  \"GoldenRod\",\r\n  \"OrangeRed\",\r\n  \"Khaki\",\r\n  \"Teal\",\r\n  \"Purple\",\r\n  \"Orange\",\r\n  \"Pink\",\r\n  \"Black\",\r\n  \"DarkTurquoise\"\r\n];\r\n\r\nexport const AVAILABLE_MANUFACTURES = [\r\n  \"Pontiac\",\r\n  \"Kia\",\r\n  \"Lotus\",\r\n  \"Subaru\",\r\n  \"Jeep\",\r\n  \"Isuzu\",\r\n  \"Mitsubishi\",\r\n  \"Oldsmobile\",\r\n  \"Chevrolet\",\r\n  \"Chrysler\",\r\n  \"Audi\",\r\n  \"Suzuki\",\r\n  \"GMC\",\r\n  \"Cadillac\",\r\n  \"Infinity\",\r\n  \"Mercury\",\r\n  \"Dodge\",\r\n  \"Ram\",\r\n  \"Lexus\",\r\n  \"Lamborghini\",\r\n  \"Honda\",\r\n  \"Nissan\",\r\n  \"Ford\",\r\n  \"Hyundai\",\r\n  \"Saab\",\r\n  \"Toyota\"\r\n];\r\n","import React, { createContext, useContext, useState, useCallback } from \"react\";\r\nimport { isEqual, isFunction } from \"lodash\";\r\nimport { initialFilter } from \"./CustomersUIHelpers\";\r\n\r\nconst CustomersUIContext = createContext();\r\n\r\nexport function useCustomersUIContext() {\r\n  return useContext(CustomersUIContext);\r\n}\r\n\r\nexport const CustomersUIConsumer = CustomersUIContext.Consumer;\r\n\r\nexport function CustomersUIProvider({ customersUIEvents, children }) {\r\n  const [queryParams, setQueryParamsBase] = useState(initialFilter);\r\n  const [ids, setIds] = useState([]);\r\n  const setQueryParams = useCallback((nextQueryParams) => {\r\n    setQueryParamsBase((prevQueryParams) => {\r\n      if (isFunction(nextQueryParams)) {\r\n        nextQueryParams = nextQueryParams(prevQueryParams);\r\n      }\r\n\r\n      if (isEqual(prevQueryParams, nextQueryParams)) {\r\n        return prevQueryParams;\r\n      }\r\n\r\n      return nextQueryParams;\r\n    });\r\n  }, []);\r\n\r\n  const value = {\r\n    queryParams,\r\n    setQueryParamsBase,\r\n    ids,\r\n    setIds,\r\n    setQueryParams,\r\n    newCustomerButtonClick: customersUIEvents.newCustomerButtonClick,\r\n    openEditCustomerPage: customersUIEvents.openEditCustomerPage,\r\n    openViewCustomerPage: customersUIEvents.openViewCustomerPage,\r\n    openDeleteCustomerDialog: customersUIEvents.openDeleteCustomerDialog,\r\n    openDeleteCustomersDialog: customersUIEvents.openDeleteCustomersDialog,\r\n    openFetchCustomersDialog: customersUIEvents.openFetchCustomersDialog,\r\n    openUpdateCustomersStatusDialog:\r\n      customersUIEvents.openUpdateCustomersStatusDialog,\r\n  };\r\n\r\n  return (\r\n    <CustomersUIContext.Provider value={value}>\r\n      {children}\r\n    </CustomersUIContext.Provider>\r\n  );\r\n}\r\n","/* eslint-disable no-restricted-imports */\r\nimport React, { useEffect, useMemo } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport { ModalProgressBar } from \"../../../../../../_metronic/_partials/controls\";\r\nimport * as actions from \"../../../_redux/customers/customersActions\";\r\nimport { useCustomersUIContext } from \"../CustomersUIContext\";\r\n\r\nexport function CustomerDeleteDialog({ id, show, onHide }) {\r\n  // Customers UI Context\r\n  const customersUIContext = useCustomersUIContext();\r\n  const customersUIProps = useMemo(() => {\r\n    return {\r\n      setIds: customersUIContext.setIds,\r\n      queryParams: customersUIContext.queryParams,\r\n    };\r\n  }, [customersUIContext]);\r\n\r\n  // Customers Redux state\r\n  const dispatch = useDispatch();\r\n  const { isLoading } = useSelector(\r\n    (state) => ({ isLoading: state.customers.actionsLoading }),\r\n    shallowEqual\r\n  );\r\n\r\n  // if !id we should close modal\r\n  useEffect(() => {\r\n    if (!id) {\r\n      onHide();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [id]);\r\n\r\n  // looking for loading/dispatch\r\n  useEffect(() => {}, [isLoading, dispatch]);\r\n\r\n  const deleteCustomer = () => {\r\n    // server request for deleting customer by id\r\n    dispatch(actions.deleteCustomer(id)).then(() => {\r\n      // refresh list after deletion\r\n      dispatch(actions.fetchCustomers(customersUIProps.queryParams));\r\n      // clear selections list\r\n      customersUIProps.setIds([]);\r\n      // closing delete modal\r\n      onHide();\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      show={show}\r\n      onHide={onHide}\r\n      aria-labelledby=\"example-modal-sizes-title-lg\"\r\n    >\r\n      {isLoading && <ModalProgressBar variant=\"query\" />}\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n          Customer Delete\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        {!isLoading && (\r\n          <span>Are you sure to permanently delete this customer?</span>\r\n        )}\r\n        {isLoading && <span>Customer is deleting...</span>}\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            onClick={onHide}\r\n            className=\"btn btn-light btn-elevate\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <> </>\r\n          <button\r\n            type=\"button\"\r\n            onClick={deleteCustomer}\r\n            className=\"btn btn-danger btn-elevate\"\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n","/* eslint-disable no-restricted-imports */\r\nimport React, { useEffect, useMemo } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport { ModalProgressBar } from \"../../../../../../_metronic/_partials/controls\";\r\nimport * as actions from \"../../../_redux/customers/customersActions\";\r\nimport { useCustomersUIContext } from \"../CustomersUIContext\";\r\n\r\nexport function CustomersDeleteDialog({ show, onHide }) {\r\n  // Customers UI Context\r\n  const customersUIContext = useCustomersUIContext();\r\n  const customersUIProps = useMemo(() => {\r\n    return {\r\n      ids: customersUIContext.ids,\r\n      setIds: customersUIContext.setIds,\r\n      queryParams: customersUIContext.queryParams,\r\n    };\r\n  }, [customersUIContext]);\r\n\r\n  // Customers Redux state\r\n  const dispatch = useDispatch();\r\n  const { isLoading } = useSelector(\r\n    (state) => ({ isLoading: state.customers.actionsLoading }),\r\n    shallowEqual\r\n  );\r\n\r\n  // looking for loading/dispatch\r\n  useEffect(() => {}, [isLoading, dispatch]);\r\n\r\n  // if there weren't selected customers we should close modal\r\n  useEffect(() => {\r\n    if (!customersUIProps.ids || customersUIProps.ids.length === 0) {\r\n      onHide();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [customersUIProps.ids]);\r\n\r\n  const deleteCustomers = () => {\r\n    // server request for deleting customer by seleted ids\r\n    dispatch(actions.deleteCustomers(customersUIProps.ids)).then(() => {\r\n      // refresh list after deletion\r\n      dispatch(actions.fetchCustomers(customersUIProps.queryParams)).then(() => {\r\n        // clear selections list\r\n        customersUIProps.setIds([]);\r\n        // closing delete modal\r\n        onHide();\r\n      });\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      show={show}\r\n      onHide={onHide}\r\n      aria-labelledby=\"example-modal-sizes-title-lg\"\r\n    >\r\n      {isLoading && <ModalProgressBar />}\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n          Customers Delete\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        {!isLoading && (\r\n          <span>Are you sure to permanently delete selected customers?</span>\r\n        )}\r\n        {isLoading && <span>Customers are deleting...</span>}\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            onClick={onHide}\r\n            className=\"btn btn-light btn-elevate\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <> </>\r\n          <button\r\n            type=\"button\"\r\n            onClick={deleteCustomers}\r\n            className=\"btn btn-danger btn-elevate\"\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { useEffect, useMemo } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { shallowEqual, useSelector } from \"react-redux\";\r\nimport { CustomerStatusCssClasses } from \"../CustomersUIHelpers\";\r\nimport { useCustomersUIContext } from \"../CustomersUIContext\";\r\n\r\nconst selectedCustomers = (entities, ids) => {\r\n  const _customers = [];\r\n  ids.forEach((id) => {\r\n    const customer = entities.find((el) => el.id === id);\r\n    if (customer) {\r\n      _customers.push(customer);\r\n    }\r\n  });\r\n  return _customers;\r\n};\r\n\r\nexport function CustomersFetchDialog({ show, onHide }) {\r\n  // Customers UI Context\r\n  const customersUIContext = useCustomersUIContext();\r\n  const customersUIProps = useMemo(() => {\r\n    return {\r\n      ids: customersUIContext.ids,\r\n      queryParams: customersUIContext.queryParams,\r\n    };\r\n  }, [customersUIContext]);\r\n\r\n  // Customers Redux state\r\n  const { customers } = useSelector(\r\n    (state) => ({\r\n      customers: selectedCustomers(state.customers.entities, customersUIProps.ids),\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  // if there weren't selected ids we should close modal\r\n  useEffect(() => {\r\n    if (!customersUIProps.ids || customersUIProps.ids.length === 0) {\r\n      onHide();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [customersUIProps.ids]);\r\n\r\n  return (\r\n    <Modal\r\n      show={show}\r\n      onHide={onHide}\r\n      aria-labelledby=\"example-modal-sizes-title-lg\"\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n          Fetch selected elements\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <div className=\"list-timeline list-timeline-skin-light padding-30\">\r\n          <div className=\"list-timeline-items\">\r\n            {customers.map((customer) => (\r\n              <div className=\"list-timeline-item mb-3\" key={customer.id}>\r\n                <span className=\"list-timeline-text\">\r\n                  <span\r\n                    className={`label label-lg label-light-${\r\n                      CustomerStatusCssClasses[customer.status]\r\n                    } label-inline`}\r\n                    style={{ width: \"60px\" }}\r\n                  >\r\n                    ID: {customer.id}\r\n                  </span>{\" \"}\r\n                  <span className=\"ml-5\">\r\n                    {customer.manufacture}, {customer.model}\r\n                  </span>\r\n                </span>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            onClick={onHide}\r\n            className=\"btn btn-light btn-elevate\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <> </>\r\n          <button\r\n            type=\"button\"\r\n            onClick={onHide}\r\n            className=\"btn btn-info btn-elevate\"\r\n          >\r\n            Ok\r\n          </button>\r\n        </div>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { useEffect, useState, useMemo } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport { CustomerStatusCssClasses } from \"../CustomersUIHelpers\";\r\nimport * as actions from \"../../../_redux/customers/customersActions\";\r\nimport { useCustomersUIContext } from \"../CustomersUIContext\";\r\n\r\nconst selectedCustomers = (entities, ids) => {\r\n  const _customers = [];\r\n  ids.forEach((id) => {\r\n    const customer = entities.find((el) => el.id === id);\r\n    if (customer) {\r\n      _customers.push(customer);\r\n    }\r\n  });\r\n  return _customers;\r\n};\r\n\r\nexport function CustomersUpdateStatusDialog({ show, onHide }) {\r\n  // Customers UI Context\r\n  const customersUIContext = useCustomersUIContext();\r\n  const customersUIProps = useMemo(() => {\r\n    return {\r\n      ids: customersUIContext.ids,\r\n      setIds: customersUIContext.setIds,\r\n      queryParams: customersUIContext.queryParams,\r\n    };\r\n  }, [customersUIContext]);\r\n\r\n  // Customers Redux state\r\n  const { customers, isLoading } = useSelector(\r\n    (state) => ({\r\n      customers: selectedCustomers(state.customers.entities, customersUIProps.ids),\r\n      isLoading: state.customers.actionsLoading,\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  // if there weren't selected customers we should close modal\r\n  useEffect(() => {\r\n    if (customersUIProps.ids || customersUIProps.ids.length === 0) {\r\n      onHide();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [customersUIProps.ids]);\r\n\r\n  const [status, setStatus] = useState(0);\r\n\r\n  const dispatch = useDispatch();\r\n  const updateStatus = () => {\r\n    // server request for updateing customer by ids\r\n    dispatch(actions.updateCustomersStatus(customersUIProps.ids, status)).then(\r\n      () => {\r\n        // refresh list after deletion\r\n        dispatch(actions.fetchCustomers(customersUIProps.queryParams)).then(\r\n          () => {\r\n            // clear selections list\r\n            customersUIProps.setIds([]);\r\n            // closing delete modal\r\n            onHide();\r\n          }\r\n        );\r\n      }\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      show={show}\r\n      onHide={onHide}\r\n      aria-labelledby=\"example-modal-sizes-title-lg\"\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n          Status has been updated for selected customers\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body className=\"overlay overlay-block cursor-default\">\r\n        {isLoading && (\r\n          <div className=\"overlay-layer bg-transparent\">\r\n            <div className=\"spinner spinner-lg spinner-warning\" />\r\n          </div>\r\n        )}\r\n        <div className=\"list-timeline list-timeline-skin-light padding-30\">\r\n          <div className=\"list-timeline-items\">\r\n            {customers.map((customer) => (\r\n              <div className=\"list-timeline-item mb-3\" key={customer.id}>\r\n                <span className=\"list-timeline-text\">\r\n                  <span\r\n                    className={`label label-lg label-light-${\r\n                      CustomerStatusCssClasses[customer.status]\r\n                    } label-inline`}\r\n                    style={{ width: \"60px\" }}\r\n                  >\r\n                    ID: {customer.id}\r\n                  </span>{\" \"}\r\n                  <span className=\"ml-5\">\r\n                    {customer.manufacture}, {customer.model}\r\n                  </span>\r\n                </span>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </Modal.Body>\r\n      <Modal.Footer className=\"form\">\r\n        <div className=\"form-group\">\r\n          <select\r\n            className={`form-control ${CustomerStatusCssClasses[status]}`}\r\n            value={status}\r\n            onChange={(e) => setStatus(+e.target.value)}\r\n          >\r\n            <option value=\"0\">Selling</option>\r\n            <option value=\"1\">Sold</option>\r\n          </select>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <button\r\n            type=\"button\"\r\n            onClick={onHide}\r\n            className=\"btn btn-light btn-elevate\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <> </>\r\n          <button\r\n            type=\"button\"\r\n            onClick={updateStatus}\r\n            className=\"btn btn-info btn-elevate\"\r\n          >\r\n            Update Status\r\n          </button>\r\n        </div>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n","/* eslint-disable no-script-url,jsx-a11y/anchor-is-valid */\r\nimport React from \"react\";\r\nimport { OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\nimport SVG from \"react-inlinesvg\";\r\nimport { toAbsoluteUrl } from \"../../../../../../../_metronic/_helpers\";\r\n\r\nexport const ActionsColumnFormatter = (\r\n  cellContent,\r\n  row,\r\n  rowIndex,\r\n  { openViewCustomerPage, openEditCustomerPage, openDeleteCustomerDialog }\r\n) => (\r\n  <>\r\n    <OverlayTrigger\r\n      overlay={<Tooltip id=\"customers-edit-tooltip\">View customer</Tooltip>}\r\n    >\r\n      <a\r\n        className=\"btn btn-icon btn-light btn-hover-info btn-xs\"\r\n        onClick={() => openViewCustomerPage(row.id)}\r\n      >\r\n        <span className=\"svg-icon svg-icon-md svg-icon-info\">\r\n          <i className=\"text-info fa fa-eye\"></i>\r\n        </span>\r\n      </a>\r\n    </OverlayTrigger>\r\n    <OverlayTrigger\r\n      overlay={<Tooltip id=\"customers-edit-tooltip\">Edit customer</Tooltip>}\r\n    >\r\n      <a\r\n        className=\"btn btn-icon btn-light btn-hover-info btn-xs\"\r\n        onClick={() => openEditCustomerPage(row.id)}\r\n      >\r\n        <span className=\"svg-icon svg-icon-md svg-icon-info\">\r\n          <SVG\r\n            src={toAbsoluteUrl(\"/static/media/svg/icons/Communication/Write.svg\")}\r\n          />\r\n        </span>\r\n      </a>\r\n    </OverlayTrigger>\r\n\r\n    <> </>\r\n    <OverlayTrigger\r\n      overlay={<Tooltip id=\"customers-delete-tooltip\">Delete customer</Tooltip>}\r\n    >\r\n      <a\r\n        className=\"btn btn-icon btn-light btn-hover-danger btn-xs\"\r\n        onClick={() => openDeleteCustomerDialog(row.id)}\r\n      >\r\n        <span className=\"svg-icon svg-icon-md svg-icon-danger\">\r\n          <SVG src={toAbsoluteUrl(\"/static/media/svg/icons/General/Trash.svg\")} />\r\n        </span>\r\n      </a>\r\n    </OverlayTrigger>\r\n  </>\r\n);\r\n","// React bootstrap table next =>\r\n// DOCS: https://react-bootstrap-table.github.io/react-bootstrap-table2/docs/\r\n// STORYBOOK: https://react-bootstrap-table.github.io/react-bootstrap-table2/storybook/index.html\r\nimport React, { useEffect, useMemo } from \"react\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory, {\r\n  PaginationProvider,\r\n} from \"react-bootstrap-table2-paginator\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport * as actions from \"../../../_redux/customers/customersActions\";\r\nimport * as uiHelpers from \"../CustomersUIHelpers\";\r\nimport {\r\n  getSelectRow,\r\n  getHandlerTableChange,\r\n  NoRecordsFoundMessage,\r\n  PleaseWaitMessage,\r\n  sortCaret,\r\n} from \"../../../../../../_metronic/_helpers\";\r\nimport * as columnFormatters from \"./column-formatters\";\r\nimport { Pagination } from \"../../../../../../_metronic/_partials/controls\";\r\nimport { useCustomersUIContext } from \"../CustomersUIContext\";\r\n\r\nexport function CustomersTable() {\r\n  // Customers UI Context\r\n  const customersUIContext = useCustomersUIContext();\r\n  const customersUIProps = useMemo(() => {\r\n    return {\r\n      ids: customersUIContext.ids,\r\n      setIds: customersUIContext.setIds,\r\n      queryParams: customersUIContext.queryParams,\r\n      setQueryParams: customersUIContext.setQueryParams,\r\n      openViewCustomerPage: customersUIContext.openViewCustomerPage,\r\n      openEditCustomerPage: customersUIContext.openEditCustomerPage,\r\n      openDeleteCustomerDialog: customersUIContext.openDeleteCustomerDialog,\r\n    };\r\n  }, [customersUIContext]);\r\n\r\n  // Getting curret state of customers list from store (Redux)\r\n  const { currentState } = useSelector(\r\n    (state) => ({ currentState: state.customers }),\r\n    shallowEqual\r\n  );\r\n  const { totalCount, entities, listLoading } = currentState;\r\n  // Customers Redux state\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    // clear selections list\r\n    customersUIProps.setIds([]);\r\n    // server call by queryParams\r\n    dispatch(actions.fetchCustomers(customersUIProps.queryParams));\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [customersUIProps.queryParams, dispatch]);\r\n  // Table columns\r\n  const columns = [\r\n   {\r\n      dataField: \"user.first_name\",\r\n      text: \"First Name\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n    },\r\n    {\r\n      dataField: \"user.last_name\",\r\n      text: \"Last Name\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n    },\r\n    {\r\n      dataField: \"user.email\",\r\n      text: \"Email\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n    },\r\n\r\n    {\r\n      dataField: \"company_name\",\r\n      text: \"Company Name\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n    },\r\n     {\r\n      dataField: \"contact_person\",\r\n      text: \"Contact Person\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n    },\r\n   \r\n    {\r\n      dataField: \"landline_phone\",\r\n      text: \"Landline Phone\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n    },\r\n    {\r\n      dataField: \"mobile_Phone\",\r\n      text: \"Mobile Phone\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n    },\r\n    {\r\n      dataField: \"country.name\",\r\n      text: \"Country\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n    },\r\n   \r\n    {\r\n      dataField: \"action\",\r\n      text: \"Actions\",\r\n      formatter: columnFormatters.ActionsColumnFormatter,\r\n      formatExtraData: {\r\n        openViewCustomerPage: customersUIProps.openViewCustomerPage,\r\n        openEditCustomerPage: customersUIProps.openEditCustomerPage,\r\n        openDeleteCustomerDialog: customersUIProps.openDeleteCustomerDialog,\r\n      },\r\n      classes: \"text-right pr-0\",\r\n      headerClasses: \"text-right pr-3\",\r\n      style: {\r\n        minWidth: \"100px\",\r\n      },\r\n    },\r\n  ];\r\n  // Table pagination properties\r\n  const paginationOptions = {\r\n    custom: true,\r\n    totalSize: totalCount,\r\n    sizePerPageList: uiHelpers.sizePerPageList,\r\n    sizePerPage: customersUIProps.queryParams.pageSize,\r\n    page: customersUIProps.queryParams.pageNumber,\r\n  };\r\n  let data = [];\r\n  return (\r\n    <>\r\n      <PaginationProvider pagination={paginationFactory(paginationOptions)}>\r\n        {({ paginationProps, paginationTableProps }) => {\r\n          return (\r\n            <Pagination\r\n              isLoading={listLoading}\r\n              paginationProps={paginationProps}\r\n            >\r\n              <BootstrapTable\r\n                wrapperClasses=\"table-responsive\"\r\n                classes=\"table table-head-custom table-vertical-center overflow-hidden\"\r\n                bootstrap4\r\n                bordered={false}\r\n                remote\r\n                keyField=\"id\"\r\n                data= {entities}\r\n                columns={columns}\r\n                defaultSorted={uiHelpers.defaultSorted}\r\n                onTableChange={getHandlerTableChange(\r\n                  customersUIProps.setQueryParams\r\n                )}\r\n                selectRow={getSelectRow({\r\n                  entities,\r\n                  ids: customersUIProps.ids,\r\n                  setIds: customersUIProps.setIds,\r\n                })}\r\n                {...paginationTableProps}\r\n              >\r\n                <PleaseWaitMessage entities={entities} />\r\n                <NoRecordsFoundMessage entities={entities} />\r\n              </BootstrapTable>\r\n            </Pagination>\r\n          );\r\n        }}\r\n      </PaginationProvider>\r\n    </>\r\n  );\r\n}\r\n","import React, { useMemo } from \"react\";\r\nimport { useCustomersUIContext } from \"../CustomersUIContext\";\r\n\r\nexport function CustomersGrouping() {\r\n  // Customers UI Context\r\n  const customersUIContext = useCustomersUIContext();\r\n  const customersUIProps = useMemo(() => {\r\n    return {\r\n      ids: customersUIContext.ids,\r\n      setIds: customersUIContext.setIds,\r\n      openDeleteCustomersDialog: customersUIContext.openDeleteCustomersDialog,\r\n      openFetchCustomersDialog: customersUIContext.openFetchCustomersDialog,\r\n      openUpdateCustomersStatusDialog:\r\n        customersUIContext.openUpdateCustomersStatusDialog,\r\n    };\r\n  }, [customersUIContext]);\r\n\r\n  return (\r\n    <div className=\"form\">\r\n      <div className=\"row align-items-center form-group-actions margin-top-20 margin-bottom-20\">\r\n        <div className=\"col-xl-12\">\r\n          <div className=\"form-group form-group-inline\">\r\n            <div className=\"form-label form-label-no-wrap\">\r\n              <label className=\"-font-bold font-danger-\">\r\n                <span>\r\n                  Selected records count: <b>{customersUIProps.ids.length}</b>\r\n                </span>\r\n              </label>\r\n            </div>\r\n            <div>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-danger font-weight-bolder font-size-sm\"\r\n                onClick={customersUIProps.openDeleteCustomersDialog}\r\n              >\r\n                <i className=\"fa fa-trash\"></i> Delete All\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, {useMemo} from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar,\r\n} from \"../../../../../_metronic/_partials/controls\";\r\nimport { CustomersFilter } from \"./customers-filter/CustomersFilter\";\r\nimport { CustomersTable } from \"./customers-table/CustomersTable\";\r\nimport { CustomersGrouping } from \"./customers-grouping/CustomersGrouping\";\r\nimport { useCustomersUIContext } from \"./CustomersUIContext\";\r\n\r\nexport function CustomersCard() {\r\n  const customersUIContext = useCustomersUIContext();\r\n  const customersUIProps = useMemo(() => {\r\n    return {\r\n      ids: customersUIContext.ids,\r\n      queryParams: customersUIContext.queryParams,\r\n      setQueryParams: customersUIContext.setQueryParams,\r\n      newCustomerButtonClick: customersUIContext.newCustomerButtonClick,\r\n      openDeleteCustomersDialog: customersUIContext.openDeleteCustomersDialog,\r\n      openEditCustomerPage: customersUIContext.openEditCustomerPage,\r\n      openUpdateCustomersStatusDialog:\r\n        customersUIContext.openUpdateCustomersStatusDialog,\r\n      openFetchCustomersDialog: customersUIContext.openFetchCustomersDialog,\r\n    };\r\n  }, [customersUIContext]);\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader title=\"Customers\">\r\n      </CardHeader>\r\n      <CardBody>\r\n        {/* <CustomersFilter /> */}\r\n        {customersUIProps.ids.length > 0 && (\r\n          <>\r\n            <CustomersGrouping />\r\n          </>\r\n        )}\r\n        <CustomersTable />\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { CustomersLoadingDialog } from \"./customers-loading-dialog/CustomersLoadingDialog\";\r\nimport { CustomerDeleteDialog } from \"./customer-delete-dialog/CustomerDeleteDialog\";\r\nimport { CustomersDeleteDialog } from \"./customers-delete-dialog/CustomersDeleteDialog\";\r\nimport { CustomersFetchDialog } from \"./customers-fetch-dialog/CustomersFetchDialog\";\r\nimport { CustomersUpdateStatusDialog } from \"./customers-update-status-dialog/CustomersUpdateStatusDialog\";\r\nimport { CustomersCard } from \"./CustomersCard\";\r\nimport { CustomersUIProvider } from \"./CustomersUIContext\";\r\nimport {ADMIN_ROUTE} from '../../../../pages/helper/api'\r\n\r\nexport function CustomersPage({ history }) {\r\n  const customersUIEvents = {\r\n    newCustomerButtonClick: () => {\r\n      history.push(`/${ADMIN_ROUTE}/customers/new`);\r\n    },\r\n    openEditCustomerPage: (id) => {\r\n      history.push(`/${ADMIN_ROUTE}/customers/${id}/edit`);\r\n    },\r\n    openViewCustomerPage: (id) => {\r\n      history.push(`/${ADMIN_ROUTE}/customers/${id}/view`);\r\n    },\r\n    openDeleteCustomerDialog: (id) => {\r\n      history.push(`/${ADMIN_ROUTE}/customers/${id}/delete`);\r\n    },\r\n    openDeleteCustomersDialog: () => {\r\n      history.push(`/${ADMIN_ROUTE}/customers/deleteCustomers`);\r\n    },\r\n    openFetchCustomersDialog: () => {\r\n      history.push(`/${ADMIN_ROUTE}/customers/fetch`);\r\n    },\r\n    openUpdateCustomersStatusDialog: () => {\r\n      history.push(\"/\"+ADMIN_ROUTE+\"/customers/updateStatus\");\r\n    },\r\n  };\r\n\r\n  return (\r\n    <CustomersUIProvider customersUIEvents={customersUIEvents}>\r\n      <CustomersLoadingDialog />\r\n      <Route path={\"/\"+ADMIN_ROUTE+\"/customers/deleteCustomers\"}>\r\n        {({ history, match }) => (\r\n          <CustomersDeleteDialog\r\n            show={match != null}\r\n            onHide={() => {\r\n              history.push(\"/\"+ADMIN_ROUTE+\"/customers\");\r\n            }}\r\n          />\r\n        )}\r\n      </Route>\r\n      <Route path={\"/\"+ADMIN_ROUTE+\"/customers/:id/delete\"}>\r\n        {({ history, match }) => (\r\n          <CustomerDeleteDialog\r\n            show={match != null}\r\n            id={match && match.params.id}\r\n            onHide={() => {\r\n              history.push(\"/\"+ADMIN_ROUTE+\"/customers\");\r\n            }}\r\n          />\r\n        )}\r\n      </Route>\r\n      <Route path={\"/\"+ADMIN_ROUTE+\"/customers/fetch\"}>\r\n        {({ history, match }) => (\r\n          <CustomersFetchDialog\r\n            show={match != null}\r\n            onHide={() => {\r\n              history.push(\"/\"+ADMIN_ROUTE+\"/customers\");\r\n            }}\r\n          />\r\n        )}\r\n      </Route>\r\n      <Route path={\"/\"+ADMIN_ROUTE+\"/customers/updateStatus\"}>\r\n        {({ history, match }) => (\r\n          <CustomersUpdateStatusDialog\r\n            show={match != null}\r\n            onHide={() => {\r\n              history.push(\"/\"+ADMIN_ROUTE+\"/customers\");\r\n            }}\r\n          />\r\n        )}\r\n      </Route>\r\n      <CustomersCard />\r\n    </CustomersUIProvider>\r\n  );\r\n}\r\n","// Form is based on Formik\r\n// Data validation is based on Yup\r\n// Please, be familiar with article first:\r\n// https://hackernoon.com/react-form-validation-with-formik-and-yup-8b76bda62e10\r\nimport React, { useEffect, useState, useRef } from \"react\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport {\r\n  Input,\r\n  Select as MSelect,\r\n} from \"../../../../../../_metronic/_partials/controls\";\r\nimport Creatable from \"react-select/creatable\";\r\nimport { withAsyncPaginate, AsyncPaginate } from \"react-select-async-paginate\";\r\n\r\nimport Select from \"react-select\";\r\nimport {\r\n  AVAILABLE_COLORS,\r\n  AVAILABLE_MANUFACTURES,\r\n  CustomerStatusTitles,\r\n  YES_NO_OPTIONS,\r\n  UOM_CHOICES,\r\n  CustomerConditionTitles,\r\n} from \"../CustomersUIHelpers\";\r\nimport {\r\n  list,\r\n  loadOptions,\r\n  DROPDOWN_WAIT,\r\n  post,\r\n} from \"../../../../../pages/helper/api\";\r\n\r\nconst CreatableAsyncPaginate = withAsyncPaginate(Creatable);\r\n// Validation schema\r\nconst CustomerEditSchema = Yup.object().shape({\r\n  company_name: Yup.string()\r\n    .min(2, \"Minimum 2 symbols\")\r\n    .max(50, \"Maximum 50 symbols\")\r\n    .required(\"Company Name is required\"),\r\n  user: Yup.object({\r\n    email: Yup.string()\r\n    .min(2, \"Minimum 2 symbols\")\r\n    .max(50, \"Maximum 50 symbols\")\r\n    .required(\"Company Name is required\"),\r\n  })\r\n  // customer_category: Yup.string(),\r\n  // supplier: Yup.string(),\r\n  // customer_manufacturer: Yup.string(),\r\n  // unit_price: Yup.number(),\r\n  // condition: Yup.string()\r\n  //   .min(2, \"Minimum 2 symbols\")\r\n  //   .max(50, \"Maximum 2 symbols\"),\r\n  // quantity: Yup.number()\r\n  //   .min(0, \"Quantity can'be negative\"),\r\n  // tag_date: Yup.date(),\r\n  // turn_around_time: Yup.string(),\r\n  // hazmat: Yup.string(),\r\n  // certification: Yup.string(),\r\n  // unit_of_measure: Yup.string(),\r\n  // hot_sale_item: Yup.string(),\r\n  // status: Yup.string(),\r\n});\r\n\r\nexport function CustomerEditForm({ customer, btnRef, saveCustomer }) {\r\n  const [countries, setCountries] = useState([]);\r\n  const [modelsLoaded, setModelsLoaded] = useState(false);\r\n\r\n  useEffect(() => {\r\n    loadModels();\r\n  }, []);\r\n\r\n  function loadModels() {\r\n    let models = {\r\n      'Country': {},\r\n    };\r\n    post(\"oas-models\", { models: models }).then(function(response) {\r\n      for (let opt in response.data) {\r\n        response.data[opt].map((row, i) => {\r\n          response.data[opt][i].label = row.name ? row.name : row.company_name;\r\n          response.data[opt][i].value = row.id;\r\n        });\r\n      }\r\n\r\n      setCountries(response.data.Country);\r\n      setModelsLoaded(true);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Formik\r\n        enableReinitialize={true}\r\n        initialValues={customer}\r\n        validationSchema={CustomerEditSchema}\r\n        onSubmit={(values) => {\r\n          saveCustomer(values);\r\n        }}\r\n      >\r\n        {({ handleSubmit }) => (\r\n          <>\r\n            <Form className=\"form form-label-right\">\r\n              <div className=\"form-group row\">\r\n                <div className=\"col-lg-4\">\r\n                  <Field\r\n                    name=\"user.first_name\"\r\n                    component={Input}\r\n                    placeholder=\"First Name\"\r\n                    label=\"First Name\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-lg-4\">\r\n                  <Field\r\n                    name=\"user.last_name\"\r\n                    component={Input}\r\n                    placeholder=\"Last Name\"\r\n                    label=\"Last Name\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-lg-4\">\r\n                  <Field\r\n                    name=\"user.email\"\r\n                    component={Input}\r\n                    placeholder=\"Email\"\r\n                    label=\"Email\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"form-group row\">\r\n                <div className=\"col-lg-4\">\r\n                  <Field\r\n                    name=\"company_name\"\r\n                    component={Input}\r\n                    placeholder=\"xbs\"\r\n                    label=\"Company Name\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-lg-4\">\r\n                  <Field\r\n                    name=\"contact_person\"\r\n                    component={Input}\r\n                    placeholder=\"e.g AB123\"\r\n                    label=\"Contact Person\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-lg-4\">\r\n                  <label>Select Country</label>\r\n                  <AsyncPaginate\r\n                    debounceTimeout={!modelsLoaded ? DROPDOWN_WAIT : 0}\r\n                    name=\"country\"\r\n                    isClearable={true}\r\n                    loadOptions={(search, prevOptions) =>\r\n                      loadOptions(search, prevOptions, countries, modelsLoaded)\r\n                    }\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"form-group row\">\r\n                <div className=\"col-lg-4\">\r\n                  <Field\r\n                    name=\"landline_phone\"\r\n                    component={Input}\r\n                    placeholder=\"041457078\"\r\n                    label=\"Landline Phone\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-lg-4\">\r\n                  <Field\r\n                    name=\"mobile_Phone\"\r\n                    component={Input}\r\n                    placeholder=\"Mobile Phone\"\r\n                    label=\"Mobile Phone\"\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <button\r\n                type=\"submit\"\r\n                style={{ display: \"none\" }}\r\n                ref={btnRef}\r\n                onSubmit={() => handleSubmit()}\r\n              ></button>\r\n            </Form>\r\n          </>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n}\r\n","// Form is based on Formik\r\n// Data validation is based on Yup\r\n// Please, be familiar with article first:\r\n// https://hackernoon.com/react-form-validation-with-formik-and-yup-8b76bda62e10\r\nimport React, { useEffect, useState, useRef } from \"react\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { Input, Select as MSelect } from \"../../../../../../_metronic/_partials/controls\";\r\nimport Creatable from \"react-select/creatable\";\r\nimport { withAsyncPaginate, AsyncPaginate } from \"react-select-async-paginate\";\r\n\r\nimport Select from 'react-select';\r\nimport {\r\n  AVAILABLE_COLORS,\r\n  AVAILABLE_MANUFACTURES,\r\n  ShippingStatusTitles,\r\n  YES_NO_OPTIONS,\r\n  UOM_CHOICES,\r\n  ShippingConditionTitles,\r\n} from \"../CustomersUIHelpers\";\r\nimport { list, loadOptions, DROPDOWN_WAIT, post } from \"../../../../../pages/helper/api\";\r\n\r\nconst CreatableAsyncPaginate = withAsyncPaginate(Creatable);\r\n// Validation schema\r\nconst BillingEditSchema = Yup.object().shape({\r\n  billingcontact: Yup.object().shape({\r\n      company_name: Yup.string()\r\n        .min(2, \"Minimum 2 symbols\")\r\n        .max(50, \"Maximum 50 symbols\")\r\n        .required(\"Company Name is required\"),\r\n      email: Yup.string()\r\n        .min(2, \"Minimum 2 symbols\")\r\n        .max(50, \"Maximum 50 symbols\")\r\n        .required(\"Email  is required\"),\r\n  }),\r\n  // customer_category: Yup.string(),\r\n  // supplier: Yup.string(),\r\n  // customer_manufacturer: Yup.string(),\r\n  // unit_price: Yup.number(),\r\n  // condition: Yup.string()\r\n  //   .min(2, \"Minimum 2 symbols\")\r\n  //   .max(50, \"Maximum 2 symbols\"),\r\n  // quantity: Yup.number()\r\n  //   .min(0, \"Quantity can'be negative\"),\r\n  // tag_date: Yup.date(),\r\n  // turn_around_time: Yup.string(),\r\n  // hazmat: Yup.string(),\r\n  // certification: Yup.string(),\r\n  // unit_of_measure: Yup.string(),\r\n  // hot_sale_item: Yup.string(),\r\n  // status: Yup.string(),\r\n});\r\n\r\nexport default function CustomerEditForm({\r\n  customer,\r\n  btnRef,\r\n  saveCustomer,\r\n}) {\r\n\r\n  const [countries, setCountries] = useState([]);\r\n  const [modelsLoaded, setModelsLoaded] = useState(false);\r\n\r\n  useEffect(() => {\r\n    loadModels();\r\n  }, []);\r\n\r\n  function loadModels() {\r\n    let models = {\r\n      'Country':{},\r\n    }\r\n    post('oas-models', {models:models}).then(function(response){\r\n      for(let opt in response.data){\r\n        response.data[opt].map((row, i) => {\r\n          response.data[opt][i].label = row.name ? row.name : row.company_name;\r\n          response.data[opt][i].value = row.id;\r\n        })\r\n      }\r\n\r\n      setCountries(response.data.Country);\r\n      setModelsLoaded(true);\r\n    })\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <Formik\r\n        enableReinitialize={true}\r\n        initialValues={customer}\r\n        validationSchema={BillingEditSchema}\r\n        onSubmit={(values) => {\r\n          saveCustomer(values);\r\n        }}\r\n      >\r\n        {({ handleSubmit }) => (\r\n          <>\r\n            <Form className=\"form form-label-right\">\r\n              <div className=\"form-group row\">\r\n                <div className=\"col-lg-4\">\r\n                  <Field\r\n                    name=\"billingcontact.email\"\r\n                    component={Input}\r\n                    placeholder=\"Email\"\r\n                    label=\"Email\"\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"col-lg-4\">\r\n                  <Field\r\n                    name=\"billingcontact.company_name\"\r\n                    component={Input}\r\n                    placeholder=\"xbs\"\r\n                    label=\"Company Name\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-lg-4\">\r\n                  <Field\r\n                    name=\"billingcontact.contact_person\"\r\n                    component={Input}\r\n                    placeholder=\"e.g AB123\"\r\n                    label=\"Contact Person\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"form-group row\"> \r\n                <div className=\"col-lg-4\">\r\n                  <Field\r\n                    name=\"billingcontact.bill_address_one\"\r\n                    component={Input}\r\n                    placeholder=\"Bill Address \"\r\n                    label=\"Bill Address One\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-lg-4\">\r\n                  <Field\r\n                    name=\"billingcontact.bill_address_two\"\r\n                    component={Input}\r\n                    placeholder=\"Bill Address \"\r\n                    label=\"Bill Address Two\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-lg-4\">\r\n                  <Field\r\n                    name=\"billingcontact.zip_code\"\r\n                    component={Input}\r\n                    placeholder=\"Zip Code \"\r\n                    label=\"Zip Code\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"form-group row\">  \r\n                <div className=\"col-lg-4\">\r\n                  <label>Select Country</label>\r\n                  <AsyncPaginate\r\n                    debounceTimeout={!modelsLoaded ? DROPDOWN_WAIT : 0}\r\n                    name=\"billingcontact.country\"\r\n                    isClearable = {true}\r\n                    loadOptions={(search, prevOptions) => loadOptions(search, prevOptions, countries, modelsLoaded)}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <button\r\n                type=\"submit\"\r\n                style={{ display: \"none\" }}\r\n                ref={btnRef}\r\n                onSubmit={() => handleSubmit()}\r\n              ></button>\r\n            </Form>\r\n          </>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n}\r\n","// Form is based on Formik\r\n// Data validation is based on Yup\r\n// Please, be familiar with article first:\r\n// https://hackernoon.com/react-form-validation-with-formik-and-yup-8b76bda62e10\r\nimport React, { useEffect, useState, useRef } from \"react\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { Input, Select as MSelect } from \"../../../../../../_metronic/_partials/controls\";\r\nimport Creatable from \"react-select/creatable\";\r\nimport { withAsyncPaginate, AsyncPaginate } from \"react-select-async-paginate\";\r\n\r\nimport Select from 'react-select';\r\nimport {\r\n  AVAILABLE_COLORS,\r\n  AVAILABLE_MANUFACTURES,\r\n  ShippingStatusTitles,\r\n  YES_NO_OPTIONS,\r\n  UOM_CHOICES,\r\n  ShippingConditionTitles,\r\n} from \"../CustomersUIHelpers\";\r\nimport { list, loadOptions, DROPDOWN_WAIT, post } from \"../../../../../pages/helper/api\";\r\n\r\nconst CreatableAsyncPaginate = withAsyncPaginate(Creatable);\r\n// Validation schema\r\nconst CustomerEditSchema = Yup.object().shape({\r\n  // company_name: Yup.string()\r\n  //   .min(2, \"Minimum 2 symbols\")\r\n  //   .max(50, \"Maximum 50 symbols\")\r\n  //   .required(\"Company Name is required\"),\r\n  // customer_category: Yup.string(),\r\n  // supplier: Yup.string(),\r\n  // customer_manufacturer: Yup.string(),\r\n  // unit_price: Yup.number(),\r\n  // condition: Yup.string()\r\n  //   .min(2, \"Minimum 2 symbols\")\r\n  //   .max(50, \"Maximum 2 symbols\"),\r\n  // quantity: Yup.number()\r\n  //   .min(0, \"Quantity can'be negative\"),\r\n  // tag_date: Yup.date(),\r\n  // turn_around_time: Yup.string(),\r\n  // hazmat: Yup.string(),\r\n  // certification: Yup.string(),\r\n  // unit_of_measure: Yup.string(),\r\n  // hot_sale_item: Yup.string(),\r\n  // status: Yup.string(),\r\n});\r\n\r\nexport default function CustomerEditForm({\r\n  customer,\r\n  btnRef,\r\n  saveCustomer,\r\n}) {\r\n\r\n  const [countries, setCountries] = useState([]);\r\n  const [modelsLoaded, setModelsLoaded] = useState(false);\r\n\r\n  useEffect(() => {\r\n    loadModels();\r\n  }, []);\r\n\r\n  function loadModels() {\r\n    let models = {\r\n      'Country':{},\r\n    }\r\n    post('oas-models', {models:models}).then(function(response){\r\n      for(let opt in response.data){\r\n        response.data[opt].map((row, i) => {\r\n          response.data[opt][i].label = row.name ? row.name : row.company_name;\r\n          response.data[opt][i].value = row.id;\r\n        })\r\n      }\r\n\r\n      setCountries(response.data.Country);\r\n      setModelsLoaded(true);\r\n    })\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <Formik\r\n        enableReinitialize={true}\r\n        initialValues={customer}\r\n        validationSchema={CustomerEditSchema}\r\n        onSubmit={(values) => {\r\n          saveCustomer(values);\r\n        }}\r\n      >\r\n        {({ handleSubmit }) => (\r\n          <>\r\n            <Form className=\"form form-label-right\">\r\n              <div className=\"form-group row\">\r\n                <div className=\"col-lg-4\">\r\n                  <Field\r\n                    name=\"shippingcontact.email\"\r\n                    component={Input}\r\n                    placeholder=\"Email\"\r\n                    label=\"Email\"\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"col-lg-4\">\r\n                  <Field\r\n                    name=\"shippingcontact.company_name\"\r\n                    component={Input}\r\n                    placeholder=\"xbs\"\r\n                    label=\"Company Name\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-lg-4\">\r\n                  <Field\r\n                    name=\"shippingcontact.contact_person\"\r\n                    component={Input}\r\n                    placeholder=\"e.g AB123\"\r\n                    label=\"Contact Person\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"form-group row\">\r\n                <div className=\"col-lg-4\">\r\n                  <Field\r\n                    name=\"shippingcontact.bill_address_one\"\r\n                    component={Input}\r\n                    placeholder=\"Bill Address \"\r\n                    label=\"Bill Address One\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-lg-4\">\r\n                  <Field\r\n                    name=\"shippingcontact.bill_address_two\"\r\n                    component={Input}\r\n                    placeholder=\"Bill Address \"\r\n                    label=\"Bill Address Two\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-lg-4\">\r\n                  <Field\r\n                    name=\"shippingcontact.zip_code\"\r\n                    component={Input}\r\n                    placeholder=\"Zip Code \"\r\n                    label=\"Zip Code\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"form-group row\">\r\n                <div className=\"col-lg-4\">\r\n                  <label>Select Country</label>\r\n                  <AsyncPaginate\r\n                    debounceTimeout={!modelsLoaded ? DROPDOWN_WAIT : 0}\r\n                    name=\"shippingcontact.country\"\r\n                    isClearable = {true}\r\n                    loadOptions={(search, prevOptions) => loadOptions(search, prevOptions, countries, modelsLoaded)}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <button\r\n                type=\"submit\"\r\n                style={{ display: \"none\" }}\r\n                ref={btnRef}\r\n                onSubmit={() => handleSubmit()}\r\n              ></button>\r\n            </Form>\r\n          </>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n}\r\n","export const defaultSorted = [{ dataField: \"id\", order: \"asc\" }];\r\nexport const sizePerPageList = [\r\n  { text: \"1\", value: 1 },\r\n  { text: \"3\", value: 3 },\r\n  { text: \"5\", value: 5 },\r\n];\r\nexport const initialFilter = {\r\n  filter: {\r\n    value: \"\",\r\n  },\r\n  sortOrder: \"asc\", // asc||desc\r\n  sortField: \"name\",\r\n  pageNumber: 1,\r\n  pageSize: 5,\r\n};\r\n\r\nexport const SPECIFICATIONS_DICTIONARY = [\r\n  { id: 0, name: \"Seats\" },\r\n  { id: 1, name: \"Fuel Type\" },\r\n  { id: 2, name: \"Stock\" },\r\n  { id: 3, name: \"Door count\" },\r\n  { id: 4, name: \"Engine\" },\r\n  { id: 5, name: \"Transmission\" },\r\n  { id: 6, name: \"Drivetrain\" },\r\n  { id: 7, name: \"Combined MPG\" },\r\n  { id: 8, name: \"Warranty\" },\r\n  { id: 9, name: \"Wheels\" },\r\n];\r\n","/* eslint-disable no-unused-vars */\r\nimport React, {\r\n  useEffect,\r\n  useContext,\r\n  createContext,\r\n  useState,\r\n  useCallback,\r\n} from \"react\";\r\nimport { isEqual, isFunction } from \"lodash\";\r\nimport { initialFilter } from \"./SpecificationsUIHelper\";\r\n\r\nconst SpecificationsUIContext = createContext();\r\n\r\nexport function useSpecificationsUIContext() {\r\n  return useContext(SpecificationsUIContext);\r\n}\r\n\r\nexport const SpecificationsUIConsumer = SpecificationsUIContext.Consumer;\r\n\r\nexport function SpecificationsUIProvider({ currentCustomerId, children }) {\r\n  const [customerId, setCustomerId] = useState(currentCustomerId);\r\n  const [queryParams, setQueryParamsBase] = useState(initialFilter);\r\n  const [ids, setIds] = useState([]);\r\n  const setQueryParams = useCallback((nextQueryParams) => {\r\n    setQueryParamsBase((prevQueryParams) => {\r\n      if (isFunction(nextQueryParams)) {\r\n        nextQueryParams = nextQueryParams(prevQueryParams);\r\n      }\r\n\r\n      if (isEqual(prevQueryParams, nextQueryParams)) {\r\n        return prevQueryParams;\r\n      }\r\n\r\n      return nextQueryParams;\r\n    });\r\n  }, []);\r\n  const [selectedId, setSelectedId] = useState(null);\r\n  const initSpecification = {\r\n    id: undefined,\r\n    value: \"\",\r\n    specId: 0,\r\n    carId: customerId,\r\n  };\r\n  useEffect(() => {\r\n    initSpecification.carId = currentCustomerId;\r\n    initSpecification.customerId = currentCustomerId;\r\n    setCustomerId(currentCustomerId);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [currentCustomerId]);\r\n  const [\r\n    showEditSpecificationDialog,\r\n    setShowEditSpecificationDialog,\r\n  ] = useState(false);\r\n  const openNewSpecificationDialog = () => {\r\n    setSelectedId(undefined);\r\n    setShowEditSpecificationDialog(true);\r\n  };\r\n  const openEditSpecificationDialog = (id) => {\r\n    setSelectedId(id);\r\n    setShowEditSpecificationDialog(true);\r\n  };\r\n  const closeEditSpecificationDialog = () => {\r\n    setSelectedId(undefined);\r\n    setShowEditSpecificationDialog(false);\r\n  };\r\n  const [\r\n    showDeleteSpecificationDialog,\r\n    setShowDeleteSpecificationDialog,\r\n  ] = useState(false);\r\n  const openDeleteSpecificationDialog = (id) => {\r\n    setSelectedId(id);\r\n    setShowDeleteSpecificationDialog(true);\r\n  };\r\n  const closeDeleteSpecificationDialog = () => {\r\n    setSelectedId(undefined);\r\n    setShowDeleteSpecificationDialog(false);\r\n  };\r\n  const [\r\n    showDeleteSpecificationsDialog,\r\n    setShowDeleteSpecificationsDialog,\r\n  ] = useState(false);\r\n  const openDeleteSpecificationsDialog = () => {\r\n    setShowDeleteSpecificationsDialog(true);\r\n  };\r\n  const closeDeleteSpecificationsDialog = () => {\r\n    setShowDeleteSpecificationsDialog(false);\r\n  };\r\n  const [\r\n    showFetchSpecificationsDialog,\r\n    setShowFetchSpecificationsDialog,\r\n  ] = useState(false);\r\n  const openFetchSpecificationsDialog = () => {\r\n    setShowFetchSpecificationsDialog(true);\r\n  };\r\n  const closeFetchSpecificationsDialog = () => {\r\n    setShowFetchSpecificationsDialog(false);\r\n  };\r\n  const value = {\r\n    ids,\r\n    setIds,\r\n    customerId,\r\n    setCustomerId,\r\n    queryParams,\r\n    setQueryParams,\r\n    initSpecification,\r\n    selectedId,\r\n    showEditSpecificationDialog,\r\n    openEditSpecificationDialog,\r\n    openNewSpecificationDialog,\r\n    closeEditSpecificationDialog,\r\n    showDeleteSpecificationDialog,\r\n    openDeleteSpecificationDialog,\r\n    closeDeleteSpecificationDialog,\r\n    showDeleteSpecificationsDialog,\r\n    openDeleteSpecificationsDialog,\r\n    closeDeleteSpecificationsDialog,\r\n    showFetchSpecificationsDialog,\r\n    openFetchSpecificationsDialog,\r\n    closeFetchSpecificationsDialog,\r\n  };\r\n\r\n  return (\r\n    <SpecificationsUIContext.Provider value={value}>\r\n      {children}\r\n    </SpecificationsUIContext.Provider>\r\n  );\r\n}\r\n","// Form is based on Formik\r\n// Data validation is based on Yup\r\n// Please, be familiar with article first:\r\n// https://hackernoon.com/react-form-validation-with-formik-and-yup-8b76bda62e10\r\nimport React from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport {\r\n  Select,\r\n  Input,\r\n} from \"../../../../../../../_metronic/_partials/controls\";\r\nimport { SPECIFICATIONS_DICTIONARY } from \"../SpecificationsUIHelper\";\r\n\r\n// Validation schema\r\nconst SpecificationEditSchema = Yup.object().shape({\r\n  value: Yup.string()\r\n    .min(2, \"Minimum 2 symbols\")\r\n    .max(50, \"Maximum 50 symbols\")\r\n    .required(\"Value is required\"),\r\n  specId: Yup.number().required(\"Specification type is required\"),\r\n});\r\n\r\nexport function SpecificationEditForm({\r\n  saveSpecification,\r\n  specification,\r\n  actionsLoading,\r\n  onHide,\r\n}) {\r\n  return (\r\n    <>\r\n      <Formik\r\n        enableReinitialize={true}\r\n        initialValues={specification}\r\n        validationSchema={SpecificationEditSchema}\r\n        onSubmit={(values) => {\r\n          saveSpecification(values);\r\n        }}\r\n      >\r\n        {({ handleSubmit }) => (\r\n          <>\r\n            <Modal.Body className=\"overlay overlay-block cursor-default\">\r\n              {actionsLoading && (\r\n                <div className=\"overlay-layer bg-transparent\">\r\n                  <div className=\"spinner spinner-lg spinner-success\" />\r\n                </div>\r\n              )}\r\n              <Form className=\"form form-label-right\">\r\n                <div className=\"form-group row\">\r\n                  <div className=\"col-lg-12\">\r\n                    <Select name=\"specId\" label=\"Specification Type\">\r\n                      {SPECIFICATIONS_DICTIONARY.map((spec) => (\r\n                        <option key={spec.id} value={spec.id}>\r\n                          {spec.name}\r\n                        </option>\r\n                      ))}\r\n                    </Select>\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                  <div className=\"col-lg-12\">\r\n                    <Field\r\n                      name=\"value\"\r\n                      component={Input}\r\n                      placeholder=\"Value\"\r\n                      label=\"Value\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <button\r\n                type=\"button\"\r\n                onClick={onHide}\r\n                className=\"btn btn-light btn-elevate\"\r\n              >\r\n                Cancel\r\n              </button>\r\n              <> </>\r\n              <button\r\n                type=\"submit\"\r\n                onClick={() => handleSubmit()}\r\n                className=\"btn btn-info btn-elevate\"\r\n              >\r\n                Save\r\n              </button>\r\n            </Modal.Footer>\r\n          </>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n}\r\n","/* eslint-disable no-unused-vars */\r\nimport React, { useEffect, useContext, createContext, useState, useCallback } from \"react\";\r\nimport {isEqual, isFunction} from \"lodash\";\r\nimport {initialFilter} from \"./RemarksUIHelper\";\r\n\r\nconst RemarksUIContext = createContext();\r\n\r\nexport function useRemarksUIContext() {\r\n  return useContext(RemarksUIContext);\r\n}\r\n\r\nexport const RemarksUIConsumer = RemarksUIContext.Consumer;\r\n\r\nexport function RemarksUIProvider({ currentCustomerId, children }) {\r\n  const [customerId, setCustomerId] = useState(currentCustomerId);\r\n  const [queryParams, setQueryParamsBase] = useState(initialFilter);\r\n  const [ids, setIds] = useState([]);\r\n  const setQueryParams = useCallback(nextQueryParams => {\r\n    setQueryParamsBase(prevQueryParams => {\r\n      if (isFunction(nextQueryParams)) {\r\n        nextQueryParams = nextQueryParams(prevQueryParams);\r\n      }\r\n\r\n      if (isEqual(prevQueryParams, nextQueryParams)) {\r\n        return prevQueryParams;\r\n      }\r\n\r\n      return nextQueryParams;\r\n    });\r\n  }, []);\r\n  const [selectedId, setSelectedId] = useState(null);\r\n  const [showEditRemarkDialog, setShowEditRemarkDialog] = useState(false);\r\n  const initRemark = {\r\n    id: undefined,\r\n    text: \"\",\r\n    type: 0,\r\n    dueDate: \"01/07/2020\",\r\n    carId: customerId\r\n  };\r\n  useEffect(()=> {\r\n    initRemark.customerId = currentCustomerId;\r\n    initRemark.carId = currentCustomerId;\r\n    setCustomerId(currentCustomerId);\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [currentCustomerId]);\r\n  const openNewRemarkDialog = () => {\r\n    setSelectedId(undefined);\r\n    setShowEditRemarkDialog(true);\r\n  };\r\n  const openEditRemarkDialog = id => {\r\n    setSelectedId(id);\r\n    setShowEditRemarkDialog(true);\r\n  };\r\n  const closeEditRemarkDialog = () => {\r\n    setSelectedId(undefined);\r\n    setShowEditRemarkDialog(false);\r\n  };\r\n  const [showDeleteRemarkDialog, setShowDeleteRemarkDialog] = useState(false);\r\n  const openDeleteRemarkDialog = id => {\r\n    setSelectedId(id);\r\n    setShowDeleteRemarkDialog(true);\r\n  };\r\n  const closeDeleteRemarkDialog = () => {\r\n    setSelectedId(undefined);\r\n    setShowDeleteRemarkDialog(false);\r\n  };\r\n\r\n  const [showDeleteRemarksDialog, setShowDeleteRemarksDialog] = useState(false);\r\n  const openDeleteRemarksDialog = () => {\r\n    setShowDeleteRemarksDialog(true);\r\n  };\r\n  const closeDeleteRemarksDialog = () => {\r\n    setShowDeleteRemarksDialog(false);\r\n  };\r\n\r\n  const [showFetchRemarksDialog, setShowFetchRemarksDialog] = useState(false);\r\n  const openFetchRemarksDialog = () => {\r\n    setShowFetchRemarksDialog(true);\r\n  };\r\n  const closeFetchRemarksDialog = () => {\r\n    setShowFetchRemarksDialog(false);\r\n  };\r\n\r\n  const value = {\r\n    ids,\r\n    setIds,\r\n    customerId,\r\n    setCustomerId,\r\n    queryParams,\r\n    setQueryParams,\r\n    initRemark,\r\n    selectedId,\r\n    showEditRemarkDialog,\r\n    openNewRemarkDialog,    \r\n    openEditRemarkDialog,\r\n    closeEditRemarkDialog,\r\n    showDeleteRemarkDialog,\r\n    openDeleteRemarkDialog,\r\n    closeDeleteRemarkDialog,\r\n    showDeleteRemarksDialog,\r\n    openDeleteRemarksDialog,\r\n    closeDeleteRemarksDialog,\r\n    openFetchRemarksDialog,\r\n    closeFetchRemarksDialog,\r\n    showFetchRemarksDialog\r\n  };\r\n  \r\n  return (\r\n    <RemarksUIContext.Provider value={value}>\r\n      {children}\r\n    </RemarksUIContext.Provider>\r\n  );\r\n}\r\n","// Form is based on Formik\r\n// Data validation is based on Yup\r\n// Please, be familiar with article first:\r\n// https://hackernoon.com/react-form-validation-with-formik-and-yup-8b76bda62e10\r\nimport React from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport {\r\n  Input,\r\n  Select,\r\n  DatePickerField,\r\n} from \"../../../../../../../_metronic/_partials/controls\";\r\n\r\n// Validation schema\r\nconst RemarkEditSchema = Yup.object().shape({\r\n  text: Yup.string()\r\n    .min(2, \"Minimum 2 symbols\")\r\n    .max(50, \"Maximum 50 symbols\")\r\n    .required(\"Text is required\"),\r\n  type: Yup.number().required(\"Type is required\"),\r\n  dueDate: Yup.mixed()\r\n    .nullable(false)\r\n    .required(\"Due date is required\"),\r\n});\r\n\r\nexport function RemarkEditForm({ saveRemark, remark, actionsLoading, onHide }) {\r\n  return (\r\n    <>\r\n      <Formik\r\n        enableReinitialize={true}\r\n        initialValues={remark}\r\n        validationSchema={RemarkEditSchema}\r\n        onSubmit={(values) => saveRemark(values)}\r\n      >\r\n        {({ handleSubmit }) => (\r\n          <>\r\n            <Modal.Body className=\"overlay overlay-block cursor-default\">\r\n              {actionsLoading && (\r\n                <div className=\"overlay-layer bg-transparent\">\r\n                  <div className=\"spinner spinner-lg spinner-success\" />\r\n                </div>\r\n              )}\r\n              <Form className=\"form form-label-right\">\r\n                <div className=\"form-group row\">\r\n                  <div className=\"col-lg-12\">\r\n                    <Field\r\n                      name=\"text\"\r\n                      component={Input}\r\n                      placeholder=\"Text\"\r\n                      label=\"Text\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                  <div className=\"col-lg-12\">\r\n                    <DatePickerField name=\"dueDate\" label=\"Due date\" />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                  <div className=\"col-lg-12\">\r\n                    <Select name=\"type\" label=\"Type\">\r\n                      <option value=\"0\">Info</option>\r\n                      <option value=\"1\">Note</option>\r\n                      <option value=\"2\">Reminder</option>\r\n                    </Select>\r\n                  </div>\r\n                </div>\r\n              </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <button\r\n                type=\"button\"\r\n                onClick={onHide}\r\n                className=\"btn btn-light btn-elevate\"\r\n              >\r\n                Cancel\r\n              </button>\r\n              <> </>\r\n              <button\r\n                type=\"submit\"\r\n                onClick={() => handleSubmit()}\r\n                className=\"btn btn-info btn-elevate\"\r\n              >\r\n                Save\r\n              </button>\r\n            </Modal.Footer>\r\n          </>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n}\r\n","/* eslint-disable no-script-url,jsx-a11y/anchor-is-valid,jsx-a11y/role-supports-aria-props */\r\nimport React, { useEffect, useState, useRef } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { shallowEqual, useSelector } from \"react-redux\";\r\nimport * as actions from \"../../../_redux/customers/customersActions\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar,\r\n} from \"../../../../../../_metronic/_partials/controls\";\r\nimport { CustomerEditForm } from \"./CustomerEditForm\";\r\nimport CustomerBillingForm  from \"./CustomerBillingForm\";\r\nimport  CustomerShippingForm  from \"./CustomerShippingForm\";\r\nimport { Specifications } from \"../customer-specifications/Specifications\";\r\nimport { SpecificationsUIProvider } from \"../customer-specifications/SpecificationsUIContext\";\r\nimport { useSubheader } from \"../../../../../../_metronic/layout\";\r\nimport { ModalProgressBar } from \"../../../../../../_metronic/_partials/controls\";\r\nimport { RemarksUIProvider } from \"../customer-remarks/RemarksUIContext\";\r\nimport { Remarks } from \"../customer-remarks/Remarks\";\r\nimport { ADMIN_ROUTE } from \"../../../../../pages/helper/api\";\r\n\r\nconst initCust = {\r\n  id: undefined,\r\n  user:{\r\n    first_name: \"\",\r\n    last_name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n  },\r\n  company_name: \"\",\r\n  contact_person: \"\",\r\n  country: \"\",\r\n  landline_phone:\"\",\r\n  mobile_Phone: \"\",\r\n  billingcontact:{\r\n    email: \"\",\r\n    company_name: \"\",\r\n    contact_person: \"\",\r\n    bill_address_one: \"\",\r\n    bill_address_two: \"\",\r\n    zip_code : \"\",\r\n    country: \"\",\r\n  },\r\n  shippingcontact:{\r\n    email: \"\",\r\n    company_name: \"\",\r\n    contact_person: \"\",\r\n    bill_address_one: \"\",\r\n    bill_address_two: \"\",\r\n    zip_code : \"\",\r\n    country: \"\",\r\n  },\r\n};\r\n\r\nexport function CustomerEdit({\r\n  history,\r\n  match: {\r\n    params: { id },\r\n  },\r\n}) {\r\n  // Subheader\r\n  const suhbeader = useSubheader();\r\n\r\n  // Tabs\r\n  const [tab, setTab] = useState(\"basic\");\r\n  const [title, setTitle] = useState(\"\");\r\n  const [initCustomer, setInitCustomer] = useState(initCust);\r\n  const [saveClick, setSaveClick] = useState(false);\r\n  const dispatch = useDispatch();\r\n  // const layoutDispatch = useContext(LayoutContext.Dispatch);\r\n  const { actionsLoading, customerForEdit } = useSelector(\r\n    (state) => ({\r\n      actionsLoading: state.customers.actionsLoading,\r\n      customerForEdit: state.customers.customerForEdit,\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(actions.fetchCustomer(id));\r\n  }, [id, dispatch]);\r\n\r\n  useEffect(() => {\r\n    let _title = id ? \"\" : \"New Customer\";\r\n    if (customerForEdit && id) {\r\n      _title = `Edit customer - ${customerForEdit.part_number}`;\r\n    }\r\n\r\n    setTitle(_title);\r\n    suhbeader.setTitle(_title);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [customerForEdit, id]);\r\n\r\n  const saveCustomer = (values) => {\r\n      console.log('values', values);\r\n      setInitCustomer(values);\r\n      if(saveClick) {  \r\n            \r\n        if (!id) {\r\n          dispatch(actions.createCustomer(values)).then((response) => {\r\n            if(response.status === 201)\r\n              backToCustomersList();\r\n            else {\r\n              alert('Some data missing');\r\n            }\r\n          });\r\n        } else {\r\n\r\n          dispatch(actions.updateCustomer(values)).then((response) => {\r\n            if(response.status === 200)\r\n              backToCustomersList();\r\n            else {\r\n              alert('Some data missing');\r\n            }\r\n          });\r\n        }\r\n      }\r\n  };\r\n\r\n  const btnRef = useRef();  \r\n  const saveCustomerClick = () => {\r\n    if (btnRef && btnRef.current) {\r\n      btnRef.current.click();\r\n      console.log(\"page saved\")\r\n    }\r\n  };\r\n\r\n  const backToCustomersList = () => {\r\n    history.push(`/${ADMIN_ROUTE}/customers`);\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      {actionsLoading && <ModalProgressBar />}\r\n      <CardHeader title={title}>\r\n        <CardHeaderToolbar>\r\n          <button\r\n            type=\"button\"\r\n            onClick={backToCustomersList}\r\n            className=\"btn btn-light\"\r\n          >\r\n            <i className=\"fa fa-arrow-left\"></i>\r\n            Back\r\n          </button>\r\n          {`  `}\r\n          <button className=\"btn btn-light ml-2\">\r\n            <i className=\"fa fa-redo\"></i>\r\n            Reset\r\n          </button>\r\n          {`  `}\r\n          <button\r\n            type=\"submit\"\r\n            className=\"btn btn-info ml-2\"\r\n            onClick={() => {setSaveClick(true); saveCustomerClick()}}\r\n          >\r\n            Save\r\n          </button>\r\n        </CardHeaderToolbar>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <ul className=\"nav nav-tabs nav-tabs-line \" role=\"tablist\">\r\n          <li className=\"nav-item\" onClick={() => {\r\n            setTab(\"basic\"); setSaveClick(false); saveCustomerClick();\r\n          }}>\r\n            <a\r\n              className={`nav-link ${tab === \"basic\" && \"active\"}`}\r\n              data-toggle=\"tab\"\r\n              role=\"tab\"\r\n              aria-selected={(tab === \"basic\").toString()}\r\n            >\r\n              Basic info\r\n            </a>\r\n          </li>\r\n\r\n              <li className=\"nav-item\" onClick={() => {\r\n                setTab(\"billing\");  setSaveClick(false); saveCustomerClick();\r\n                }}>\r\n                <a\r\n                  className={`nav-link ${tab === \"billing\" && \"active\"}`}\r\n                  data-toggle=\"tab\"\r\n                  role=\"button\"\r\n                  aria-selected={(tab === \"billing\").toString()}\r\n                >\r\n                  Billing Contact\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\" onClick={() => {setTab(\"shipping\");  setSaveClick(false); saveCustomerClick();}}>\r\n                <a\r\n                  className={`nav-link ${tab === \"shipping\" && \"active\"}`}\r\n                  data-toggle=\"tab\"\r\n                  role=\"tab\"\r\n                  aria-selected={(tab === \"shipping\").toString()}\r\n                >\r\n                  Shipping Contact\r\n                </a>\r\n              </li>\r\n        </ul>\r\n        <div className=\"mt-5\">\r\n          {tab === \"basic\" && (\r\n            <CustomerEditForm\r\n              actionsLoading={actionsLoading}\r\n              customer={customerForEdit || initCustomer}\r\n              btnRef={btnRef}\r\n              saveCustomer={saveCustomer}\r\n            />\r\n          )}\r\n          {tab === \"billing\" &&  (\r\n            <CustomerBillingForm\r\n              actionsLoading={actionsLoading}\r\n              customer={customerForEdit || initCustomer}\r\n              btnRef={btnRef}\r\n              saveCustomer={saveCustomer}\r\n            />\r\n          )}\r\n           {tab === \"shipping\" &&  (\r\n            <CustomerShippingForm\r\n              actionsLoading={actionsLoading}\r\n              customer={customerForEdit || initCustomer}\r\n              btnRef={btnRef}\r\n              saveCustomer={saveCustomer}\r\n            />\r\n          )}\r\n          </div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n}\r\n","/* eslint-disable no-script-url,jsx-a11y/anchor-is-valid,jsx-a11y/role-supports-aria-props */\r\nimport React, { useEffect, useState, useRef } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { shallowEqual, useSelector } from \"react-redux\";\r\nimport * as actions from \"../../../_redux/customers/customersActions\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar,\r\n} from \"../../../../../../_metronic/_partials/controls\";\r\nimport { useSubheader } from \"../../../../../../_metronic/layout\";\r\nimport { ModalProgressBar } from \"../../../../../../_metronic/_partials/controls\";\r\nimport { RemarksUIProvider } from \"../customer-remarks/RemarksUIContext\";\r\nimport { Remarks } from \"../customer-remarks/Remarks\";\r\nimport { ADMIN_ROUTE, STATIC_URL, getDateFormat } from \"../../../../../pages/helper/api\";\r\nimport {Paper, Grid} from \"@material-ui/core\";\r\n\r\n\r\nexport function CustomerView({\r\n  history,\r\n  match: {\r\n    params: { id },\r\n  },\r\n}) {\r\n  // Subheader\r\n  const suhbeader = useSubheader();\r\n\r\n  // Tabs\r\n  const [tab, setTab] = useState(\"basic\");\r\n  const [title, setTitle] = useState(\"\");\r\n  const [saveClick, setSaveClick] = useState(false);\r\n  const dispatch = useDispatch();\r\n  // const layoutDispatch = useContext(LayoutContext.Dispatch);\r\n  const { actionsLoading, customer } = useSelector(\r\n    (state) => ({\r\n      actionsLoading: state.customers.actionsLoading,\r\n      customer: state.customers.customerForEdit,\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(actions.fetchCustomer(id));\r\n  }, [id, dispatch]);\r\n\r\n  useEffect(() => {\r\n    let _title = id ? \"\" : \"View Customer\";\r\n    if (customer && id) {\r\n      _title = `View customer - ${customer ? customer.user_first_name+' '+customer.user_last_name : ''}`;\r\n    }\r\n\r\n    setTitle(_title);\r\n    suhbeader.setTitle(_title);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [customer, id]);\r\n\r\n  const editCustomerClick = () => {\r\n    history.push(`/${ADMIN_ROUTE}/customers/${customer.id}/edit`);\r\n  };\r\n\r\n  const backToCustomersList = () => {\r\n    history.push(`/${ADMIN_ROUTE}/customers`);\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      {actionsLoading && <ModalProgressBar />}\r\n      <CardHeader title={title}>\r\n        <CardHeaderToolbar>\r\n          <button\r\n            type=\"button\"\r\n            onClick={backToCustomersList}\r\n            className=\"btn btn-light\"\r\n          >\r\n            <i className=\"fa fa-arrow-left\"></i>\r\n            Back\r\n          </button>\r\n          {`  `}\r\n          <button\r\n            type=\"submit\"\r\n            className=\"btn btn-info ml-2\"\r\n            onClick={editCustomerClick}\r\n          >\r\n            Edit\r\n          </button>\r\n        </CardHeaderToolbar>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <div className=\"mt-5\">\r\n          <Grid container spacing={3}>\r\n                <Grid item xs={12} md={9}>\r\n                    <div className=\"kt_section__detail\">\r\n                        <div className=\"row mb-4\">\r\n                            <div className=\"col-md-6 col-12\">\r\n                                <div className=\"kt_detail__item_title\">Email</div>\r\n                                <div>{customer?.email ? customer.email : '---'}</div>\r\n                            </div>\r\n                            <div className=\"col-md-6 col-12\">\r\n                                <div className=\"kt_detail__item_title\">Company Name</div>\r\n                                <div>{customer?.company_name ? customer.company_name : '---'}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row mb-4\">\r\n                            <div className=\"col-md-6 col-12\">\r\n                                <div className=\"kt_detail__item_title\">Contact Person</div>\r\n                                <div>{customer?.contact_person ? customer.contact_person : '---'}</div>\r\n                            </div>\r\n                            <div className=\"col-md-6 col-12\">\r\n                                <div className=\"kt_detail__item_title\">Last Name</div>\r\n                                <div>{customer?.country_name ? customer.country_name : '---'}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row mb-4\">\r\n                            <div className=\"col-md-6 col-12\">\r\n                                <div className=\"kt_detail__item_title\">Landing Phone</div>\r\n                                <div>{customer?.landing_phone ? customer.landing_phone : '---'}</div>\r\n                            </div>\r\n                            <div className=\"col-md-6 col-12\">\r\n                                <div className=\"kt_detail__item_title\">Quantity</div>\r\n                                <div>{customer?.mobile_phone ? customer.mobile_phone : '---'}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row mb-4\">\r\n                            <div className=\"col-md-6 col-12\">\r\n                                <div className=\"kt_detail__item_title\">Created At</div>\r\n                                <div>{customer?.created_at ? getDateFormat(customer.created_at) : '---'}</div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <br/>\r\n                        <div className=\"row\"><div className=\"col-12\"> <h4>Billing Address </h4></div></div>\r\n                        <hr/>\r\n                        <div className=\"row mb-4\">\r\n                            <div className=\"col-md-6 col-12\">\r\n                                <div className=\"kt_detail__item_title\">Email</div>\r\n                                <div>{customer?.billingcontact ? customer.billingcontact.email : '---'}</div>\r\n                            </div>\r\n                            <div className=\"col-md-6 col-12\">\r\n                                <div className=\"kt_detail__item_title\">Company Name</div>\r\n                                <div>{customer?.b ? customer.billingcontact.company_name : '---'}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row mb-4\">\r\n                            <div className=\"col-md-6 col-12\">\r\n                                <div className=\"kt_detail__item_title\">Billing Address 1</div>\r\n                                <div>{customer?.billingcontact ? customer.billingcontact.billing_address_one : '---'}</div>\r\n                            </div>\r\n                            <div className=\"col-md-6 col-12\">\r\n                                <div className=\"kt_detail__item_title\">Billing Address 2</div>\r\n                                <div>{customer?.billingcontact ? customer.billingcontact.billing_address_two : '---'}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row mb-4\">\r\n                            <div className=\"col-md-6 col-12\">\r\n                                <div className=\"kt_detail__item_title\">Zip Code</div>\r\n                                <div>{customer?.billingcontact ? customer.billingcontact.zip_code : '---'}</div>\r\n                            </div>\r\n                            <div className=\"col-md-6 col-12\">\r\n                                <div className=\"kt_detail__item_title\">Country</div>\r\n                                <div>{customer?.billingcontact ? customer.billingcontact.country_name : '---'}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row mb-4\">\r\n                            <div className=\"col-md-6 col-12\">\r\n                                <div className=\"kt_detail__item_title\">Contact Person</div>\r\n                                <div>{customer?.billingcontact ? customer.billingcontact.contact_person : '---'}</div>\r\n                            </div>\r\n                        </div>\r\n                        <br/>\r\n                        <div className=\"row\"><div className=\"col-12\"> <h4>Shipping Address </h4> </div></div>\r\n                        <hr/>\r\n                        <div className=\"row mb-4\">\r\n                            <div className=\"col-md-6 col-12\">\r\n                                <div className=\"kt_detail__item_title\">Email</div>\r\n                                <div>{customer?.shippingcontact ? customer.shippingcontact.email : '---'}</div>\r\n                            </div>\r\n                            <div className=\"col-md-6 col-12\">\r\n                                <div className=\"kt_detail__item_title\">Company Name</div>\r\n                                <div>{customer?.shippingcontact ? customer.shippingcontact.company_name : '---'}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row mb-4\">\r\n                            <div className=\"col-md-6 col-12\">\r\n                                <div className=\"kt_detail__item_title\">Billing Address 1</div>\r\n                                <div>{customer?.shippingcontact ? customer.shippingcontact.billing_address_one : '---'}</div>\r\n                            </div>\r\n                            <div className=\"col-md-6 col-12\">\r\n                                <div className=\"kt_detail__item_title\">Billing Address 2</div>\r\n                                <div>{customer?.shippingcontact ? customer.shippingcontact.billing_address_two : '---'}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row mb-4\">\r\n                            <div className=\"col-md-6 col-12\">\r\n                                <div className=\"kt_detail__item_title\">Zip Code</div>\r\n                                <div>{customer?.shippingcontact ? customer.shippingcontact.zip_code : '---'}</div>\r\n                            </div>\r\n                            <div className=\"col-md-6 col-12\">\r\n                                <div className=\"kt_detail__item_title\">Country</div>\r\n                                <div>{customer?.shippingcontact ? customer.shippingcontact.country_name : '---'}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row mb-4\">\r\n                            <div className=\"col-md-6 col-12\">\r\n                                <div className=\"kt_detail__item_title\">Contact Person</div>\r\n                                <div>{customer?.shippingcontact ? customer.shippingcontact.contact_person : '---'}</div>\r\n                            </div>\r\n                        </div>\r\n                        <hr/>\r\n                        <div className=\"row mb-4\">\r\n                            <div className=\"col-md-6 col-12\">\r\n                                <div className=\"kt_detail__item_title\">Date Created</div>\r\n                                <div>{getDateFormat(customer?.created_at)}</div>\r\n                            </div>\r\n                            <div className=\"col-md-6 col-12\">\r\n                                <div className=\"kt_detail__item_title\">Date Modified</div>\r\n                                <div>{getDateFormat(customer?.updated_at)}</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Grid>\r\n          </Grid>\r\n        </div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n}\r\n","import React, { Suspense } from \"react\";\r\nimport { Redirect, Switch } from \"react-router-dom\";\r\nimport { CustomersPage } from \"./CustomersPage\";\r\nimport { CustomerEdit } from \"./customer-edit/CustomerEdit\";\r\nimport { CustomerView } from \"./customer-view/CustomerView\";\r\nimport { LayoutSplashScreen, ContentRoute } from \"../../../../../_metronic/layout\";\r\nimport { ADMIN_ROUTE } from '../../../../pages/helper/api'\r\n\r\nexport default function CustomersPages() {\r\n  return (\r\n    <Suspense fallback={<LayoutSplashScreen />}>\r\n      <Switch>\r\n        <ContentRoute path={\"/\"+ADMIN_ROUTE+\"/customers/new\"} component={CustomerEdit} />\r\n        <ContentRoute\r\n          path={\"/\"+ADMIN_ROUTE+\"/customers/:id/edit\"}\r\n          component={CustomerEdit}\r\n        />\r\n        <ContentRoute\r\n          path={\"/\"+ADMIN_ROUTE+\"/customers/:id/view\"}\r\n          component={CustomerView}\r\n        />\r\n        <ContentRoute path={\"/\"+ADMIN_ROUTE+'/customers'} component={CustomersPage} />\r\n      </Switch>\r\n    </Suspense>\r\n  );\r\n}\r\n"],"sourceRoot":""}