{"version":3,"sources":["app/modules/ECommerce/_redux/specifications/specificationsActions.js","app/modules/ECommerce/_redux/specifications/specificationsCrud.js","app/modules/ECommerce/_redux/remarks/remarksActions.js","app/modules/ECommerce/_redux/remarks/remarksCrud.js","app/modules/ECommerce/pages/products/products-loading-dialog/ProductsLoadingDialog.js","app/modules/ECommerce/_redux/products/productsCrud.js","app/modules/ECommerce/_redux/products/productsActions.js","app/modules/ECommerce/pages/products/ProductsUIHelpers.js","app/modules/ECommerce/pages/products/ProductsUIContext.js","app/modules/ECommerce/pages/products/product-delete-dialog/ProductDeleteDialog.js","app/modules/ECommerce/pages/products/products-delete-dialog/ProductsDeleteDialog.js","app/modules/ECommerce/pages/products/products-fetch-dialog/ProductsFetchDialog.js","app/modules/ECommerce/pages/products/products-update-status-dialog/ProductsUpdateStatusDialog.js","app/modules/ECommerce/pages/products/products-filter/ProductsFilter.js","app/modules/ECommerce/pages/products/products-table/column-formatters/StatusColumnFormatter.js","app/modules/ECommerce/pages/products/products-table/column-formatters/ConditionColumnFormatter.js","app/modules/ECommerce/pages/products/products-table/column-formatters/ActionsColumnFormatter.js","app/modules/ECommerce/pages/products/products-table/ProductsTable.js","app/modules/ECommerce/pages/products/products-grouping/ProductsGrouping.js","app/modules/ECommerce/pages/products/ProductsCard.js","app/modules/ECommerce/pages/products/ProductsPage.js","../node_modules/@material-ui/core/esm/SvgIcon/SvgIcon.js","../node_modules/@material-ui/icons/esm/CloudUpload.js","../node_modules/@material-ui/icons/esm/utils/createSvgIcon.js","../node_modules/@material-ui/core/esm/Button/Button.js","app/modules/ECommerce/pages/products/product-edit/ProductEditForm.js","app/modules/ECommerce/pages/products/product-specifications/SpecificationsUIHelper.js","app/modules/ECommerce/pages/products/product-specifications/SpecificationsUIContext.js","app/modules/ECommerce/pages/products/product-specifications/specification-edit-dialog/SpecificationEditForm.js","app/modules/ECommerce/pages/products/product-remarks/RemarksUIContext.js","app/modules/ECommerce/pages/products/product-remarks/remark-edit-dialog/RemarkEditForm.js","app/modules/ECommerce/pages/products/product-edit/ProductEdit.js","app/modules/ECommerce/pages/products/ProductsPages.js"],"names":["actions","specificationsSlice","fetchSpecifications","queryParams","productId","dispatch","startCall","callType","callTypes","list","axios","post","requestFromServer","then","response","data","totalCount","entities","specificationsFetched","catch","error","clientMessage","catchError","fetchSpecification","id","action","specificationId","get","specification","specificationFetched","specificationForEdit","undefined","deleteSpecification","delete","specificationDeleted","createSpecification","specificationForCreation","specificationCreated","updateSpecification","put","specificationUpdated","deleteSpecifications","ids","specificationsDeleted","remarksSlice","fetchRemarks","remarksFetched","fetchRemark","remarkId","remark","remarkFetched","remarkForEdit","deleteRemark","remarkDeleted","createRemark","remarkForCreation","remarkCreated","updateRemark","remarkUpdated","deleteRemarks","console","log","remarksDeleted","ProductsLoadingDialog","isLoading","useSelector","state","products","listLoading","shallowEqual","useEffect","text","PRODUCTS_URL","API_URL","productsSlice","fetchProducts","filter","params","count","results","productsFetched","fetchProduct","product","supplier","product_manufacturer","product_category","productFetched","productForEdit","deleteProduct","productDeleted","createProduct","productForCreation","productCreated","updateProduct","productUpdated","updateProductsStatus","status","productsStatusUpdated","deleteProducts","productsDeleted","ProductStatusCssClasses","ProductStatusTitles","ProductConditionCssClasses","ProductConditionTitles","YES_NO_OPTIONS","UOM_CHOICES","defaultSorted","dataField","order","sizePerPageList","value","initialFilter","model","manufacture","VINCode","sortOrder","sortField","pageNumber","pageSize","ProductsUIContext","createContext","useProductsUIContext","useContext","Consumer","ProductsUIProvider","productsUIEvents","children","useState","setQueryParamsBase","setIds","setQueryParams","useCallback","nextQueryParams","prevQueryParams","isFunction","isEqual","newProductButtonClick","openEditProductPage","openDeleteProductDialog","openDeleteProductsDialog","openFetchProductsDialog","openUpdateProductsStatusDialog","Provider","ProductDeleteDialog","show","onHide","productsUIContext","productsUIProps","useMemo","useDispatch","actionsLoading","Modal","aria-labelledby","variant","Header","closeButton","Title","Body","Footer","type","onClick","className","ProductsDeleteDialog","length","selectedProducts","_products","forEach","find","el","push","ProductsFetchDialog","map","key","style","width","ProductsUpdateStatusDialog","setStatus","onChange","e","target","ProductsFilter","applyFilter","values","newQueryParams","condition","hazmat","unit_of_measure","hot_sale_item","searchText","search","prepareFilter","initialValues","onSubmit","handleSubmit","handleBlur","setFieldValue","handleChange","name","placeholder","onBlur","i","opt","StatusColumnFormatter","cellContent","row","ConditionColumnFormatter","toUpperCase","ActionsColumnFormatter","rowIndex","OverlayTrigger","overlay","Tooltip","src","toAbsoluteUrl","ProductsTable","currentState","columns","sort","sortCaret","formatter","columnFormatters","formatExtraData","classes","headerClasses","minWidth","paginationOptions","custom","totalSize","uiHelpers","sizePerPage","page","pagination","paginationFactory","paginationProps","paginationTableProps","wrapperClasses","bootstrap4","bordered","remote","keyField","onTableChange","getHandlerTableChange","selectRow","getSelectRow","ProductsGrouping","ProductsCard","inputFile","createRef","title","current","click","display","ref","ProductsPage","history","ADMIN_ROUTE","path","match","props","_props$color","color","_props$component","component","Component","_props$fontSize","fontSize","htmlColor","titleAccess","_props$viewBox","viewBox","other","root","concat","capitalize","focusable","role","muiName","withStyles","theme","userSelect","height","fill","flexShrink","typography","pxToRem","transition","transitions","create","duration","shorter","colorPrimary","palette","primary","main","colorSecondary","secondary","colorAction","active","colorError","colorDisabled","disabled","fontSizeInherit","fontSizeSmall","fontSizeLarge","displayName","memo","forwardRef","createElement","d","_props$disabled","_props$disableElevati","disableElevation","_props$disableFocusRi","disableFocusRipple","endIconProp","endIcon","focusVisibleClassName","_props$fullWidth","fullWidth","_props$size","size","startIconProp","startIcon","_props$type","_props$variant","ButtonBase","colorInherit","focusRipple","focusVisible","label","button","boxSizing","padding","borderRadius","shape","short","textDecoration","backgroundColor","hoverOpacity","alignItems","justifyContent","textPrimary","textSecondary","outlined","border","disabledBackground","outlinedPrimary","outlinedSecondary","contained","getContrastText","grey","boxShadow","shadows","A100","containedPrimary","contrastText","dark","containedSecondary","borderColor","textSizeSmall","textSizeLarge","outlinedSizeSmall","outlinedSizeLarge","containedSizeSmall","containedSizeLarge","sizeSmall","sizeLarge","marginRight","marginLeft","iconSizeSmall","iconSizeMedium","iconSizeLarge","CreatableAsyncPaginate","withAsyncPaginate","Creatable","ProductEditSchema","Yup","part_number","min","max","required","ProductEditForm","btnRef","saveProduct","categories","setCategories","manufacturers","setManufacturers","suppliers","setSuppliers","modelsLoaded","setModelsLoaded","category","setCategory","manfacturer","setManfacturer","setSupplier","selectedFile","setSelectFile","previewFile","setPreviewFile","productImage","setProductImage","fileChangedHandler","event","file","files","URL","createObjectURL","size_c","toFixed","reader","FileReader","readAsDataURL","onloadend","result","models","company_name","ProductCategory","Manufacturer","Supplier","manf","product_image","filename_pieces","split","name_c","STATIC_URL","product_image_name","enableReinitialize","validationSchema","Input","onCreateOption","option","createCategory","isClearable","loadOptions","prevOptions","debounceTimeout","DROPDOWN_WAIT","createManfacturer","createSupplier","index","accept","htmlFor","CloudUpload","data-dz-name","data-dz-size","data-dz-errormessage","document","getElementById","data-dz-remove","SpecificationsUIContext","specId","RemarksUIContext","dueDate","nullable","initProduct","alt_part_number","description","tag_date","unit_price","quantity","turn_around_time","certification","ProductEdit","suhbeader","useSubheader","setTitle","_title","useRef","backToProductsList","ProductsPages","fallback"],"mappings":"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","file":"static/js/8.e0ef1c13.chunk.js","sourcesContent":["import * as requestFromServer from \"./specificationsCrud\";\r\nimport {specificationsSlice, callTypes} from \"./specificationsSlice\";\r\n\r\nconst {actions} = specificationsSlice;\r\n\r\nexport const fetchSpecifications = (queryParams, productId) => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.list }));\r\n  if (!productId) {\r\n    return dispatch(\r\n      actions.specificationsFetched({ totalCount: 0, entities: null })\r\n    );\r\n  }\r\n\r\n  return requestFromServer\r\n    .findSpecifications(queryParams, productId)\r\n    .then(response => {\r\n      const { totalCount, entities } = response.data;\r\n      dispatch(actions.specificationsFetched({ totalCount, entities }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't find specifications\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.list }));\r\n    });\r\n};\r\n\r\nexport const fetchSpecification = id => dispatch => {\r\n  if (!id) {\r\n    return dispatch(\r\n      actions.specificationFetched({ specificationForEdit: undefined })\r\n    );\r\n  }\r\n\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .getSpecificationById(id)\r\n    .then(response => {\r\n      const specification = response.data;\r\n      dispatch(\r\n        actions.specificationFetched({ specificationForEdit: specification })\r\n      );\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't find specification\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const deleteSpecification = id => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .deleteSpecification(id)\r\n    .then(response => {\r\n      dispatch(actions.specificationDeleted({ id }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't delete specification\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const createSpecification = specificationForCreation => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .createSpecification(specificationForCreation)\r\n    .then(response => {\r\n      const { specification } = response.data;\r\n      dispatch(actions.specificationCreated({ specification }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't create specification\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const updateSpecification = specification => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .updateSpecification(specification)\r\n    .then(() => {\r\n      dispatch(actions.specificationUpdated({ specification }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't update specification\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const deleteSpecifications = ids => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .deleteSpecifications(ids)\r\n    .then(() => {\r\n      dispatch(actions.specificationsDeleted({ ids }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't delete specifications\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n","import axios from \"axios\";\r\n\r\nexport const SPECIFICATIONS_URL = \"api/specifications\";\r\n\r\n// CREATE =>  POST: add a new specifications to the server\r\nexport function createSpecification(specification) {\r\n  return axios.post(SPECIFICATIONS_URL, { specification });\r\n}\r\n\r\n// READ\r\n// Server should return filtered specifications by productId\r\nexport function getAllProductSpecificationsByProductId(productId) {\r\n  return axios.get(`${SPECIFICATIONS_URL}?productId=${productId}`);\r\n}\r\n\r\nexport function getSpecificationById(specificationId) {\r\n  return axios.get(`${SPECIFICATIONS_URL}/${specificationId}`);\r\n}\r\n\r\n// Server should return sorted/filtered specifications and merge with items from state\r\n// TODO: Change your URL to REAL API, right now URL is 'api/specificationsfind/{productId}'. Should be 'api/specifications/find/{productId}'!!!\r\nexport function findSpecifications(queryParams, productId) {\r\n  return axios.post(`${SPECIFICATIONS_URL}find/${productId}`, { queryParams });\r\n}\r\n\r\n// UPDATE => PUT: update the specification\r\nexport function updateSpecification(specification) {\r\n  return axios.put(`${SPECIFICATIONS_URL}/${specification.id}`, {\r\n    specification\r\n  });\r\n}\r\n\r\n// DELETE => delete the specification\r\nexport function deleteSpecification(specificationId) {\r\n  return axios.delete(`${SPECIFICATIONS_URL}/${specificationId}`);\r\n}\r\n\r\n// DELETE specifications by ids\r\nexport function deleteSpecifications(ids) {\r\n  return axios.post(`${SPECIFICATIONS_URL}/deleteSpecifications`, { ids });\r\n}\r\n","import * as requestFromServer from \"./remarksCrud\";\r\nimport {remarksSlice, callTypes} from \"./remarksSlice\";\r\n\r\nconst {actions} = remarksSlice;\r\n\r\nexport const fetchRemarks = (queryParams, productId) => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.list }));\r\n  if (!productId) {\r\n    return dispatch(actions.remarksFetched({ totalCount: 0, entities: null }));\r\n  }\r\n\r\n  return requestFromServer\r\n    .findRemarks(queryParams, productId)\r\n    .then(response => {\r\n      const { totalCount, entities } = response.data;\r\n      dispatch(actions.remarksFetched({ totalCount, entities }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't find remarks\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.list }));\r\n    });\r\n};\r\n\r\nexport const fetchRemark = id => dispatch => {\r\n  if (!id) {\r\n    return dispatch(actions.remarkFetched({ remarkForEdit: undefined }));\r\n  }\r\n\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .getRemarkById(id)\r\n    .then(response => {\r\n      const remark = response.data;\r\n      dispatch(actions.remarkFetched({ remarkForEdit: remark }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't find remark\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const deleteRemark = id => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .deleteRemark(id)\r\n    .then(response => {\r\n      dispatch(actions.remarkDeleted({ id }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't delete remark\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const createRemark = remarkForCreation => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .createRemark(remarkForCreation)\r\n    .then(response => {\r\n      const { remark } = response.data;\r\n      dispatch(actions.remarkCreated({ remark }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't create remark\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const updateRemark = remark => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .updateRemark(remark)\r\n    .then(() => {\r\n      dispatch(actions.remarkUpdated({ remark }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't update remark\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const deleteRemarks = ids => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .deleteRemarks(ids)\r\n    .then(() => {\r\n      console.log(\"delete return\");\r\n      dispatch(actions.remarksDeleted({ ids }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't delete remarks\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n","import axios from \"axios\";\r\n\r\nexport const REMARKS_URL = \"api/remarks\";\r\n\r\n// CREATE =>  POST: add a new remark to the server\r\nexport function createRemark(remark) {\r\n  return axios.post(REMARKS_URL, { remark });\r\n}\r\n\r\n// READ\r\n// Server should return filtered remarks by productId\r\nexport function getAllProductRemarksByProductId(productId) {\r\n  return axios.get(`${REMARKS_URL}?productId=${productId}`);\r\n}\r\n\r\nexport function getRemarkById(remarkId) {\r\n  return axios.get(`${REMARKS_URL}/${remarkId}`);\r\n}\r\n\r\n// Server should return sorted/filtered remarks and merge with items from state\r\n// TODO: Change your URL to REAL API, right now URL is 'api/remarksfind/{productId}'. Should be 'api/remarks/find/{productId}'!!!\r\nexport function findRemarks(queryParams, productId) {\r\n  return axios.post(`${REMARKS_URL}find/${productId}`, { queryParams });\r\n}\r\n\r\n// UPDATE => PUT: update the remark\r\nexport function updateRemark(remark) {\r\n  return axios.put(`${REMARKS_URL}/${remark.id}`, { remark });\r\n}\r\n\r\n// DELETE => delete the remark\r\nexport function deleteRemark(remarkId) {\r\n  return axios.delete(`${REMARKS_URL}/${remarkId}`);\r\n}\r\n\r\n// DELETE Remarks by ids\r\nexport function deleteRemarks(ids) {\r\n  return axios.post(`${REMARKS_URL}/deleteRemarks`, { ids });\r\n}\r\n","import React, {useEffect} from \"react\";\r\nimport {shallowEqual, useSelector} from \"react-redux\";\r\nimport {LoadingDialog} from \"../../../../../../_metronic/_partials/controls\";\r\n\r\nexport function ProductsLoadingDialog() {\r\n  const { isLoading } = useSelector(\r\n    state => ({ isLoading: state.products.listLoading }),\r\n    shallowEqual\r\n  );\r\n  useEffect(() => {}, [isLoading]);\r\n  return <LoadingDialog isLoading={isLoading} text=\"Loading ...\" />;\r\n}\r\n","import axios from \"axios\";\r\nimport { API_URL } from '../../../../pages/helper/api'\r\n\r\nexport const PRODUCTS_URL = API_URL + \"inventory\";\r\n\r\n// CREATE =>  POST: add a new product to the server\r\nexport function createProduct(product) {\r\n  return axios.post(PRODUCTS_URL+'/', { ...product });\r\n}\r\n\r\n// READ\r\nexport function getAllProducts({filter}) {\r\n  return axios.get(PRODUCTS_URL,  {\r\n    params: filter\r\n  });\r\n}\r\n\r\nexport function getProductById(productId) {\r\n  return axios.get(`${PRODUCTS_URL}/${productId}`);\r\n}\r\n\r\n// Method from server should return QueryResultsModel(items: any[], totalsCount: number)\r\n// items => filtered/sorted result\r\nexport function findProducts(queryParams) {\r\n  return axios.post(`${PRODUCTS_URL}/find`, { queryParams });\r\n}\r\n\r\n// UPDATE => PUT: update the procuct on the server\r\nexport function updateProduct(product) {\r\n  return axios.put(`${PRODUCTS_URL}/${product.id}/`, { ...product });\r\n}\r\n\r\n// UPDATE Status\r\nexport function updateStatusForProducts(ids, status) {\r\n  return axios.post(`${PRODUCTS_URL}/updateStatusForProducts`, {\r\n    ids,\r\n    status\r\n  });\r\n}\r\n\r\n// DELETE => delete the product from the server\r\nexport function deleteProduct(productId) {\r\n  return axios.delete(`${PRODUCTS_URL}/${productId}`);\r\n}\r\n\r\n// DELETE Products by ids\r\nexport function deleteProducts(ids) {\r\n  return axios.post(`${PRODUCTS_URL}/delete-all/`, { ids });\r\n}\r\n","import * as requestFromServer from \"./productsCrud\";\r\nimport {productsSlice, callTypes} from \"./productsSlice\";\r\n\r\nconst {actions} = productsSlice;\r\n\r\nexport const fetchProducts = queryParams => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.list }));\r\n  return requestFromServer\r\n    .getAllProducts(queryParams)\r\n    .then(response => {\r\n      const { count, results } = response.data;\r\n      dispatch(actions.productsFetched({ count, results }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't find products\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.list }));\r\n    });\r\n};\r\n\r\nexport const fetchProduct = id => dispatch => {\r\n  if (!id) {\r\n    return dispatch(actions.productFetched({ productForEdit: undefined }));\r\n  }\r\n\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .getProductById(id)\r\n    .then(response => {\r\n      const product = {\r\n        ...response.data, \r\n        supplier:response.data.supplier ? response.data.supplier.id : \"\",\r\n        product_manufacturer:response.data.product_manufacturer ? response.data.product_manufacturer.id : \"\",\r\n        product_category:response.data.product_category ? response.data.product_category.id : \"\",\r\n      };\r\n\r\n      dispatch(actions.productFetched({ productForEdit: product }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't find product\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const deleteProduct = id => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .deleteProduct(id)\r\n    .then(response => {\r\n      dispatch(actions.productDeleted({ id }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't delete product\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const createProduct = productForCreation => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .createProduct(productForCreation)\r\n    .then(response => {\r\n      const { data } = response;\r\n      dispatch(actions.productCreated({ product:data }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't create product\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const updateProduct = product => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  console.log('proudct', product);\r\n  return requestFromServer\r\n    .updateProduct(product)\r\n    .then(() => {\r\n      dispatch(actions.productUpdated({ product }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't update product\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const updateProductsStatus = (ids, status) => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .updateStatusForProducts(ids, status)\r\n    .then(() => {\r\n      dispatch(actions.productsStatusUpdated({ ids, status }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't update products status\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const deleteProducts = ids => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .deleteProducts(ids)\r\n    .then(() => {\r\n      dispatch(actions.productsDeleted({ ids }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't delete products\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n","export const ProductStatusCssClasses = [\"danger\", \"success\", \"info\", \"\"];\r\nexport const ProductStatusTitles = [\"Inactive\", \"Active\"];\r\nexport const ProductConditionCssClasses = [\"success\", \"danger\", \"\"];\r\nexport const ProductConditionTitles = ['NE','NS', 'SV', 'AR', 'FN', 'US', 'RP'];\r\nexport const YES_NO_OPTIONS = ['No','Yes'];\r\nexport const UOM_CHOICES = ['CM', 'Box', 'KG'];\r\nexport const defaultSorted = [{ dataField: \"id\", order: \"asc\" }];\r\nexport const sizePerPageList = [\r\n  { text: \"3\", value: 3 },\r\n  { text: \"5\", value: 5 },\r\n  { text: \"10\", value: 10 }\r\n];\r\nexport const initialFilter = {\r\n  filter: {\r\n    model: \"\",\r\n    manufacture: \"\",\r\n    VINCode: \"\"\r\n  },\r\n  sortOrder: \"asc\", // asc||desc\r\n  sortField: \"VINCode\",\r\n  pageNumber: 1,\r\n  pageSize: 10\r\n};\r\nexport const AVAILABLE_COLORS = [\r\n  \"Red\",\r\n  \"CadetBlue\",\r\n  \"Eagle\",\r\n  \"Gold\",\r\n  \"LightSlateGrey\",\r\n  \"RoyalBlue\",\r\n  \"Crimson\",\r\n  \"Blue\",\r\n  \"Sienna\",\r\n  \"Indigo\",\r\n  \"Green\",\r\n  \"Violet\",\r\n  \"GoldenRod\",\r\n  \"OrangeRed\",\r\n  \"Khaki\",\r\n  \"Teal\",\r\n  \"Purple\",\r\n  \"Orange\",\r\n  \"Pink\",\r\n  \"Black\",\r\n  \"DarkTurquoise\"\r\n];\r\n\r\nexport const AVAILABLE_MANUFACTURES = [\r\n  \"Pontiac\",\r\n  \"Kia\",\r\n  \"Lotus\",\r\n  \"Subaru\",\r\n  \"Jeep\",\r\n  \"Isuzu\",\r\n  \"Mitsubishi\",\r\n  \"Oldsmobile\",\r\n  \"Chevrolet\",\r\n  \"Chrysler\",\r\n  \"Audi\",\r\n  \"Suzuki\",\r\n  \"GMC\",\r\n  \"Cadillac\",\r\n  \"Infinity\",\r\n  \"Mercury\",\r\n  \"Dodge\",\r\n  \"Ram\",\r\n  \"Lexus\",\r\n  \"Lamborghini\",\r\n  \"Honda\",\r\n  \"Nissan\",\r\n  \"Ford\",\r\n  \"Hyundai\",\r\n  \"Saab\",\r\n  \"Toyota\"\r\n];\r\n","import React, { createContext, useContext, useState, useCallback } from \"react\";\r\nimport { isEqual, isFunction } from \"lodash\";\r\nimport { initialFilter } from \"./ProductsUIHelpers\";\r\n\r\nconst ProductsUIContext = createContext();\r\n\r\nexport function useProductsUIContext() {\r\n  return useContext(ProductsUIContext);\r\n}\r\n\r\nexport const ProductsUIConsumer = ProductsUIContext.Consumer;\r\n\r\nexport function ProductsUIProvider({ productsUIEvents, children }) {\r\n  const [queryParams, setQueryParamsBase] = useState(initialFilter);\r\n  const [ids, setIds] = useState([]);\r\n  const setQueryParams = useCallback((nextQueryParams) => {\r\n    setQueryParamsBase((prevQueryParams) => {\r\n      if (isFunction(nextQueryParams)) {\r\n        nextQueryParams = nextQueryParams(prevQueryParams);\r\n      }\r\n\r\n      if (isEqual(prevQueryParams, nextQueryParams)) {\r\n        return prevQueryParams;\r\n      }\r\n\r\n      return nextQueryParams;\r\n    });\r\n  }, []);\r\n\r\n  const value = {\r\n    queryParams,\r\n    setQueryParamsBase,\r\n    ids,\r\n    setIds,\r\n    setQueryParams,\r\n    newProductButtonClick: productsUIEvents.newProductButtonClick,\r\n    openEditProductPage: productsUIEvents.openEditProductPage,\r\n    openDeleteProductDialog: productsUIEvents.openDeleteProductDialog,\r\n    openDeleteProductsDialog: productsUIEvents.openDeleteProductsDialog,\r\n    openFetchProductsDialog: productsUIEvents.openFetchProductsDialog,\r\n    openUpdateProductsStatusDialog:\r\n      productsUIEvents.openUpdateProductsStatusDialog,\r\n  };\r\n\r\n  return (\r\n    <ProductsUIContext.Provider value={value}>\r\n      {children}\r\n    </ProductsUIContext.Provider>\r\n  );\r\n}\r\n","/* eslint-disable no-restricted-imports */\r\nimport React, { useEffect, useMemo } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport { ModalProgressBar } from \"../../../../../../_metronic/_partials/controls\";\r\nimport * as actions from \"../../../_redux/products/productsActions\";\r\nimport { useProductsUIContext } from \"../ProductsUIContext\";\r\n\r\nexport function ProductDeleteDialog({ id, show, onHide }) {\r\n  // Products UI Context\r\n  const productsUIContext = useProductsUIContext();\r\n  const productsUIProps = useMemo(() => {\r\n    return {\r\n      setIds: productsUIContext.setIds,\r\n      queryParams: productsUIContext.queryParams,\r\n    };\r\n  }, [productsUIContext]);\r\n\r\n  // Products Redux state\r\n  const dispatch = useDispatch();\r\n  const { isLoading } = useSelector(\r\n    (state) => ({ isLoading: state.products.actionsLoading }),\r\n    shallowEqual\r\n  );\r\n\r\n  // if !id we should close modal\r\n  useEffect(() => {\r\n    if (!id) {\r\n      onHide();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [id]);\r\n\r\n  // looking for loading/dispatch\r\n  useEffect(() => {}, [isLoading, dispatch]);\r\n\r\n  const deleteProduct = () => {\r\n    // server request for deleting product by id\r\n    dispatch(actions.deleteProduct(id)).then(() => {\r\n      // refresh list after deletion\r\n      dispatch(actions.fetchProducts(productsUIProps.queryParams));\r\n      // clear selections list\r\n      productsUIProps.setIds([]);\r\n      // closing delete modal\r\n      onHide();\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      show={show}\r\n      onHide={onHide}\r\n      aria-labelledby=\"example-modal-sizes-title-lg\"\r\n    >\r\n      {isLoading && <ModalProgressBar variant=\"query\" />}\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n          Product Delete\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        {!isLoading && (\r\n          <span>Are you sure to permanently delete this product?</span>\r\n        )}\r\n        {isLoading && <span>Product is deleting...</span>}\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            onClick={onHide}\r\n            className=\"btn btn-light btn-elevate\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <> </>\r\n          <button\r\n            type=\"button\"\r\n            onClick={deleteProduct}\r\n            className=\"btn btn-danger btn-elevate\"\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n","/* eslint-disable no-restricted-imports */\r\nimport React, { useEffect, useMemo } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport { ModalProgressBar } from \"../../../../../../_metronic/_partials/controls\";\r\nimport * as actions from \"../../../_redux/products/productsActions\";\r\nimport { useProductsUIContext } from \"../ProductsUIContext\";\r\n\r\nexport function ProductsDeleteDialog({ show, onHide }) {\r\n  // Products UI Context\r\n  const productsUIContext = useProductsUIContext();\r\n  const productsUIProps = useMemo(() => {\r\n    return {\r\n      ids: productsUIContext.ids,\r\n      setIds: productsUIContext.setIds,\r\n      queryParams: productsUIContext.queryParams,\r\n    };\r\n  }, [productsUIContext]);\r\n\r\n  // Products Redux state\r\n  const dispatch = useDispatch();\r\n  const { isLoading } = useSelector(\r\n    (state) => ({ isLoading: state.products.actionsLoading }),\r\n    shallowEqual\r\n  );\r\n\r\n  // looking for loading/dispatch\r\n  useEffect(() => {}, [isLoading, dispatch]);\r\n\r\n  // if there weren't selected products we should close modal\r\n  useEffect(() => {\r\n    if (!productsUIProps.ids || productsUIProps.ids.length === 0) {\r\n      onHide();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [productsUIProps.ids]);\r\n\r\n  const deleteProducts = () => {\r\n    // server request for deleting product by seleted ids\r\n    dispatch(actions.deleteProducts(productsUIProps.ids)).then(() => {\r\n      // refresh list after deletion\r\n      dispatch(actions.fetchProducts(productsUIProps.queryParams)).then(() => {\r\n        // clear selections list\r\n        productsUIProps.setIds([]);\r\n        // closing delete modal\r\n        onHide();\r\n      });\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      show={show}\r\n      onHide={onHide}\r\n      aria-labelledby=\"example-modal-sizes-title-lg\"\r\n    >\r\n      {isLoading && <ModalProgressBar />}\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n          Products Delete\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        {!isLoading && (\r\n          <span>Are you sure to permanently delete selected products?</span>\r\n        )}\r\n        {isLoading && <span>Products are deleting...</span>}\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            onClick={onHide}\r\n            className=\"btn btn-light btn-elevate\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <> </>\r\n          <button\r\n            type=\"button\"\r\n            onClick={deleteProducts}\r\n            className=\"btn btn-danger btn-elevate\"\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { useEffect, useMemo } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { shallowEqual, useSelector } from \"react-redux\";\r\nimport { ProductStatusCssClasses } from \"../ProductsUIHelpers\";\r\nimport { useProductsUIContext } from \"../ProductsUIContext\";\r\n\r\nconst selectedProducts = (entities, ids) => {\r\n  const _products = [];\r\n  ids.forEach((id) => {\r\n    const product = entities.find((el) => el.id === id);\r\n    if (product) {\r\n      _products.push(product);\r\n    }\r\n  });\r\n  return _products;\r\n};\r\n\r\nexport function ProductsFetchDialog({ show, onHide }) {\r\n  // Products UI Context\r\n  const productsUIContext = useProductsUIContext();\r\n  const productsUIProps = useMemo(() => {\r\n    return {\r\n      ids: productsUIContext.ids,\r\n      queryParams: productsUIContext.queryParams,\r\n    };\r\n  }, [productsUIContext]);\r\n\r\n  // Products Redux state\r\n  const { products } = useSelector(\r\n    (state) => ({\r\n      products: selectedProducts(state.products.entities, productsUIProps.ids),\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  // if there weren't selected ids we should close modal\r\n  useEffect(() => {\r\n    if (!productsUIProps.ids || productsUIProps.ids.length === 0) {\r\n      onHide();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [productsUIProps.ids]);\r\n\r\n  return (\r\n    <Modal\r\n      show={show}\r\n      onHide={onHide}\r\n      aria-labelledby=\"example-modal-sizes-title-lg\"\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n          Fetch selected elements\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <div className=\"list-timeline list-timeline-skin-light padding-30\">\r\n          <div className=\"list-timeline-items\">\r\n            {products.map((product) => (\r\n              <div className=\"list-timeline-item mb-3\" key={product.id}>\r\n                <span className=\"list-timeline-text\">\r\n                  <span\r\n                    className={`label label-lg label-light-${\r\n                      ProductStatusCssClasses[product.status]\r\n                    } label-inline`}\r\n                    style={{ width: \"60px\" }}\r\n                  >\r\n                    ID: {product.id}\r\n                  </span>{\" \"}\r\n                  <span className=\"ml-5\">\r\n                    {product.manufacture}, {product.model}\r\n                  </span>\r\n                </span>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            onClick={onHide}\r\n            className=\"btn btn-light btn-elevate\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <> </>\r\n          <button\r\n            type=\"button\"\r\n            onClick={onHide}\r\n            className=\"btn btn-primary btn-elevate\"\r\n          >\r\n            Ok\r\n          </button>\r\n        </div>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { useEffect, useState, useMemo } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport { ProductStatusCssClasses } from \"../ProductsUIHelpers\";\r\nimport * as actions from \"../../../_redux/products/productsActions\";\r\nimport { useProductsUIContext } from \"../ProductsUIContext\";\r\n\r\nconst selectedProducts = (entities, ids) => {\r\n  const _products = [];\r\n  ids.forEach((id) => {\r\n    const product = entities.find((el) => el.id === id);\r\n    if (product) {\r\n      _products.push(product);\r\n    }\r\n  });\r\n  return _products;\r\n};\r\n\r\nexport function ProductsUpdateStatusDialog({ show, onHide }) {\r\n  // Products UI Context\r\n  const productsUIContext = useProductsUIContext();\r\n  const productsUIProps = useMemo(() => {\r\n    return {\r\n      ids: productsUIContext.ids,\r\n      setIds: productsUIContext.setIds,\r\n      queryParams: productsUIContext.queryParams,\r\n    };\r\n  }, [productsUIContext]);\r\n\r\n  // Products Redux state\r\n  const { products, isLoading } = useSelector(\r\n    (state) => ({\r\n      products: selectedProducts(state.products.entities, productsUIProps.ids),\r\n      isLoading: state.products.actionsLoading,\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  // if there weren't selected products we should close modal\r\n  useEffect(() => {\r\n    if (productsUIProps.ids || productsUIProps.ids.length === 0) {\r\n      onHide();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [productsUIProps.ids]);\r\n\r\n  const [status, setStatus] = useState(0);\r\n\r\n  const dispatch = useDispatch();\r\n  const updateStatus = () => {\r\n    // server request for updateing product by ids\r\n    dispatch(actions.updateProductsStatus(productsUIProps.ids, status)).then(\r\n      () => {\r\n        // refresh list after deletion\r\n        dispatch(actions.fetchProducts(productsUIProps.queryParams)).then(\r\n          () => {\r\n            // clear selections list\r\n            productsUIProps.setIds([]);\r\n            // closing delete modal\r\n            onHide();\r\n          }\r\n        );\r\n      }\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      show={show}\r\n      onHide={onHide}\r\n      aria-labelledby=\"example-modal-sizes-title-lg\"\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n          Status has been updated for selected products\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body className=\"overlay overlay-block cursor-default\">\r\n        {isLoading && (\r\n          <div className=\"overlay-layer bg-transparent\">\r\n            <div className=\"spinner spinner-lg spinner-warning\" />\r\n          </div>\r\n        )}\r\n        <div className=\"list-timeline list-timeline-skin-light padding-30\">\r\n          <div className=\"list-timeline-items\">\r\n            {products.map((product) => (\r\n              <div className=\"list-timeline-item mb-3\" key={product.id}>\r\n                <span className=\"list-timeline-text\">\r\n                  <span\r\n                    className={`label label-lg label-light-${\r\n                      ProductStatusCssClasses[product.status]\r\n                    } label-inline`}\r\n                    style={{ width: \"60px\" }}\r\n                  >\r\n                    ID: {product.id}\r\n                  </span>{\" \"}\r\n                  <span className=\"ml-5\">\r\n                    {product.manufacture}, {product.model}\r\n                  </span>\r\n                </span>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </Modal.Body>\r\n      <Modal.Footer className=\"form\">\r\n        <div className=\"form-group\">\r\n          <select\r\n            className={`form-control ${ProductStatusCssClasses[status]}`}\r\n            value={status}\r\n            onChange={(e) => setStatus(+e.target.value)}\r\n          >\r\n            <option value=\"0\">Selling</option>\r\n            <option value=\"1\">Sold</option>\r\n          </select>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <button\r\n            type=\"button\"\r\n            onClick={onHide}\r\n            className=\"btn btn-light btn-elevate\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <> </>\r\n          <button\r\n            type=\"button\"\r\n            onClick={updateStatus}\r\n            className=\"btn btn-primary btn-elevate\"\r\n          >\r\n            Update Status\r\n          </button>\r\n        </div>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { useMemo } from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport { isEqual } from \"lodash\";\r\nimport { useProductsUIContext } from \"../ProductsUIContext\";\r\nimport {ProductConditionTitles, YES_NO_OPTIONS, UOM_CHOICES} from \"../ProductsUIHelpers\";\r\n\r\nconst prepareFilter = (queryParams, values) => {\r\n  const { status, condition, hazmat, unit_of_measure, hot_sale_item, searchText } = values;\r\n  const newQueryParams = { ...queryParams };\r\n  const filter = {};\r\n  // Filter by status\r\n  filter.status = status !== \"\" ? status : undefined;\r\n  // Filter by condition\r\n  filter.condition = condition !== \"\" ? condition : undefined;\r\n  filter.unit_of_measure = unit_of_measure !== \"\" ? unit_of_measure : undefined;\r\n  filter.hot_sale_item = hot_sale_item !== \"\" ? hot_sale_item : undefined;\r\n  filter.hazmat = hazmat !== \"\" ? hazmat : undefined;\r\n  // Filter by all fields\r\n  filter.search = searchText;\r\n\r\n  newQueryParams.filter = filter;\r\n  return newQueryParams;\r\n};\r\n\r\nexport function ProductsFilter({ listLoading }) {\r\n  // Products UI Context\r\n  const productsUIContext = useProductsUIContext();\r\n  const productsUIProps = useMemo(() => {\r\n    return {\r\n      setQueryParams: productsUIContext.setQueryParams,\r\n      queryParams: productsUIContext.queryParams,\r\n    };\r\n  }, [productsUIContext]);\r\n\r\n  const applyFilter = (values) => {\r\n    const newQueryParams = prepareFilter(productsUIProps.queryParams, values);\r\n    if (!isEqual(newQueryParams, productsUIProps.queryParams)) {\r\n      newQueryParams.pageNumber = 1;\r\n      productsUIProps.setQueryParams(newQueryParams);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Formik\r\n        initialValues={{\r\n          status: \"\", // values => All=\"\"/Selling=0/Sold=1\r\n          condition: \"\", // values => All=\"\"/New=0/Used=1\r\n          searchText: \"\", \r\n          hazmat:\"\", \r\n          unit_of_measure:\"\", \r\n          hot_sale_item:\"\",\r\n        }}\r\n        onSubmit={(values) => {\r\n          applyFilter(values);\r\n        }}\r\n      >\r\n        {({\r\n          values,\r\n          handleSubmit,\r\n          handleBlur,\r\n          handleChange,\r\n          setFieldValue,\r\n        }) => (\r\n          <form onSubmit={handleSubmit} className=\"form form-label-right\">\r\n            <div className=\"form-group row\">\r\n              <div className=\"col-lg-2\">\r\n                <select\r\n                  className=\"form-control\"\r\n                  name=\"status\"\r\n                  placeholder=\"Filter by Status\"\r\n                  onChange={(e) => {\r\n                    setFieldValue(\"status\", e.target.value);\r\n                    handleSubmit();\r\n                  }}\r\n                  onBlur={handleBlur}\r\n                  value={values.status}\r\n                >\r\n                  <option value=\"\">All</option>\r\n                  <option value=\"0\">Inactive</option>\r\n                  <option value=\"1\">Active</option>\r\n                </select>\r\n                <small className=\"form-text text-muted\">\r\n                  <b>Filter</b> by Status\r\n                </small>\r\n              </div>\r\n              <div className=\"col-lg-2\">\r\n                <select\r\n                  className=\"form-control\"\r\n                  placeholder=\"Filter by condition\"\r\n                  name=\"condition\"\r\n                  onBlur={handleBlur}\r\n                  onChange={(e) => {\r\n                    setFieldValue(\"condition\", e.target.value);\r\n                    handleSubmit();\r\n                  }}\r\n                  value={values.condition}\r\n                >\r\n                  <option value=\"\">All</option>\r\n                  {ProductConditionTitles.map((condition, i) => \r\n                    <option key={i} value={condition}>{condition}</option>)\r\n                  }\r\n                </select>\r\n                <small className=\"form-text text-muted\">\r\n                  <b>Filter</b> by Condition\r\n                </small>\r\n              </div>\r\n              <div className=\"col-lg-2\">\r\n                <select\r\n                  className=\"form-control\"\r\n                  placeholder=\"Filter by UOM\"\r\n                  name=\"unit_of_measure\"\r\n                  onBlur={handleBlur}\r\n                  onChange={(e) => {\r\n                    setFieldValue(\"unit_of_measure\", e.target.value);\r\n                    handleSubmit();\r\n                  }}\r\n                  value={values.unit_of_measure}\r\n                >\r\n                  <option value=\"\">All</option>\r\n                  {UOM_CHOICES.map((opt, i) => \r\n                    <option key={i} value={opt}>{opt}</option>)\r\n                  }\r\n                </select>\r\n                <small className=\"form-text text-muted\">\r\n                  <b>Filter</b> by UOM\r\n                </small>\r\n              </div>\r\n              <div className=\"col-lg-2\">\r\n                <select\r\n                  className=\"form-control\"\r\n                  placeholder=\"Filter by Hazmat\"\r\n                  name=\"hazmat\"\r\n                  onBlur={handleBlur}\r\n                  onChange={(e) => {\r\n                    setFieldValue(\"hazmat\", e.target.value);\r\n                    handleSubmit();\r\n                  }}\r\n                  value={values.hazmat}\r\n                >\r\n                  <option value=\"\">All</option>\r\n                  {YES_NO_OPTIONS.map((opt, i) => \r\n                    <option key={i} value={opt}>{opt}</option>)\r\n                  }\r\n                </select>\r\n                <small className=\"form-text text-muted\">\r\n                  <b>Filter</b> by Hazmat\r\n                </small>\r\n              </div>\r\n              <div className=\"col-lg-2\">\r\n                <select\r\n                  className=\"form-control\"\r\n                  placeholder=\"Filter by Hot Sale Item\"\r\n                  name=\"hot_sale_item\"\r\n                  onBlur={handleBlur}\r\n                  onChange={(e) => {\r\n                    setFieldValue(\"hot_sale_item\", e.target.value);\r\n                    handleSubmit();\r\n                  }}\r\n                  value={values.hot_sale_item}\r\n                >\r\n                  <option value=\"\">All</option>\r\n                  {YES_NO_OPTIONS.map((opt, i) => \r\n                    <option key={i} value={opt}>{opt}</option>)\r\n                  }\r\n                </select>\r\n                <small className=\"form-text text-muted\">\r\n                  <b>Filter</b> by Hot Sale Item\r\n                </small>\r\n              </div>\r\n              <div className=\"col-lg-2\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"searchText\"\r\n                  placeholder=\"Search\"\r\n                  onBlur={handleBlur}\r\n                  value={values.searchText}\r\n                  onChange={(e) => {\r\n                    setFieldValue(\"searchText\", e.target.value);\r\n                    handleSubmit();\r\n                  }}\r\n                />\r\n                <small className=\"form-text text-muted\">\r\n                  <b>Search</b> in all fields\r\n                </small>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  ProductStatusCssClasses,\r\n  ProductStatusTitles\r\n} from \"../../ProductsUIHelpers\";\r\n\r\nexport const StatusColumnFormatter = (cellContent, row) => (\r\n  <span\r\n    className={`label label-lg label-light-${\r\n      ProductStatusCssClasses[row.status]\r\n    } label-inline`}\r\n  >\r\n    {ProductStatusTitles[row.status]}\r\n  </span>\r\n);\r\n","import React from \"react\";\r\nimport {\r\n  ProductConditionCssClasses,\r\n  ProductConditionTitles\r\n} from \"../../ProductsUIHelpers\";\r\n\r\nexport const ConditionColumnFormatter = (cellContent, row) => (\r\n  <>\r\n    <span\r\n      className={`badge badge-${\r\n        'info'\r\n      } badge-dot`}\r\n    ></span>\r\n    &nbsp;\r\n    <span\r\n      className={`font-bold font-${\r\n        ProductConditionCssClasses[row.condition]\r\n      }`}\r\n    >\r\n      {row.condition.toUpperCase()}\r\n    </span>\r\n  </>\r\n);\r\n","/* eslint-disable no-script-url,jsx-a11y/anchor-is-valid */\r\nimport React from \"react\";\r\nimport { OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\nimport SVG from \"react-inlinesvg\";\r\nimport { toAbsoluteUrl } from \"../../../../../../../_metronic/_helpers\";\r\n\r\nexport const ActionsColumnFormatter = (\r\n  cellContent,\r\n  row,\r\n  rowIndex,\r\n  { openEditProductPage, openDeleteProductDialog }\r\n) => (\r\n  <>\r\n    <OverlayTrigger\r\n      overlay={<Tooltip id=\"products-edit-tooltip\">Edit product</Tooltip>}\r\n    >\r\n      <a\r\n        className=\"btn btn-icon btn-light btn-hover-info btn-sm mx-3\"\r\n        onClick={() => openEditProductPage(row.id)}\r\n      >\r\n        <span className=\"svg-icon svg-icon-md svg-icon-info\">\r\n          <SVG\r\n            src={toAbsoluteUrl(\"/static/media/svg/icons/Communication/Write.svg\")}\r\n          />\r\n        </span>\r\n      </a>\r\n    </OverlayTrigger>\r\n\r\n    <> </>\r\n    <OverlayTrigger\r\n      overlay={<Tooltip id=\"products-delete-tooltip\">Delete product</Tooltip>}\r\n    >\r\n      <a\r\n        className=\"btn btn-icon btn-light btn-hover-danger btn-sm\"\r\n        onClick={() => openDeleteProductDialog(row.id)}\r\n      >\r\n        <span className=\"svg-icon svg-icon-md svg-icon-danger\">\r\n          <SVG src={toAbsoluteUrl(\"/static/media/svg/icons/General/Trash.svg\")} />\r\n        </span>\r\n      </a>\r\n    </OverlayTrigger>\r\n  </>\r\n);\r\n","// React bootstrap table next =>\r\n// DOCS: https://react-bootstrap-table.github.io/react-bootstrap-table2/docs/\r\n// STORYBOOK: https://react-bootstrap-table.github.io/react-bootstrap-table2/storybook/index.html\r\nimport React, { useEffect, useMemo } from \"react\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory, {\r\n  PaginationProvider,\r\n} from \"react-bootstrap-table2-paginator\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport * as actions from \"../../../_redux/products/productsActions\";\r\nimport * as uiHelpers from \"../ProductsUIHelpers\";\r\nimport {\r\n  getSelectRow,\r\n  getHandlerTableChange,\r\n  NoRecordsFoundMessage,\r\n  PleaseWaitMessage,\r\n  sortCaret,\r\n} from \"../../../../../../_metronic/_helpers\";\r\nimport * as columnFormatters from \"./column-formatters\";\r\nimport { Pagination } from \"../../../../../../_metronic/_partials/controls\";\r\nimport { useProductsUIContext } from \"../ProductsUIContext\";\r\n\r\nexport function ProductsTable() {\r\n  // Products UI Context\r\n  const productsUIContext = useProductsUIContext();\r\n  const productsUIProps = useMemo(() => {\r\n    return {\r\n      ids: productsUIContext.ids,\r\n      setIds: productsUIContext.setIds,\r\n      queryParams: productsUIContext.queryParams,\r\n      setQueryParams: productsUIContext.setQueryParams,\r\n      openEditProductPage: productsUIContext.openEditProductPage,\r\n      openDeleteProductDialog: productsUIContext.openDeleteProductDialog,\r\n    };\r\n  }, [productsUIContext]);\r\n\r\n  // Getting curret state of products list from store (Redux)\r\n  const { currentState } = useSelector(\r\n    (state) => ({ currentState: state.products }),\r\n    shallowEqual\r\n  );\r\n  const { totalCount, entities, listLoading } = currentState;\r\n  // Products Redux state\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    // clear selections list\r\n    productsUIProps.setIds([]);\r\n    // server call by queryParams\r\n    dispatch(actions.fetchProducts(productsUIProps.queryParams));\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [productsUIProps.queryParams, dispatch]);\r\n  // Table columns\r\n  const columns = [\r\n    {\r\n      dataField: \"part_number\",\r\n      text: \"PN\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n    },\r\n    {\r\n      dataField: \"alt_part_number\",\r\n      text: \"Alt PN\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n    },\r\n    {\r\n      dataField: \"condition\",\r\n      text: \"Condition\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      formatter: columnFormatters.ConditionColumnFormatter,\r\n    },\r\n    {\r\n      dataField: \"product_category.name\",\r\n      text: \"Category\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n    },\r\n    {\r\n      dataField: \"product_manufacturer.name\",\r\n      text: \"Manufacturer\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n    },\r\n    {\r\n      dataField: \"supplier.company_name\",\r\n      text: \"Supplier\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n    },\r\n    {\r\n      dataField: \"status\",\r\n      text: \"Status\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      formatter: columnFormatters.StatusColumnFormatter,\r\n    },\r\n    {\r\n      dataField: \"unit_price\",\r\n      text: \"Unit Price\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n    },\r\n    {\r\n      dataField: \"action\",\r\n      text: \"Actions\",\r\n      formatter: columnFormatters.ActionsColumnFormatter,\r\n      formatExtraData: {\r\n        openEditProductPage: productsUIProps.openEditProductPage,\r\n        openDeleteProductDialog: productsUIProps.openDeleteProductDialog,\r\n      },\r\n      classes: \"text-right pr-0\",\r\n      headerClasses: \"text-right pr-3\",\r\n      style: {\r\n        minWidth: \"100px\",\r\n      },\r\n    },\r\n  ];\r\n  // Table pagination properties\r\n  const paginationOptions = {\r\n    custom: true,\r\n    totalSize: totalCount,\r\n    sizePerPageList: uiHelpers.sizePerPageList,\r\n    sizePerPage: productsUIProps.queryParams.pageSize,\r\n    page: productsUIProps.queryParams.pageNumber,\r\n  };\r\n  let data = [];\r\n  return (\r\n    <>\r\n      <PaginationProvider pagination={paginationFactory(paginationOptions)}>\r\n        {({ paginationProps, paginationTableProps }) => {\r\n          return (\r\n            <Pagination\r\n              isLoading={listLoading}\r\n              paginationProps={paginationProps}\r\n            >\r\n              <BootstrapTable\r\n                wrapperClasses=\"table-responsive\"\r\n                classes=\"table table-head-custom table-vertical-center overflow-hidden\"\r\n                bootstrap4\r\n                bordered={false}\r\n                remote\r\n                keyField=\"id\"\r\n                data= {entities}\r\n                columns={columns}\r\n                defaultSorted={uiHelpers.defaultSorted}\r\n                onTableChange={getHandlerTableChange(\r\n                  productsUIProps.setQueryParams\r\n                )}\r\n                selectRow={getSelectRow({\r\n                  entities,\r\n                  ids: productsUIProps.ids,\r\n                  setIds: productsUIProps.setIds,\r\n                })}\r\n                {...paginationTableProps}\r\n              >\r\n                <PleaseWaitMessage entities={entities} />\r\n                <NoRecordsFoundMessage entities={entities} />\r\n              </BootstrapTable>\r\n            </Pagination>\r\n          );\r\n        }}\r\n      </PaginationProvider>\r\n    </>\r\n  );\r\n}\r\n","import React, { useMemo } from \"react\";\r\nimport { useProductsUIContext } from \"../ProductsUIContext\";\r\n\r\nexport function ProductsGrouping() {\r\n  // Products UI Context\r\n  const productsUIContext = useProductsUIContext();\r\n  const productsUIProps = useMemo(() => {\r\n    return {\r\n      ids: productsUIContext.ids,\r\n      setIds: productsUIContext.setIds,\r\n      openDeleteProductsDialog: productsUIContext.openDeleteProductsDialog,\r\n      openFetchProductsDialog: productsUIContext.openFetchProductsDialog,\r\n      openUpdateProductsStatusDialog:\r\n        productsUIContext.openUpdateProductsStatusDialog,\r\n    };\r\n  }, [productsUIContext]);\r\n\r\n  return (\r\n    <div className=\"form\">\r\n      <div className=\"row align-items-center form-group-actions margin-top-20 margin-bottom-20\">\r\n        <div className=\"col-xl-12\">\r\n          <div className=\"form-group form-group-inline\">\r\n            <div className=\"form-label form-label-no-wrap\">\r\n              <label className=\"-font-bold font-danger-\">\r\n                <span>\r\n                  Selected records count: <b>{productsUIProps.ids.length}</b>\r\n                </span>\r\n              </label>\r\n            </div>\r\n            <div>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-danger font-weight-bolder font-size-sm\"\r\n                onClick={productsUIProps.openDeleteProductsDialog}\r\n              >\r\n                <i className=\"fa fa-trash\"></i> Delete All\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, {useMemo, createRef} from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar,\r\n} from \"../../../../../_metronic/_partials/controls\";\r\nimport { ProductsFilter } from \"./products-filter/ProductsFilter\";\r\nimport { ProductsTable } from \"./products-table/ProductsTable\";\r\nimport { ProductsGrouping } from \"./products-grouping/ProductsGrouping\";\r\nimport { useProductsUIContext } from \"./ProductsUIContext\";\r\n\r\n\r\nexport function ProductsCard() {\r\n  const productsUIContext = useProductsUIContext();\r\n  const productsUIProps = useMemo(() => {\r\n    return {\r\n      ids: productsUIContext.ids,\r\n      queryParams: productsUIContext.queryParams,\r\n      setQueryParams: productsUIContext.setQueryParams,\r\n      newProductButtonClick: productsUIContext.newProductButtonClick,\r\n      openDeleteProductsDialog: productsUIContext.openDeleteProductsDialog,\r\n      openEditProductPage: productsUIContext.openEditProductPage,\r\n      openUpdateProductsStatusDialog:\r\n        productsUIContext.openUpdateProductsStatusDialog,\r\n      openFetchProductsDialog: productsUIContext.openFetchProductsDialog,\r\n    };\r\n  }, [productsUIContext]);\r\n\r\n  const inputFile = createRef();\r\n  return (\r\n    <Card>\r\n      <CardHeader title=\"Products\">\r\n        <CardHeaderToolbar>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-danger mr-2\"\r\n            onClick={() => inputFile.current.click()}\r\n          >\r\n            Import Products\r\n          </button>\r\n          <input type=\"file\" style={{display:\"none\"}} ref={inputFile} />\r\n\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-info\"\r\n            onClick={productsUIProps.newProductButtonClick}\r\n          >\r\n            Add Product\r\n          </button>\r\n        </CardHeaderToolbar>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <ProductsFilter />\r\n        {productsUIProps.ids.length > 0 && (\r\n          <>\r\n            <ProductsGrouping />\r\n          </>\r\n        )}\r\n        <ProductsTable />\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { ProductsLoadingDialog } from \"./products-loading-dialog/ProductsLoadingDialog\";\r\nimport { ProductDeleteDialog } from \"./product-delete-dialog/ProductDeleteDialog\";\r\nimport { ProductsDeleteDialog } from \"./products-delete-dialog/ProductsDeleteDialog\";\r\nimport { ProductsFetchDialog } from \"./products-fetch-dialog/ProductsFetchDialog\";\r\nimport { ProductsUpdateStatusDialog } from \"./products-update-status-dialog/ProductsUpdateStatusDialog\";\r\nimport { ProductsCard } from \"./ProductsCard\";\r\nimport { ProductsUIProvider } from \"./ProductsUIContext\";\r\nimport {ADMIN_ROUTE} from '../../../../pages/helper/api'\r\n\r\nexport function ProductsPage({ history }) {\r\n  const productsUIEvents = {\r\n    newProductButtonClick: () => {\r\n      history.push(`/${ADMIN_ROUTE}/products/new`);\r\n    },\r\n    openEditProductPage: (id) => {\r\n      history.push(`/${ADMIN_ROUTE}/products/${id}/edit`);\r\n    },\r\n    openDeleteProductDialog: (id) => {\r\n      history.push(`/${ADMIN_ROUTE}/products/${id}/delete`);\r\n    },\r\n    openDeleteProductsDialog: () => {\r\n      history.push(`/${ADMIN_ROUTE}/products/deleteProducts`);\r\n    },\r\n    openFetchProductsDialog: () => {\r\n      history.push(`/${ADMIN_ROUTE}/products/fetch`);\r\n    },\r\n    openUpdateProductsStatusDialog: () => {\r\n      history.push(\"/\"+ADMIN_ROUTE+\"/products/updateStatus\");\r\n    },\r\n  };\r\n\r\n  return (\r\n    <ProductsUIProvider productsUIEvents={productsUIEvents}>\r\n      <ProductsLoadingDialog />\r\n      <Route path={\"/\"+ADMIN_ROUTE+\"/products/deleteProducts\"}>\r\n        {({ history, match }) => (\r\n          <ProductsDeleteDialog\r\n            show={match != null}\r\n            onHide={() => {\r\n              history.push(\"/\"+ADMIN_ROUTE+\"/products\");\r\n            }}\r\n          />\r\n        )}\r\n      </Route>\r\n      <Route path={\"/\"+ADMIN_ROUTE+\"/products/:id/delete\"}>\r\n        {({ history, match }) => (\r\n          <ProductDeleteDialog\r\n            show={match != null}\r\n            id={match && match.params.id}\r\n            onHide={() => {\r\n              history.push(\"/\"+ADMIN_ROUTE+\"/products\");\r\n            }}\r\n          />\r\n        )}\r\n      </Route>\r\n      <Route path={\"/\"+ADMIN_ROUTE+\"/products/fetch\"}>\r\n        {({ history, match }) => (\r\n          <ProductsFetchDialog\r\n            show={match != null}\r\n            onHide={() => {\r\n              history.push(\"/\"+ADMIN_ROUTE+\"/products\");\r\n            }}\r\n          />\r\n        )}\r\n      </Route>\r\n      <Route path={\"/\"+ADMIN_ROUTE+\"/products/updateStatus\"}>\r\n        {({ history, match }) => (\r\n          <ProductsUpdateStatusDialog\r\n            show={match != null}\r\n            onHide={() => {\r\n              history.push(\"/\"+ADMIN_ROUTE+\"/products\");\r\n            }}\r\n          />\r\n        )}\r\n      </Route>\r\n      <ProductsCard />\r\n    </ProductsUIProvider>\r\n  );\r\n}\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      userSelect: 'none',\n      width: '1em',\n      height: '1em',\n      display: 'inline-block',\n      fill: 'currentColor',\n      flexShrink: 0,\n      fontSize: theme.typography.pxToRem(24),\n      transition: theme.transitions.create('fill', {\n        duration: theme.transitions.duration.shorter\n      })\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the root element if `color=\"action\"`. */\n    colorAction: {\n      color: theme.palette.action.active\n    },\n\n    /* Styles applied to the root element if `color=\"error\"`. */\n    colorError: {\n      color: theme.palette.error.main\n    },\n\n    /* Styles applied to the root element if `color=\"disabled\"`. */\n    colorDisabled: {\n      color: theme.palette.action.disabled\n    },\n\n    /* Styles applied to the root element if `fontSize=\"inherit\"`. */\n    fontSizeInherit: {\n      fontSize: 'inherit'\n    },\n\n    /* Styles applied to the root element if `fontSize=\"small\"`. */\n    fontSizeSmall: {\n      fontSize: theme.typography.pxToRem(20)\n    },\n\n    /* Styles applied to the root element if `fontSize=\"large\"`. */\n    fontSizeLarge: {\n      fontSize: theme.typography.pxToRem(35)\n    }\n  };\n};\nvar SvgIcon = React.forwardRef(function SvgIcon(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'inherit' : _props$color,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'svg' : _props$component,\n      _props$fontSize = props.fontSize,\n      fontSize = _props$fontSize === void 0 ? 'default' : _props$fontSize,\n      htmlColor = props.htmlColor,\n      titleAccess = props.titleAccess,\n      _props$viewBox = props.viewBox,\n      viewBox = _props$viewBox === void 0 ? '0 0 24 24' : _props$viewBox,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"color\", \"component\", \"fontSize\", \"htmlColor\", \"titleAccess\", \"viewBox\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, color !== 'inherit' && classes[\"color\".concat(capitalize(color))], fontSize !== 'default' && classes[\"fontSize\".concat(capitalize(fontSize))]),\n    focusable: \"false\",\n    viewBox: viewBox,\n    color: htmlColor,\n    \"aria-hidden\": titleAccess ? undefined : true,\n    role: titleAccess ? 'img' : undefined,\n    ref: ref\n  }, other), children, titleAccess ? /*#__PURE__*/React.createElement(\"title\", null, titleAccess) : null);\n});\nprocess.env.NODE_ENV !== \"production\" ? SvgIcon.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Node passed into the SVG element.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * You can use the `htmlColor` prop to apply a color attribute to the SVG element.\n   */\n  color: PropTypes.oneOf(['action', 'disabled', 'error', 'inherit', 'primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The fontSize applied to the icon. Defaults to 24px, but can be configure to inherit font size.\n   */\n  fontSize: PropTypes.oneOf(['default', 'inherit', 'large', 'small']),\n\n  /**\n   * Applies a color attribute to the SVG element.\n   */\n  htmlColor: PropTypes.string,\n\n  /**\n   * The shape-rendering attribute. The behavior of the different options is described on the\n   * [MDN Web Docs](https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering).\n   * If you are having issues with blurry icons you should investigate this property.\n   */\n  shapeRendering: PropTypes.string,\n\n  /**\n   * Provides a human-readable title for the element that contains it.\n   * https://www.w3.org/TR/SVG-access/#Equivalent\n   */\n  titleAccess: PropTypes.string,\n\n  /**\n   * Allows you to redefine what the coordinates without units mean inside an SVG element.\n   * For example, if the SVG element is 500 (width) by 200 (height),\n   * and you pass viewBox=\"0 0 50 20\",\n   * this means that the coordinates inside the SVG will go from the top left corner (0,0)\n   * to bottom right (50,20) and each unit will be worth 10px.\n   */\n  viewBox: PropTypes.string\n} : void 0;\nSvgIcon.muiName = 'SvgIcon';\nexport default withStyles(styles, {\n  name: 'MuiSvgIcon'\n})(SvgIcon);","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19.35 10.04C18.67 6.59 15.64 4 12 4 9.11 4 6.6 5.64 5.35 8.04 2.34 8.36 0 10.91 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96zM14 13v4h-4v-4H7l5-5 5 5h-3z\"\n}), 'CloudUpload');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nexport default function createSvgIcon(path, displayName) {\n  var Component = React.memo(React.forwardRef(function (props, ref) {\n    return React.createElement(SvgIcon, _extends({\n      ref: ref\n    }, props), path);\n  }));\n\n  if (process.env.NODE_ENV !== 'production') {\n    Component.displayName = \"\".concat(displayName, \"Icon\");\n  }\n\n  Component.muiName = SvgIcon.muiName;\n  return Component;\n}","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nimport ButtonBase from '../ButtonBase';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends(_extends({}, theme.typography.button), {}, {\n      boxSizing: 'border-box',\n      minWidth: 64,\n      padding: '6px 16px',\n      borderRadius: theme.shape.borderRadius,\n      color: theme.palette.text.primary,\n      transition: theme.transitions.create(['background-color', 'box-shadow', 'border'], {\n        duration: theme.transitions.duration.short\n      }),\n      '&:hover': {\n        textDecoration: 'none',\n        backgroundColor: fade(theme.palette.text.primary, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        },\n        '&$disabled': {\n          backgroundColor: 'transparent'\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }),\n\n    /* Styles applied to the span element that wraps the children. */\n    label: {\n      width: '100%',\n      // Ensure the correct width for iOS Safari\n      display: 'inherit',\n      alignItems: 'inherit',\n      justifyContent: 'inherit'\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"`. */\n    text: {\n      padding: '6px 8px'\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"` and `color=\"primary\"`. */\n    textPrimary: {\n      color: theme.palette.primary.main,\n      '&:hover': {\n        backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"` and `color=\"secondary\"`. */\n    textSecondary: {\n      color: theme.palette.secondary.main,\n      '&:hover': {\n        backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"`. */\n    outlined: {\n      padding: '5px 15px',\n      border: \"1px solid \".concat(theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)'),\n      '&$disabled': {\n        border: \"1px solid \".concat(theme.palette.action.disabledBackground)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"primary\"`. */\n    outlinedPrimary: {\n      color: theme.palette.primary.main,\n      border: \"1px solid \".concat(fade(theme.palette.primary.main, 0.5)),\n      '&:hover': {\n        border: \"1px solid \".concat(theme.palette.primary.main),\n        backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"secondary\"`. */\n    outlinedSecondary: {\n      color: theme.palette.secondary.main,\n      border: \"1px solid \".concat(fade(theme.palette.secondary.main, 0.5)),\n      '&:hover': {\n        border: \"1px solid \".concat(theme.palette.secondary.main),\n        backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      },\n      '&$disabled': {\n        border: \"1px solid \".concat(theme.palette.action.disabled)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"`. */\n    contained: {\n      color: theme.palette.getContrastText(theme.palette.grey[300]),\n      backgroundColor: theme.palette.grey[300],\n      boxShadow: theme.shadows[2],\n      '&:hover': {\n        backgroundColor: theme.palette.grey.A100,\n        boxShadow: theme.shadows[4],\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          boxShadow: theme.shadows[2],\n          backgroundColor: theme.palette.grey[300]\n        },\n        '&$disabled': {\n          backgroundColor: theme.palette.action.disabledBackground\n        }\n      },\n      '&$focusVisible': {\n        boxShadow: theme.shadows[6]\n      },\n      '&:active': {\n        boxShadow: theme.shadows[8]\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled,\n        boxShadow: theme.shadows[0],\n        backgroundColor: theme.palette.action.disabledBackground\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"` and `color=\"primary\"`. */\n    containedPrimary: {\n      color: theme.palette.primary.contrastText,\n      backgroundColor: theme.palette.primary.main,\n      '&:hover': {\n        backgroundColor: theme.palette.primary.dark,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.palette.primary.main\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"` and `color=\"secondary\"`. */\n    containedSecondary: {\n      color: theme.palette.secondary.contrastText,\n      backgroundColor: theme.palette.secondary.main,\n      '&:hover': {\n        backgroundColor: theme.palette.secondary.dark,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.palette.secondary.main\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `disableElevation={true}`. */\n    disableElevation: {\n      boxShadow: 'none',\n      '&:hover': {\n        boxShadow: 'none'\n      },\n      '&$focusVisible': {\n        boxShadow: 'none'\n      },\n      '&:active': {\n        boxShadow: 'none'\n      },\n      '&$disabled': {\n        boxShadow: 'none'\n      }\n    },\n\n    /* Pseudo-class applied to the ButtonBase root element if the button is keyboard focused. */\n    focusVisible: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit',\n      borderColor: 'currentColor'\n    },\n\n    /* Styles applied to the root element if `size=\"small\"` and `variant=\"text\"`. */\n    textSizeSmall: {\n      padding: '4px 5px',\n      fontSize: theme.typography.pxToRem(13)\n    },\n\n    /* Styles applied to the root element if `size=\"large\"` and `variant=\"text\"`. */\n    textSizeLarge: {\n      padding: '8px 11px',\n      fontSize: theme.typography.pxToRem(15)\n    },\n\n    /* Styles applied to the root element if `size=\"small\"` and `variant=\"outlined\"`. */\n    outlinedSizeSmall: {\n      padding: '3px 9px',\n      fontSize: theme.typography.pxToRem(13)\n    },\n\n    /* Styles applied to the root element if `size=\"large\"` and `variant=\"outlined\"`. */\n    outlinedSizeLarge: {\n      padding: '7px 21px',\n      fontSize: theme.typography.pxToRem(15)\n    },\n\n    /* Styles applied to the root element if `size=\"small\"` and `variant=\"contained\"`. */\n    containedSizeSmall: {\n      padding: '4px 10px',\n      fontSize: theme.typography.pxToRem(13)\n    },\n\n    /* Styles applied to the root element if `size=\"large\"` and `variant=\"contained\"`. */\n    containedSizeLarge: {\n      padding: '8px 22px',\n      fontSize: theme.typography.pxToRem(15)\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {},\n\n    /* Styles applied to the root element if `size=\"large\"`. */\n    sizeLarge: {},\n\n    /* Styles applied to the root element if `fullWidth={true}`. */\n    fullWidth: {\n      width: '100%'\n    },\n\n    /* Styles applied to the startIcon element if supplied. */\n    startIcon: {\n      display: 'inherit',\n      marginRight: 8,\n      marginLeft: -4,\n      '&$iconSizeSmall': {\n        marginLeft: -2\n      }\n    },\n\n    /* Styles applied to the endIcon element if supplied. */\n    endIcon: {\n      display: 'inherit',\n      marginRight: -4,\n      marginLeft: 8,\n      '&$iconSizeSmall': {\n        marginRight: -2\n      }\n    },\n\n    /* Styles applied to the icon element if supplied and `size=\"small\"`. */\n    iconSizeSmall: {\n      '& > *:first-child': {\n        fontSize: 18\n      }\n    },\n\n    /* Styles applied to the icon element if supplied and `size=\"medium\"`. */\n    iconSizeMedium: {\n      '& > *:first-child': {\n        fontSize: 20\n      }\n    },\n\n    /* Styles applied to the icon element if supplied and `size=\"large\"`. */\n    iconSizeLarge: {\n      '& > *:first-child': {\n        fontSize: 22\n      }\n    }\n  };\n};\nvar Button = React.forwardRef(function Button(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'default' : _props$color,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'button' : _props$component,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableElevati = props.disableElevation,\n      disableElevation = _props$disableElevati === void 0 ? false : _props$disableElevati,\n      _props$disableFocusRi = props.disableFocusRipple,\n      disableFocusRipple = _props$disableFocusRi === void 0 ? false : _props$disableFocusRi,\n      endIconProp = props.endIcon,\n      focusVisibleClassName = props.focusVisibleClassName,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      startIconProp = props.startIcon,\n      _props$type = props.type,\n      type = _props$type === void 0 ? 'button' : _props$type,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'text' : _props$variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"color\", \"component\", \"disabled\", \"disableElevation\", \"disableFocusRipple\", \"endIcon\", \"focusVisibleClassName\", \"fullWidth\", \"size\", \"startIcon\", \"type\", \"variant\"]);\n\n  var startIcon = startIconProp && /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.startIcon, classes[\"iconSize\".concat(capitalize(size))])\n  }, startIconProp);\n  var endIcon = endIconProp && /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.endIcon, classes[\"iconSize\".concat(capitalize(size))])\n  }, endIconProp);\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    className: clsx(classes.root, classes[variant], className, color === 'inherit' ? classes.colorInherit : color !== 'default' && classes[\"\".concat(variant).concat(capitalize(color))], size !== 'medium' && [classes[\"\".concat(variant, \"Size\").concat(capitalize(size))], classes[\"size\".concat(capitalize(size))]], disableElevation && classes.disableElevation, disabled && classes.disabled, fullWidth && classes.fullWidth),\n    component: component,\n    disabled: disabled,\n    focusRipple: !disableFocusRipple,\n    focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName),\n    ref: ref,\n    type: type\n  }, other), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.label\n  }, startIcon, children, endIcon));\n});\nprocess.env.NODE_ENV !== \"production\" ? Button.propTypes = {\n  /**\n   * The content of the button.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'inherit', 'primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the button will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, no elevation is used.\n   */\n  disableElevation: PropTypes.bool,\n\n  /**\n   * If `true`, the  keyboard focus ripple will be disabled.\n   * `disableRipple` must also be true.\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   *\n   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\n   * to highlight the element by applying separate styles with the `focusVisibleClassName`.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * Element placed after the children.\n   */\n  endIcon: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * If `true`, the button will take up the full width of its container.\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The URL to link to when the button is clicked.\n   * If defined, an `a` element will be used as the root node.\n   */\n  href: PropTypes.string,\n\n  /**\n   * The size of the button.\n   * `small` is equivalent to the dense button styling.\n   */\n  size: PropTypes.oneOf(['small', 'medium', 'large']),\n\n  /**\n   * Element placed before the children.\n   */\n  startIcon: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  type: PropTypes.string,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['text', 'outlined', 'contained'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiButton'\n})(Button);","// Form is based on Formik\r\n// Data validation is based on Yup\r\n// Please, be familiar with article first:\r\n// https://hackernoon.com/react-form-validation-with-formik-and-yup-8b76bda62e10\r\nimport React, { useEffect, useState, useRef } from \"react\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { Input, DatePickerField, Select as MSelect } from \"../../../../../../_metronic/_partials/controls\";\r\nimport Creatable from \"react-select/creatable\";\r\nimport { withAsyncPaginate, AsyncPaginate } from \"react-select-async-paginate\";\r\n\r\nimport Select from 'react-select';\r\nimport {\r\n  AVAILABLE_COLORS,\r\n  AVAILABLE_MANUFACTURES,\r\n  ProductStatusTitles,\r\n  YES_NO_OPTIONS,\r\n  UOM_CHOICES,\r\n  ProductConditionTitles,\r\n} from \"../ProductsUIHelpers\";\r\nimport { list, loadOptions, DROPDOWN_WAIT, post } from \"../../../../../pages/helper/api\";\r\nimport {CloudUpload as CloudUploadIcon} from \"@material-ui/icons\";\r\nimport {\r\n    Button as ButtonCore,\r\n} from \"@material-ui/core\";\r\nimport { STATIC_URL } from \"../../../../../pages/helper/api\";\r\n\r\nconst CreatableAsyncPaginate = withAsyncPaginate(Creatable);\r\n// Validation schema\r\nconst ProductEditSchema = Yup.object().shape({\r\n  part_number: Yup.string()\r\n    .min(2, \"Minimum 2 symbols\")\r\n    .max(50, \"Maximum 50 symbols\")\r\n    .required(\"Part number is required\"),\r\n  // alt_part_number: Yup.string()\r\n  //   .min(2, \"Minimum 2 symbols\")\r\n  //   .max(50, \"Maximum 50 symbols\")\r\n  //   .required(\"Alt part number is required\"),\r\n  // product_category: Yup.string(),\r\n  // supplier: Yup.string(),\r\n  // product_manufacturer: Yup.string(),\r\n  // unit_price: Yup.number(),\r\n  // condition: Yup.string()\r\n  //   .min(2, \"Minimum 2 symbols\")\r\n  //   .max(50, \"Maximum 2 symbols\"),\r\n  // quantity: Yup.number()\r\n  //   .min(0, \"Quantity can'be negative\"),\r\n  // tag_date: Yup.date(),\r\n  // turn_around_time: Yup.string(),\r\n  // hazmat: Yup.string(),\r\n  // certification: Yup.string(),\r\n  // unit_of_measure: Yup.string(),\r\n  // hot_sale_item: Yup.string(),\r\n  // status: Yup.string(),\r\n});\r\n\r\nexport function ProductEditForm({\r\n  product,\r\n  btnRef,\r\n  saveProduct,\r\n}) {\r\n\r\n  const [categories, setCategories] = useState([]);\r\n  const [manufacturers, setManufacturers] = useState([]);\r\n  const [suppliers, setSuppliers] = useState([]);\r\n  const [modelsLoaded, setModelsLoaded] = useState(false);\r\n  const [category, setCategory] = useState({});\r\n  const [manfacturer, setManfacturer] = useState({});\r\n  const [supplier, setSupplier] = useState({});\r\n  const [selectedFile, setSelectFile] = useState(null);\r\n  const [news, setNews] = useState(null);\r\n  const [previewFile, setPreviewFile] = useState(null);\r\n  const [productImage, setProductImage] = useState(null);\r\n\r\n\r\n  useEffect(() => {\r\n    loadModels();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (product.id) {\r\n      categories.map(category => {\r\n        if(category.id === product.product_category) \r\n          setCategory(category);\r\n      })\r\n      manufacturers.map(manf => {\r\n        if(manf.id === product.product_manufacturer) \r\n          setManfacturer(manf);\r\n      })\r\n      suppliers.map(supplier => {\r\n        if(supplier.id === product.supplier) \r\n          setSupplier(supplier);\r\n      })\r\n    }\r\n\r\n    if(product.product_image) {\r\n      let file = {};\r\n      let filename_pieces = product.product_image.split('/');\r\n      file.name_c = filename_pieces[filename_pieces.length - 1];\r\n      setPreviewFile(STATIC_URL+product.product_image_name);\r\n      setSelectFile(file);\r\n    }\r\n\r\n  }, [product])\r\n\r\n  function loadModels() {\r\n    let models = {\r\n      'Manufacturer':{},\r\n      'Supplier':{},\r\n      'ProductCategory':{},\r\n    }\r\n    post('oas-models', {models:models}).then(function(response){\r\n      for(let opt in response.data){\r\n        response.data[opt].map((row, i) => {\r\n          response.data[opt][i].label = row.name ? row.name : row.company_name;\r\n          response.data[opt][i].value = row.id;\r\n\r\n          if(opt === 'ProductCategory' && row.value === product.product_category)\r\n            setCategory(row);\r\n\r\n          if(opt === 'Manufacturer' && row.value === product.product_manufacturer)\r\n            setManfacturer(row);\r\n\r\n          if(opt === 'Supplier' && row.value === product.supplier)\r\n            setSupplier(row);\r\n\r\n        })\r\n      }\r\n\r\n      setCategories(response.data.ProductCategory);\r\n      setManufacturers(response.data.Manufacturer);\r\n      setSuppliers(response.data.Supplier);\r\n      setModelsLoaded(true);\r\n    })\r\n  }\r\n\r\n  function createCategory(option, setFieldValue) {\r\n    post('product-category', {name:option}).then(function(response){\r\n      setCategory({label:response.data.name, value:response.data.id});\r\n      setFieldValue('product_category', response.data.id);\r\n    })\r\n  }\r\n\r\n  function createManfacturer(option, setFieldValue) {\r\n    post('manufacturer', {name:option}).then(function(response){\r\n      setManfacturer({label:response.data.name, value:response.data.id});\r\n      setFieldValue('product_manufacturer', response.data.id);\r\n    })\r\n  }\r\n\r\n  function createSupplier(option, setFieldValue) {\r\n    post('supplier', {company_name:option}).then(function(response){\r\n      setSupplier({label:response.data.company_name, value:response.data.id});\r\n      setFieldValue('supplier', response.data.id);\r\n    })\r\n  }\r\n\r\n\r\n  function fileChangedHandler(event)  {\r\n        let file = event.target.files[0];\r\n        setPreviewFile(URL.createObjectURL(file));\r\n        if (file != undefined) {\r\n            file.size_c = file.size / 1024;\r\n\r\n            if ((file.size_c) / 1024 > 2) {\r\n                file.size_c = (file.size_c / 1024).toFixed(2) + ' MB';\r\n                file.error = \"Error: File is too big\";\r\n                setSelectFile(file);\r\n            } else {\r\n                file.error = null;\r\n                file.size_c = file.size_c.toFixed(2) + ' KB';\r\n                let reader = new FileReader();\r\n                reader.readAsDataURL(file);\r\n                reader.onloadend = () => {\r\n                    setProductImage(reader.result);\r\n                    setSelectFile(file);\r\n                };\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n  function handleFileRemove(event) {\r\n      setProductImage(null);\r\n      setSelectFile(null);\r\n      document.getElementById('news-image-upload').value = '';\r\n  }  \r\n  return (\r\n    <>\r\n      <Formik\r\n        enableReinitialize={true}\r\n        initialValues={product}\r\n        validationSchema={ProductEditSchema}\r\n        onSubmit={(values) => {\r\n          values.product_image = productImage;\r\n          saveProduct(values);\r\n        }}\r\n      >\r\n        {({ handleSubmit, setFieldValue }) => (\r\n          <>\r\n            <Form className=\"form form-label-right\">\r\n              <div className=\"form-group row\">\r\n                <div className=\"col-lg-4\">\r\n                  <Field\r\n                    name=\"part_number\"\r\n                    component={Input}\r\n                    placeholder=\"e.g AB123\"\r\n                    label=\"Part Number\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-lg-4\">\r\n                  <Field\r\n                    name=\"alt_part_number\"\r\n                    component={Input}\r\n                    placeholder=\"e.g AB123\"\r\n                    label=\"Alternative Part Number\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-lg-4\">\r\n                  <label>Select Category</label>\r\n                  <CreatableAsyncPaginate\r\n                    name=\"product_category\"\r\n                    onChange= {(value) => {\r\n                      setFieldValue('product_category', value.value);\r\n                      setCategory(value);\r\n                    }}\r\n                    value={category}\r\n                    onCreateOption={(option) => createCategory(option, setFieldValue)}\r\n                    isClearable = {true}\r\n                    loadOptions={(search, prevOptions) => loadOptions(search, prevOptions, categories, modelsLoaded)}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"form-group row\">\r\n                <div className=\"col-lg-4\">\r\n                  <label>Select Manufacturer</label>\r\n                  <CreatableAsyncPaginate \r\n                    debounceTimeout={!modelsLoaded ? DROPDOWN_WAIT : 0}\r\n                    isClearable = {true}\r\n                    onChange= {(value) => {\r\n                      setFieldValue('product_manufacturer', value.value);\r\n                      setManfacturer(value);\r\n                    }}\r\n                    value={manfacturer}\r\n                    name=\"product_manufacturer\" \r\n                    onCreateOption={(option) => createManfacturer(option, setFieldValue)}\r\n                    loadOptions={(search, prevOptions) => loadOptions(search, prevOptions, manufacturers, modelsLoaded)}\r\n                  />\r\n                </div>\r\n                <div className=\"col-lg-4\">\r\n                  <label>Select Supplier</label>\r\n                  <CreatableAsyncPaginate \r\n                    debounceTimeout={!modelsLoaded ? DROPDOWN_WAIT : 0}\r\n                    isClearable = {true}  \r\n                    onChange= {(value) => {\r\n                      setFieldValue('supplier', value.value);\r\n                      setSupplier(value);\r\n                    }}\r\n                    name=\"supplier\" \r\n                    value={supplier}\r\n                    onCreateOption={(option) => createSupplier(option, setFieldValue)}\r\n                    loadOptions={(search, prevOptions) => loadOptions(search, prevOptions, suppliers, modelsLoaded)}\r\n                  />\r\n                </div>\r\n                <div className=\"col-lg-4\">\r\n                  <MSelect name=\"condition\" label=\"Condition\">\r\n                    <option value=\"\">--None--</option>\r\n                    {ProductConditionTitles.map((condition, index) => (\r\n                      <option key={condition} value={condition}>\r\n                        {condition}\r\n                      </option>\r\n                    ))}\r\n                  </MSelect>\r\n                </div>\r\n              </div>\r\n              <div className=\"form-group row\">\r\n                <div className=\"col-lg-4\">\r\n                  <Field\r\n                    name=\"quantity\"\r\n                    component={Input}\r\n                    placeholder=\"Default 0\"\r\n                    label=\"Quantity\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-lg-4\">\r\n                   <DatePickerField\r\n                      name=\"tag_date\"\r\n                      label=\"Tag Date\"\r\n                    />\r\n                </div>\r\n                <div className=\"col-lg-4\">\r\n                  <Field\r\n                    name=\"turn_around_time\"\r\n                    component={Input}\r\n                    placeholder=\"\"\r\n                    label=\"Turn around time\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"form-group row\">\r\n                <div className=\"col-lg-4\">\r\n                  <MSelect name=\"hazmat\" label=\"Hazmat\">\r\n                    {YES_NO_OPTIONS.map((status, index) => (\r\n                      <option key={status} value={status}>\r\n                        {status}\r\n                      </option>\r\n                    ))}\r\n                  </MSelect>\r\n                </div>\r\n                <div className=\"col-lg-4\">\r\n                  <Field\r\n                    name=\"certification\"\r\n                    component={Input}\r\n                    placeholder=\"\"\r\n                    label=\"Certification\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-lg-4\">\r\n                  <MSelect name=\"unit_of_measure\" label=\"Unit of measure\">\r\n                    <option value=\"\">--None--</option>\r\n                    {UOM_CHOICES.map((status, index) => (\r\n                      <option key={status} value={status}>\r\n                        {status}\r\n                      </option>\r\n                    ))}\r\n                  </MSelect>\r\n                </div>\r\n              </div>\r\n              <div className=\"form-group row\">\r\n                <div className=\"col-lg-4\">\r\n                  <Field\r\n                    name=\"unit_price\"\r\n                    component={Input}\r\n                    placeholder=\"\"\r\n                    label=\"Unit price\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-lg-4\">\r\n                  <MSelect name=\"hot_sale_item\" label=\"Hot sale item\">\r\n                    {YES_NO_OPTIONS.map((status, index) => (\r\n                      <option key={status} value={status}>\r\n                        {status}\r\n                      </option>\r\n                    ))}\r\n                  </MSelect>\r\n                </div>\r\n                <div className=\"col-lg-4\">\r\n                  <MSelect name=\"status\" label=\"Status\">\r\n                    {ProductStatusTitles.map((status, index) => (\r\n                      <option key={status} value={index}>\r\n                        {status}\r\n                      </option>\r\n                    ))}\r\n                  </MSelect>\r\n                </div>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <Field\r\n                  name=\"description\"\r\n                  component={Input}\r\n                  placeholder='Descriptiion'\r\n                  label=\"Description\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                  <input\r\n                      accept=\"image/*\"\r\n                      style={{display: 'none'}}\r\n                      type=\"file\"\r\n                      id=\"news-image-upload\"\r\n                      name=\"image\"\r\n                      onChange={fileChangedHandler}\r\n                  />\r\n                  <br/>\r\n                <label htmlFor=\"news-image-upload\">\r\n                    <ButtonCore variant=\"outlined\" color=\"inherit\" component=\"span\">\r\n                        Select Image\r\n                        <CloudUploadIcon style={{marginLeft: '5px'}}/>\r\n                    </ButtonCore>\r\n                </label>\r\n              </div>\r\n                        <div className=\"form-group form-group-last row\">\r\n                            <div className=\"col-12 col-md-4\">\r\n                                <div className=\"dropzone dropzone-multi\" id=\"kt_dropzone_5\">\r\n                                    <div className=\"dropzone-items\" style={{display: selectedFile ? 'block' : 'none'}}>\r\n                                        <div className=\"dropzone-item\">\r\n                                            <div className=\"dropzone-file\">\r\n                                                {previewFile &&\r\n                                                <div style={{'maxWidth': '250px'}}><img style={{width: \"100%\"}}\r\n                                                                                         src={previewFile}/>\r\n                                                </div>\r\n                                                }\r\n                                                <div className=\"dropzone-filename\" title=\"some_image_file_name.jpg\">\r\n                                                    <span\r\n                                                        data-dz-name>{selectedFile ? selectedFile.name : 'No file selected'}</span>\r\n                                                    <strong>(<span\r\n                                                        data-dz-size>{selectedFile && selectedFile.size_c ? selectedFile.size_c : ''}</span>)</strong>\r\n                                                </div>\r\n                                                <div className=\"dropzone-error\"\r\n                                                     data-dz-errormessage>{selectedFile && selectedFile.error ? selectedFile.error : ''}</div>\r\n                                            </div>\r\n                                            <div className=\"dropzone-toolbar\">\r\n                                                <span onClick={(e) => handleFileRemove(e)}\r\n                                                      className=\"dropzone-delete\" data-dz-remove><i\r\n                                                    className=\"flaticon2-cross\"></i></span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <span className=\"form-text text-muted\">Max file size is 2MB.</span>\r\n                            </div>\r\n                        </div>\r\n              <button\r\n                type=\"submit\"\r\n                style={{ display: \"none\" }}\r\n                ref={btnRef}\r\n                onSubmit={() => handleSubmit()}\r\n              ></button>\r\n            </Form>\r\n          </>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n}\r\n","export const defaultSorted = [{ dataField: \"id\", order: \"asc\" }];\r\nexport const sizePerPageList = [\r\n  { text: \"1\", value: 1 },\r\n  { text: \"3\", value: 3 },\r\n  { text: \"5\", value: 5 },\r\n];\r\nexport const initialFilter = {\r\n  filter: {\r\n    value: \"\",\r\n  },\r\n  sortOrder: \"asc\", // asc||desc\r\n  sortField: \"name\",\r\n  pageNumber: 1,\r\n  pageSize: 5,\r\n};\r\n\r\nexport const SPECIFICATIONS_DICTIONARY = [\r\n  { id: 0, name: \"Seats\" },\r\n  { id: 1, name: \"Fuel Type\" },\r\n  { id: 2, name: \"Stock\" },\r\n  { id: 3, name: \"Door count\" },\r\n  { id: 4, name: \"Engine\" },\r\n  { id: 5, name: \"Transmission\" },\r\n  { id: 6, name: \"Drivetrain\" },\r\n  { id: 7, name: \"Combined MPG\" },\r\n  { id: 8, name: \"Warranty\" },\r\n  { id: 9, name: \"Wheels\" },\r\n];\r\n","/* eslint-disable no-unused-vars */\r\nimport React, {\r\n  useEffect,\r\n  useContext,\r\n  createContext,\r\n  useState,\r\n  useCallback,\r\n} from \"react\";\r\nimport { isEqual, isFunction } from \"lodash\";\r\nimport { initialFilter } from \"./SpecificationsUIHelper\";\r\n\r\nconst SpecificationsUIContext = createContext();\r\n\r\nexport function useSpecificationsUIContext() {\r\n  return useContext(SpecificationsUIContext);\r\n}\r\n\r\nexport const SpecificationsUIConsumer = SpecificationsUIContext.Consumer;\r\n\r\nexport function SpecificationsUIProvider({ currentProductId, children }) {\r\n  const [productId, setProductId] = useState(currentProductId);\r\n  const [queryParams, setQueryParamsBase] = useState(initialFilter);\r\n  const [ids, setIds] = useState([]);\r\n  const setQueryParams = useCallback((nextQueryParams) => {\r\n    setQueryParamsBase((prevQueryParams) => {\r\n      if (isFunction(nextQueryParams)) {\r\n        nextQueryParams = nextQueryParams(prevQueryParams);\r\n      }\r\n\r\n      if (isEqual(prevQueryParams, nextQueryParams)) {\r\n        return prevQueryParams;\r\n      }\r\n\r\n      return nextQueryParams;\r\n    });\r\n  }, []);\r\n  const [selectedId, setSelectedId] = useState(null);\r\n  const initSpecification = {\r\n    id: undefined,\r\n    value: \"\",\r\n    specId: 0,\r\n    carId: productId,\r\n  };\r\n  useEffect(() => {\r\n    initSpecification.carId = currentProductId;\r\n    initSpecification.productId = currentProductId;\r\n    setProductId(currentProductId);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [currentProductId]);\r\n  const [\r\n    showEditSpecificationDialog,\r\n    setShowEditSpecificationDialog,\r\n  ] = useState(false);\r\n  const openNewSpecificationDialog = () => {\r\n    setSelectedId(undefined);\r\n    setShowEditSpecificationDialog(true);\r\n  };\r\n  const openEditSpecificationDialog = (id) => {\r\n    setSelectedId(id);\r\n    setShowEditSpecificationDialog(true);\r\n  };\r\n  const closeEditSpecificationDialog = () => {\r\n    setSelectedId(undefined);\r\n    setShowEditSpecificationDialog(false);\r\n  };\r\n  const [\r\n    showDeleteSpecificationDialog,\r\n    setShowDeleteSpecificationDialog,\r\n  ] = useState(false);\r\n  const openDeleteSpecificationDialog = (id) => {\r\n    setSelectedId(id);\r\n    setShowDeleteSpecificationDialog(true);\r\n  };\r\n  const closeDeleteSpecificationDialog = () => {\r\n    setSelectedId(undefined);\r\n    setShowDeleteSpecificationDialog(false);\r\n  };\r\n  const [\r\n    showDeleteSpecificationsDialog,\r\n    setShowDeleteSpecificationsDialog,\r\n  ] = useState(false);\r\n  const openDeleteSpecificationsDialog = () => {\r\n    setShowDeleteSpecificationsDialog(true);\r\n  };\r\n  const closeDeleteSpecificationsDialog = () => {\r\n    setShowDeleteSpecificationsDialog(false);\r\n  };\r\n  const [\r\n    showFetchSpecificationsDialog,\r\n    setShowFetchSpecificationsDialog,\r\n  ] = useState(false);\r\n  const openFetchSpecificationsDialog = () => {\r\n    setShowFetchSpecificationsDialog(true);\r\n  };\r\n  const closeFetchSpecificationsDialog = () => {\r\n    setShowFetchSpecificationsDialog(false);\r\n  };\r\n  const value = {\r\n    ids,\r\n    setIds,\r\n    productId,\r\n    setProductId,\r\n    queryParams,\r\n    setQueryParams,\r\n    initSpecification,\r\n    selectedId,\r\n    showEditSpecificationDialog,\r\n    openEditSpecificationDialog,\r\n    openNewSpecificationDialog,\r\n    closeEditSpecificationDialog,\r\n    showDeleteSpecificationDialog,\r\n    openDeleteSpecificationDialog,\r\n    closeDeleteSpecificationDialog,\r\n    showDeleteSpecificationsDialog,\r\n    openDeleteSpecificationsDialog,\r\n    closeDeleteSpecificationsDialog,\r\n    showFetchSpecificationsDialog,\r\n    openFetchSpecificationsDialog,\r\n    closeFetchSpecificationsDialog,\r\n  };\r\n\r\n  return (\r\n    <SpecificationsUIContext.Provider value={value}>\r\n      {children}\r\n    </SpecificationsUIContext.Provider>\r\n  );\r\n}\r\n","// Form is based on Formik\r\n// Data validation is based on Yup\r\n// Please, be familiar with article first:\r\n// https://hackernoon.com/react-form-validation-with-formik-and-yup-8b76bda62e10\r\nimport React from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport {\r\n  Select,\r\n  Input,\r\n} from \"../../../../../../../_metronic/_partials/controls\";\r\nimport { SPECIFICATIONS_DICTIONARY } from \"../SpecificationsUIHelper\";\r\n\r\n// Validation schema\r\nconst SpecificationEditSchema = Yup.object().shape({\r\n  value: Yup.string()\r\n    .min(2, \"Minimum 2 symbols\")\r\n    .max(50, \"Maximum 50 symbols\")\r\n    .required(\"Value is required\"),\r\n  specId: Yup.number().required(\"Specification type is required\"),\r\n});\r\n\r\nexport function SpecificationEditForm({\r\n  saveSpecification,\r\n  specification,\r\n  actionsLoading,\r\n  onHide,\r\n}) {\r\n  return (\r\n    <>\r\n      <Formik\r\n        enableReinitialize={true}\r\n        initialValues={specification}\r\n        validationSchema={SpecificationEditSchema}\r\n        onSubmit={(values) => {\r\n          saveSpecification(values);\r\n        }}\r\n      >\r\n        {({ handleSubmit }) => (\r\n          <>\r\n            <Modal.Body className=\"overlay overlay-block cursor-default\">\r\n              {actionsLoading && (\r\n                <div className=\"overlay-layer bg-transparent\">\r\n                  <div className=\"spinner spinner-lg spinner-success\" />\r\n                </div>\r\n              )}\r\n              <Form className=\"form form-label-right\">\r\n                <div className=\"form-group row\">\r\n                  <div className=\"col-lg-12\">\r\n                    <Select name=\"specId\" label=\"Specification Type\">\r\n                      {SPECIFICATIONS_DICTIONARY.map((spec) => (\r\n                        <option key={spec.id} value={spec.id}>\r\n                          {spec.name}\r\n                        </option>\r\n                      ))}\r\n                    </Select>\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                  <div className=\"col-lg-12\">\r\n                    <Field\r\n                      name=\"value\"\r\n                      component={Input}\r\n                      placeholder=\"Value\"\r\n                      label=\"Value\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <button\r\n                type=\"button\"\r\n                onClick={onHide}\r\n                className=\"btn btn-light btn-elevate\"\r\n              >\r\n                Cancel\r\n              </button>\r\n              <> </>\r\n              <button\r\n                type=\"submit\"\r\n                onClick={() => handleSubmit()}\r\n                className=\"btn btn-primary btn-elevate\"\r\n              >\r\n                Save\r\n              </button>\r\n            </Modal.Footer>\r\n          </>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n}\r\n","/* eslint-disable no-unused-vars */\r\nimport React, { useEffect, useContext, createContext, useState, useCallback } from \"react\";\r\nimport {isEqual, isFunction} from \"lodash\";\r\nimport {initialFilter} from \"./RemarksUIHelper\";\r\n\r\nconst RemarksUIContext = createContext();\r\n\r\nexport function useRemarksUIContext() {\r\n  return useContext(RemarksUIContext);\r\n}\r\n\r\nexport const RemarksUIConsumer = RemarksUIContext.Consumer;\r\n\r\nexport function RemarksUIProvider({ currentProductId, children }) {\r\n  const [productId, setProductId] = useState(currentProductId);\r\n  const [queryParams, setQueryParamsBase] = useState(initialFilter);\r\n  const [ids, setIds] = useState([]);\r\n  const setQueryParams = useCallback(nextQueryParams => {\r\n    setQueryParamsBase(prevQueryParams => {\r\n      if (isFunction(nextQueryParams)) {\r\n        nextQueryParams = nextQueryParams(prevQueryParams);\r\n      }\r\n\r\n      if (isEqual(prevQueryParams, nextQueryParams)) {\r\n        return prevQueryParams;\r\n      }\r\n\r\n      return nextQueryParams;\r\n    });\r\n  }, []);\r\n  const [selectedId, setSelectedId] = useState(null);\r\n  const [showEditRemarkDialog, setShowEditRemarkDialog] = useState(false);\r\n  const initRemark = {\r\n    id: undefined,\r\n    text: \"\",\r\n    type: 0,\r\n    dueDate: \"01/07/2020\",\r\n    carId: productId\r\n  };\r\n  useEffect(()=> {\r\n    initRemark.productId = currentProductId;\r\n    initRemark.carId = currentProductId;\r\n    setProductId(currentProductId);\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [currentProductId]);\r\n  const openNewRemarkDialog = () => {\r\n    setSelectedId(undefined);\r\n    setShowEditRemarkDialog(true);\r\n  };\r\n  const openEditRemarkDialog = id => {\r\n    setSelectedId(id);\r\n    setShowEditRemarkDialog(true);\r\n  };\r\n  const closeEditRemarkDialog = () => {\r\n    setSelectedId(undefined);\r\n    setShowEditRemarkDialog(false);\r\n  };\r\n  const [showDeleteRemarkDialog, setShowDeleteRemarkDialog] = useState(false);\r\n  const openDeleteRemarkDialog = id => {\r\n    setSelectedId(id);\r\n    setShowDeleteRemarkDialog(true);\r\n  };\r\n  const closeDeleteRemarkDialog = () => {\r\n    setSelectedId(undefined);\r\n    setShowDeleteRemarkDialog(false);\r\n  };\r\n\r\n  const [showDeleteRemarksDialog, setShowDeleteRemarksDialog] = useState(false);\r\n  const openDeleteRemarksDialog = () => {\r\n    setShowDeleteRemarksDialog(true);\r\n  };\r\n  const closeDeleteRemarksDialog = () => {\r\n    setShowDeleteRemarksDialog(false);\r\n  };\r\n\r\n  const [showFetchRemarksDialog, setShowFetchRemarksDialog] = useState(false);\r\n  const openFetchRemarksDialog = () => {\r\n    setShowFetchRemarksDialog(true);\r\n  };\r\n  const closeFetchRemarksDialog = () => {\r\n    setShowFetchRemarksDialog(false);\r\n  };\r\n\r\n  const value = {\r\n    ids,\r\n    setIds,\r\n    productId,\r\n    setProductId,\r\n    queryParams,\r\n    setQueryParams,\r\n    initRemark,\r\n    selectedId,\r\n    showEditRemarkDialog,\r\n    openNewRemarkDialog,    \r\n    openEditRemarkDialog,\r\n    closeEditRemarkDialog,\r\n    showDeleteRemarkDialog,\r\n    openDeleteRemarkDialog,\r\n    closeDeleteRemarkDialog,\r\n    showDeleteRemarksDialog,\r\n    openDeleteRemarksDialog,\r\n    closeDeleteRemarksDialog,\r\n    openFetchRemarksDialog,\r\n    closeFetchRemarksDialog,\r\n    showFetchRemarksDialog\r\n  };\r\n  \r\n  return (\r\n    <RemarksUIContext.Provider value={value}>\r\n      {children}\r\n    </RemarksUIContext.Provider>\r\n  );\r\n}\r\n","// Form is based on Formik\r\n// Data validation is based on Yup\r\n// Please, be familiar with article first:\r\n// https://hackernoon.com/react-form-validation-with-formik-and-yup-8b76bda62e10\r\nimport React from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport {\r\n  Input,\r\n  Select,\r\n  DatePickerField,\r\n} from \"../../../../../../../_metronic/_partials/controls\";\r\n\r\n// Validation schema\r\nconst RemarkEditSchema = Yup.object().shape({\r\n  text: Yup.string()\r\n    .min(2, \"Minimum 2 symbols\")\r\n    .max(50, \"Maximum 50 symbols\")\r\n    .required(\"Text is required\"),\r\n  type: Yup.number().required(\"Type is required\"),\r\n  dueDate: Yup.mixed()\r\n    .nullable(false)\r\n    .required(\"Due date is required\"),\r\n});\r\n\r\nexport function RemarkEditForm({ saveRemark, remark, actionsLoading, onHide }) {\r\n  return (\r\n    <>\r\n      <Formik\r\n        enableReinitialize={true}\r\n        initialValues={remark}\r\n        validationSchema={RemarkEditSchema}\r\n        onSubmit={(values) => saveRemark(values)}\r\n      >\r\n        {({ handleSubmit }) => (\r\n          <>\r\n            <Modal.Body className=\"overlay overlay-block cursor-default\">\r\n              {actionsLoading && (\r\n                <div className=\"overlay-layer bg-transparent\">\r\n                  <div className=\"spinner spinner-lg spinner-success\" />\r\n                </div>\r\n              )}\r\n              <Form className=\"form form-label-right\">\r\n                <div className=\"form-group row\">\r\n                  <div className=\"col-lg-12\">\r\n                    <Field\r\n                      name=\"text\"\r\n                      component={Input}\r\n                      placeholder=\"Text\"\r\n                      label=\"Text\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                  <div className=\"col-lg-12\">\r\n                    <DatePickerField name=\"dueDate\" label=\"Due date\" />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                  <div className=\"col-lg-12\">\r\n                    <Select name=\"type\" label=\"Type\">\r\n                      <option value=\"0\">Info</option>\r\n                      <option value=\"1\">Note</option>\r\n                      <option value=\"2\">Reminder</option>\r\n                    </Select>\r\n                  </div>\r\n                </div>\r\n              </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <button\r\n                type=\"button\"\r\n                onClick={onHide}\r\n                className=\"btn btn-light btn-elevate\"\r\n              >\r\n                Cancel\r\n              </button>\r\n              <> </>\r\n              <button\r\n                type=\"submit\"\r\n                onClick={() => handleSubmit()}\r\n                className=\"btn btn-primary btn-elevate\"\r\n              >\r\n                Save\r\n              </button>\r\n            </Modal.Footer>\r\n          </>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n}\r\n","/* eslint-disable no-script-url,jsx-a11y/anchor-is-valid,jsx-a11y/role-supports-aria-props */\r\nimport React, { useEffect, useState, useRef } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { shallowEqual, useSelector } from \"react-redux\";\r\nimport * as actions from \"../../../_redux/products/productsActions\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar,\r\n} from \"../../../../../../_metronic/_partials/controls\";\r\nimport { ProductEditForm } from \"./ProductEditForm\";\r\nimport { Specifications } from \"../product-specifications/Specifications\";\r\nimport { SpecificationsUIProvider } from \"../product-specifications/SpecificationsUIContext\";\r\nimport { useSubheader } from \"../../../../../../_metronic/layout\";\r\nimport { ModalProgressBar } from \"../../../../../../_metronic/_partials/controls\";\r\nimport { RemarksUIProvider } from \"../product-remarks/RemarksUIContext\";\r\nimport { Remarks } from \"../product-remarks/Remarks\";\r\nimport { ADMIN_ROUTE } from \"../../../../../pages/helper/api\";\r\n// import moment from \"moment\";\r\n\r\nconst initProduct = {\r\n  id: undefined,\r\n  condition: \"\",\r\n  product_manufacturer: \"\",\r\n  supplier: \"\",\r\n  product_category: \"\",\r\n  part_number: \"\",\r\n  alt_part_number: \"\",\r\n  description: \"\",\r\n  tag_date: null,\r\n  status: 1,\r\n  hazmat: \"No\",\r\n  unit_price: 0,\r\n  unit_of_measure:\"\",\r\n  quantity:1,\r\n  turn_around_time:\"\",\r\n  hot_sale_item:\"No\",\r\n  certification:\"\",\r\n  product_image_name:\"\"\r\n};\r\n\r\nexport function ProductEdit({\r\n  history,\r\n  match: {\r\n    params: { id },\r\n  },\r\n}) {\r\n  // Subheader\r\n  const suhbeader = useSubheader();\r\n\r\n  // Tabs\r\n  const [tab, setTab] = useState(\"basic\");\r\n  const [title, setTitle] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  // const layoutDispatch = useContext(LayoutContext.Dispatch);\r\n  const { actionsLoading, productForEdit } = useSelector(\r\n    (state) => ({\r\n      actionsLoading: state.products.actionsLoading,\r\n      productForEdit: state.products.productForEdit,\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(actions.fetchProduct(id));\r\n  }, [id, dispatch]);\r\n\r\n  useEffect(() => {\r\n    let _title = id ? \"\" : \"New Product\";\r\n    if (productForEdit && id) {\r\n      _title = `Edit product - ${productForEdit.part_number}`;\r\n    }\r\n\r\n    setTitle(_title);\r\n    suhbeader.setTitle(_title);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [productForEdit, id]);\r\n\r\n  const saveProduct = (values) => {\r\n      console.log('values', values);\r\n    \r\n    if (!id) {\r\n      dispatch(actions.createProduct(values)).then(() => backToProductsList());\r\n    } else {\r\n\r\n      dispatch(actions.updateProduct(values)).then(() => backToProductsList());\r\n    }\r\n  };\r\n\r\n  const btnRef = useRef();  \r\n  const saveProductClick = () => {\r\n    if (btnRef && btnRef.current) {\r\n      btnRef.current.click();\r\n    }\r\n  };\r\n\r\n  const backToProductsList = () => {\r\n    history.push(`/${ADMIN_ROUTE}/products`);\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      {actionsLoading && <ModalProgressBar />}\r\n      <CardHeader title={title}>\r\n        <CardHeaderToolbar>\r\n          <button\r\n            type=\"button\"\r\n            onClick={backToProductsList}\r\n            className=\"btn btn-light\"\r\n          >\r\n            <i className=\"fa fa-arrow-left\"></i>\r\n            Back\r\n          </button>\r\n          {`  `}\r\n          <button\r\n            type=\"submit\"\r\n            className=\"btn btn-info ml-2\"\r\n            onClick={saveProductClick}\r\n          >\r\n            Save\r\n          </button>\r\n        </CardHeaderToolbar>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <div className=\"mt-5\">\r\n            <ProductEditForm\r\n              actionsLoading={actionsLoading}\r\n              product={productForEdit || initProduct}\r\n              btnRef={btnRef}\r\n              saveProduct={saveProduct}\r\n            />\r\n        </div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n}\r\n","import React, { Suspense } from \"react\";\r\nimport { Redirect, Switch } from \"react-router-dom\";\r\nimport { ProductsPage } from \"./ProductsPage\";\r\nimport { ProductEdit } from \"./product-edit/ProductEdit\";\r\nimport { LayoutSplashScreen, ContentRoute } from \"../../../../../_metronic/layout\";\r\nimport { ADMIN_ROUTE } from '../../../../../app/pages/helper/api'\r\n\r\nexport default function ProductsPages() {\r\n  return (\r\n    <Suspense fallback={<LayoutSplashScreen />}>\r\n      <Switch>\r\n        <ContentRoute path={\"/\"+ADMIN_ROUTE+\"/products/new\"} component={ProductEdit} />\r\n        <ContentRoute\r\n          path={\"/\"+ADMIN_ROUTE+\"/products/:id/edit\"}\r\n          component={ProductEdit}\r\n        />\r\n        <ContentRoute path={\"/\"+ADMIN_ROUTE+'/products'} component={ProductsPage} />\r\n      </Switch>\r\n    </Suspense>\r\n  );\r\n}\r\n"],"sourceRoot":""}