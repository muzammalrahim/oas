{"version":3,"sources":["app/modules/ECommerce/_redux/specifications/specificationsActions.js","app/modules/ECommerce/_redux/specifications/specificationsCrud.js","app/modules/ECommerce/_redux/remarks/remarksActions.js","app/modules/ECommerce/_redux/remarks/remarksCrud.js","../node_modules/@material-ui/core/esm/Grid/Grid.js","app/modules/ECommerce/pages/enquiries/enquiries-loading-dialog/EnquiriesLoadingDialog.js","app/modules/ECommerce/_redux/enquiries/enquiriesCrud.js","app/modules/ECommerce/_redux/enquiries/enquiriesActions.js","app/modules/ECommerce/pages/enquiries/EnquiriesUIHelpers.js","app/modules/ECommerce/pages/enquiries/EnquiriesUIContext.js","app/modules/ECommerce/pages/enquiries/enquiry-delete-dialog/EnquiryDeleteDialog.js","app/modules/ECommerce/pages/enquiries/enquiries-delete-dialog/EnquiriesDeleteDialog.js","app/modules/ECommerce/pages/enquiries/enquiries-fetch-dialog/EnquiriesFetchDialog.js","app/modules/ECommerce/pages/enquiries/enquiries-update-status-dialog/EnquiriesUpdateStatusDialog.js","app/modules/ECommerce/pages/enquiries/enquiries-filter/EnquiriesFilter.js","app/modules/ECommerce/pages/enquiries/enquiries-table/column-formatters/ActionsColumnFormatter.js","app/modules/ECommerce/pages/enquiries/enquiries-table/column-formatters/DateFormatter.js","app/modules/ECommerce/pages/enquiries/enquiries-table/column-formatters/EmailFormatter.js","app/modules/ECommerce/pages/enquiries/enquiries-table/EnquiriesTable.js","app/modules/ECommerce/pages/enquiries/enquiries-grouping/EnquiriesGrouping.js","app/modules/ECommerce/pages/enquiries/EnquiriesCard.js","app/modules/ECommerce/pages/enquiries/EnquiriesPage.js","app/modules/ECommerce/pages/enquiries/enquiry-edit/EnquiryEditForm.js","app/modules/ECommerce/pages/enquiries/enquiry-specifications/SpecificationsUIHelper.js","app/modules/ECommerce/pages/enquiries/enquiry-specifications/SpecificationsUIContext.js","app/modules/ECommerce/pages/enquiries/enquiry-specifications/specification-edit-dialog/SpecificationEditForm.js","app/modules/ECommerce/pages/enquiries/enquiry-remarks/RemarksUIContext.js","app/modules/ECommerce/pages/enquiries/enquiry-remarks/remark-edit-dialog/RemarkEditForm.js","app/modules/ECommerce/pages/enquiries/enquiry-edit/EnquiryEdit.js","app/modules/ECommerce/pages/enquiries/enquiry-view/EnquiryView.js","app/modules/ECommerce/pages/enquiries/EnquiriesPages.js"],"names":["actions","specificationsSlice","fetchSpecifications","queryParams","productId","dispatch","startCall","callType","callTypes","list","axios","post","requestFromServer","then","response","data","totalCount","entities","specificationsFetched","catch","error","clientMessage","catchError","fetchSpecification","id","action","specificationId","get","specification","specificationFetched","specificationForEdit","undefined","deleteSpecification","delete","specificationDeleted","createSpecification","specificationForCreation","specificationCreated","updateSpecification","put","specificationUpdated","deleteSpecifications","ids","specificationsDeleted","remarksSlice","fetchRemarks","remarksFetched","fetchRemark","remarkId","remark","remarkFetched","remarkForEdit","deleteRemark","remarkDeleted","createRemark","remarkForCreation","remarkCreated","updateRemark","remarkUpdated","deleteRemarks","console","log","remarksDeleted","SPACINGS","GRID_SIZES","getOffset","val","div","arguments","length","parse","parseFloat","concat","String","replace","Grid","props","ref","_props$alignContent","alignContent","_props$alignItems","alignItems","classes","classNameProp","className","_props$component","component","Component","_props$container","container","_props$direction","direction","_props$item","item","_props$justify","justify","_props$lg","lg","_props$md","md","_props$sm","sm","_props$spacing","spacing","_props$wrap","wrap","_props$xl","xl","_props$xs","xs","_props$zeroMinWidth","zeroMinWidth","other","root","StyledGrid","theme","boxSizing","display","flexWrap","width","margin","minWidth","flexDirection","justifyContent","breakpoint","styles","forEach","themeSpacing","padding","generateGutter","breakpoints","keys","reduce","accumulator","key","globalStyles","size","Math","round","flexBasis","flexGrow","maxWidth","up","generateGrid","name","EnquiriesLoadingDialog","isLoading","useSelector","state","enquiries","listLoading","shallowEqual","useEffect","text","PRODUCTS_URL","API_URL","enquiriesSlice","fetchEnquiries","pageNumber","filter","params","page","count","results","next","URL","searchParams","enquiriesFetched","fetchEnquiry","enquiryId","enquiry","supplier","enquiry_manufacturer","enquiry_category","enquiryFetched","enquiryForEdit","deleteEnquiry","enquiryDeleted","createEnquiry","enquiryForCreation","enquiryCreated","updateEnquiry","enquiryUpdated","updateEnquiriesStatus","status","enquiriesStatusUpdated","deleteEnquiries","enquiriesDeleted","EnquiryStatusCssClasses","EnquiryStatusTitles","EnquiryConditionTitles","YES_NO_OPTIONS","UOM_CHOICES","defaultSorted","dataField","order","sizePerPageList","value","initialFilter","model","manufacture","VINCode","sortOrder","sortField","pageSize","EnquiriesUIContext","createContext","useEnquiriesUIContext","useContext","Consumer","EnquiriesUIProvider","enquiriesUIEvents","children","useState","setQueryParamsBase","setIds","setQueryParams","useCallback","nextQueryParams","prevQueryParams","isFunction","isEqual","newEnquiryButtonClick","openViewEnquiryPage","openEditEnquiryPage","openDeleteEnquiryDialog","openDeleteEnquiriesDialog","openFetchEnquiriesDialog","openUpdateEnquiriesStatusDialog","Provider","EnquiryDeleteDialog","show","onHide","enquiriesUIContext","enquiriesUIProps","useMemo","useDispatch","actionsLoading","Modal","aria-labelledby","variant","Header","closeButton","Title","Body","Footer","type","onClick","EnquiriesDeleteDialog","selectedEnquiries","_enquiries","find","el","push","EnquiriesFetchDialog","map","style","EnquiriesUpdateStatusDialog","setStatus","onChange","e","target","EnquiriesFilter","applyFilter","values","newQueryParams","searchText","search","prepareFilter","initialValues","onSubmit","handleSubmit","handleBlur","setFieldValue","handleChange","placeholder","onBlur","ActionsColumnFormatter","cellContent","row","rowIndex","OverlayTrigger","overlay","Tooltip","src","toAbsoluteUrl","DateFormatter","getDateFormat","created_at","EmailFormatter","href","email_address","EnquiriesTable","currentState","columns","sort","sortCaret","formatter","columnFormatters","formatExtraData","headerClasses","paginationOptions","custom","totalSize","uiHelpers","sizePerPage","onPageChange","onSizePerPageChange","pagination","paginationFactory","paginationProps","paginationTableProps","wrapperClasses","bootstrap4","bordered","remote","keyField","onTableChange","getHandlerTableChange","selectRow","getSelectRow","EnquiriesGrouping","EnquiriesCard","title","EnquiriesPage","history","ADMIN_ROUTE","path","match","CreatableAsyncPaginate","withAsyncPaginate","Creatable","EnquiryEditSchema","Yup","shape","part_number","min","max","required","alt_part_number","EnquiryEditForm","btnRef","saveEnquiry","categories","setCategories","manufacturers","setManufacturers","suppliers","setSuppliers","modelsLoaded","setModelsLoaded","createCategory","option","label","createManfacturer","models","opt","i","company_name","EnquiryCategory","Manufacturer","Supplier","enableReinitialize","validationSchema","Input","debounceTimeout","DROPDOWN_WAIT","onCreateOption","isClearable","loadOptions","prevOptions","condition","index","as","SpecificationsUIContext","specId","RemarksUIContext","dueDate","nullable","initEnquiry","description","tag_date","hazmat","unit_price","unit_of_measure","quantity","turn_around_time","hot_sale_item","certification","EnquiryEdit","suhbeader","useSubheader","setTitle","_title","useRef","backToEnquiriesList","current","click","EnquiryView","company","country","phone_number","EnquiriesPages","fallback"],"mappings":"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","file":"static/js/8.fb79082f.chunk.js","sourcesContent":["import * as requestFromServer from \"./specificationsCrud\";\r\nimport {specificationsSlice, callTypes} from \"./specificationsSlice\";\r\n\r\nconst {actions} = specificationsSlice;\r\n\r\nexport const fetchSpecifications = (queryParams, productId) => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.list }));\r\n  if (!productId) {\r\n    return dispatch(\r\n      actions.specificationsFetched({ totalCount: 0, entities: null })\r\n    );\r\n  }\r\n\r\n  return requestFromServer\r\n    .findSpecifications(queryParams, productId)\r\n    .then(response => {\r\n      const { totalCount, entities } = response.data;\r\n      dispatch(actions.specificationsFetched({ totalCount, entities }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't find specifications\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.list }));\r\n    });\r\n};\r\n\r\nexport const fetchSpecification = id => dispatch => {\r\n  if (!id) {\r\n    return dispatch(\r\n      actions.specificationFetched({ specificationForEdit: undefined })\r\n    );\r\n  }\r\n\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .getSpecificationById(id)\r\n    .then(response => {\r\n      const specification = response.data;\r\n      dispatch(\r\n        actions.specificationFetched({ specificationForEdit: specification })\r\n      );\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't find specification\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const deleteSpecification = id => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .deleteSpecification(id)\r\n    .then(response => {\r\n      dispatch(actions.specificationDeleted({ id }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't delete specification\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const createSpecification = specificationForCreation => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .createSpecification(specificationForCreation)\r\n    .then(response => {\r\n      const { specification } = response.data;\r\n      dispatch(actions.specificationCreated({ specification }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't create specification\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const updateSpecification = specification => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .updateSpecification(specification)\r\n    .then(() => {\r\n      dispatch(actions.specificationUpdated({ specification }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't update specification\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const deleteSpecifications = ids => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .deleteSpecifications(ids)\r\n    .then(() => {\r\n      dispatch(actions.specificationsDeleted({ ids }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't delete specifications\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n","import axios from \"axios\";\r\n\r\nexport const SPECIFICATIONS_URL = \"api/specifications\";\r\n\r\n// CREATE =>  POST: add a new specifications to the server\r\nexport function createSpecification(specification) {\r\n  return axios.post(SPECIFICATIONS_URL, { specification });\r\n}\r\n\r\n// READ\r\n// Server should return filtered specifications by productId\r\nexport function getAllProductSpecificationsByProductId(productId) {\r\n  return axios.get(`${SPECIFICATIONS_URL}?productId=${productId}`);\r\n}\r\n\r\nexport function getSpecificationById(specificationId) {\r\n  return axios.get(`${SPECIFICATIONS_URL}/${specificationId}`);\r\n}\r\n\r\n// Server should return sorted/filtered specifications and merge with items from state\r\n// TODO: Change your URL to REAL API, right now URL is 'api/specificationsfind/{productId}'. Should be 'api/specifications/find/{productId}'!!!\r\nexport function findSpecifications(queryParams, productId) {\r\n  return axios.post(`${SPECIFICATIONS_URL}find/${productId}`, { queryParams });\r\n}\r\n\r\n// UPDATE => PUT: update the specification\r\nexport function updateSpecification(specification) {\r\n  return axios.put(`${SPECIFICATIONS_URL}/${specification.id}`, {\r\n    specification\r\n  });\r\n}\r\n\r\n// DELETE => delete the specification\r\nexport function deleteSpecification(specificationId) {\r\n  return axios.delete(`${SPECIFICATIONS_URL}/${specificationId}`);\r\n}\r\n\r\n// DELETE specifications by ids\r\nexport function deleteSpecifications(ids) {\r\n  return axios.post(`${SPECIFICATIONS_URL}/deleteSpecifications`, { ids });\r\n}\r\n","import * as requestFromServer from \"./remarksCrud\";\r\nimport {remarksSlice, callTypes} from \"./remarksSlice\";\r\n\r\nconst {actions} = remarksSlice;\r\n\r\nexport const fetchRemarks = (queryParams, productId) => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.list }));\r\n  if (!productId) {\r\n    return dispatch(actions.remarksFetched({ totalCount: 0, entities: null }));\r\n  }\r\n\r\n  return requestFromServer\r\n    .findRemarks(queryParams, productId)\r\n    .then(response => {\r\n      const { totalCount, entities } = response.data;\r\n      dispatch(actions.remarksFetched({ totalCount, entities }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't find remarks\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.list }));\r\n    });\r\n};\r\n\r\nexport const fetchRemark = id => dispatch => {\r\n  if (!id) {\r\n    return dispatch(actions.remarkFetched({ remarkForEdit: undefined }));\r\n  }\r\n\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .getRemarkById(id)\r\n    .then(response => {\r\n      const remark = response.data;\r\n      dispatch(actions.remarkFetched({ remarkForEdit: remark }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't find remark\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const deleteRemark = id => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .deleteRemark(id)\r\n    .then(response => {\r\n      dispatch(actions.remarkDeleted({ id }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't delete remark\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const createRemark = remarkForCreation => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .createRemark(remarkForCreation)\r\n    .then(response => {\r\n      const { remark } = response.data;\r\n      dispatch(actions.remarkCreated({ remark }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't create remark\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const updateRemark = remark => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .updateRemark(remark)\r\n    .then(() => {\r\n      dispatch(actions.remarkUpdated({ remark }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't update remark\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const deleteRemarks = ids => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .deleteRemarks(ids)\r\n    .then(() => {\r\n      console.log(\"delete return\");\r\n      dispatch(actions.remarksDeleted({ ids }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't delete remarks\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n","import axios from \"axios\";\r\n\r\nexport const REMARKS_URL = \"api/remarks\";\r\n\r\n// CREATE =>  POST: add a new remark to the server\r\nexport function createRemark(remark) {\r\n  return axios.post(REMARKS_URL, { remark });\r\n}\r\n\r\n// READ\r\n// Server should return filtered remarks by productId\r\nexport function getAllProductRemarksByProductId(productId) {\r\n  return axios.get(`${REMARKS_URL}?productId=${productId}`);\r\n}\r\n\r\nexport function getRemarkById(remarkId) {\r\n  return axios.get(`${REMARKS_URL}/${remarkId}`);\r\n}\r\n\r\n// Server should return sorted/filtered remarks and merge with items from state\r\n// TODO: Change your URL to REAL API, right now URL is 'api/remarksfind/{productId}'. Should be 'api/remarks/find/{productId}'!!!\r\nexport function findRemarks(queryParams, productId) {\r\n  return axios.post(`${REMARKS_URL}find/${productId}`, { queryParams });\r\n}\r\n\r\n// UPDATE => PUT: update the remark\r\nexport function updateRemark(remark) {\r\n  return axios.put(`${REMARKS_URL}/${remark.id}`, { remark });\r\n}\r\n\r\n// DELETE => delete the remark\r\nexport function deleteRemark(remarkId) {\r\n  return axios.delete(`${REMARKS_URL}/${remarkId}`);\r\n}\r\n\r\n// DELETE Remarks by ids\r\nexport function deleteRemarks(ids) {\r\n  return axios.post(`${REMARKS_URL}/deleteRemarks`, { ids });\r\n}\r\n","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\"; // A grid component using the following libs as inspiration.\n//\n// For the implementation:\n// - https://getbootstrap.com/docs/4.3/layout/grid/\n// - https://github.com/kristoferjoseph/flexboxgrid/blob/master/src/css/flexboxgrid.css\n// - https://github.com/roylee0704/react-flexbox-grid\n// - https://material.angularjs.org/latest/layout/introduction\n//\n// Follow this flexbox Guide to better understand the underlying model:\n// - https://css-tricks.com/snippets/css/a-guide-to-flexbox/\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport requirePropFactory from '../utils/requirePropFactory';\nvar SPACINGS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nvar GRID_SIZES = ['auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n\nfunction generateGrid(globalStyles, theme, breakpoint) {\n  var styles = {};\n  GRID_SIZES.forEach(function (size) {\n    var key = \"grid-\".concat(breakpoint, \"-\").concat(size);\n\n    if (size === true) {\n      // For the auto layouting\n      styles[key] = {\n        flexBasis: 0,\n        flexGrow: 1,\n        maxWidth: '100%'\n      };\n      return;\n    }\n\n    if (size === 'auto') {\n      styles[key] = {\n        flexBasis: 'auto',\n        flexGrow: 0,\n        maxWidth: 'none'\n      };\n      return;\n    } // Keep 7 significant numbers.\n\n\n    var width = \"\".concat(Math.round(size / 12 * 10e7) / 10e5, \"%\"); // Close to the bootstrap implementation:\n    // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\n\n    styles[key] = {\n      flexBasis: width,\n      flexGrow: 0,\n      maxWidth: width\n    };\n  }); // No need for a media query for the first size.\n\n  if (breakpoint === 'xs') {\n    _extends(globalStyles, styles);\n  } else {\n    globalStyles[theme.breakpoints.up(breakpoint)] = styles;\n  }\n}\n\nfunction getOffset(val) {\n  var div = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  var parse = parseFloat(val);\n  return \"\".concat(parse / div).concat(String(val).replace(String(parse), '') || 'px');\n}\n\nfunction generateGutter(theme, breakpoint) {\n  var styles = {};\n  SPACINGS.forEach(function (spacing) {\n    var themeSpacing = theme.spacing(spacing);\n\n    if (themeSpacing === 0) {\n      return;\n    }\n\n    styles[\"spacing-\".concat(breakpoint, \"-\").concat(spacing)] = {\n      margin: \"-\".concat(getOffset(themeSpacing, 2)),\n      width: \"calc(100% + \".concat(getOffset(themeSpacing), \")\"),\n      '& > $item': {\n        padding: getOffset(themeSpacing, 2)\n      }\n    };\n  });\n  return styles;\n} // Default CSS values\n// flex: '0 1 auto',\n// flexDirection: 'row',\n// alignItems: 'flex-start',\n// flexWrap: 'nowrap',\n// justifyContent: 'flex-start',\n\n\nexport var styles = function styles(theme) {\n  return _extends(_extends({\n    /* Styles applied to the root element. */\n    root: {},\n\n    /* Styles applied to the root element if `container={true}`. */\n    container: {\n      boxSizing: 'border-box',\n      display: 'flex',\n      flexWrap: 'wrap',\n      width: '100%'\n    },\n\n    /* Styles applied to the root element if `item={true}`. */\n    item: {\n      boxSizing: 'border-box',\n      margin: '0' // For instance, it's useful when used with a `figure` element.\n\n    },\n\n    /* Styles applied to the root element if `zeroMinWidth={true}`. */\n    zeroMinWidth: {\n      minWidth: 0\n    },\n\n    /* Styles applied to the root element if `direction=\"column\"`. */\n    'direction-xs-column': {\n      flexDirection: 'column'\n    },\n\n    /* Styles applied to the root element if `direction=\"column-reverse\"`. */\n    'direction-xs-column-reverse': {\n      flexDirection: 'column-reverse'\n    },\n\n    /* Styles applied to the root element if `direction=\"row-reverse\"`. */\n    'direction-xs-row-reverse': {\n      flexDirection: 'row-reverse'\n    },\n\n    /* Styles applied to the root element if `wrap=\"nowrap\"`. */\n    'wrap-xs-nowrap': {\n      flexWrap: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `wrap=\"reverse\"`. */\n    'wrap-xs-wrap-reverse': {\n      flexWrap: 'wrap-reverse'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"center\"`. */\n    'align-items-xs-center': {\n      alignItems: 'center'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"flex-start\"`. */\n    'align-items-xs-flex-start': {\n      alignItems: 'flex-start'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"flex-end\"`. */\n    'align-items-xs-flex-end': {\n      alignItems: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"baseline\"`. */\n    'align-items-xs-baseline': {\n      alignItems: 'baseline'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"center\"`. */\n    'align-content-xs-center': {\n      alignContent: 'center'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"flex-start\"`. */\n    'align-content-xs-flex-start': {\n      alignContent: 'flex-start'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"flex-end\"`. */\n    'align-content-xs-flex-end': {\n      alignContent: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"space-between\"`. */\n    'align-content-xs-space-between': {\n      alignContent: 'space-between'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"space-around\"`. */\n    'align-content-xs-space-around': {\n      alignContent: 'space-around'\n    },\n\n    /* Styles applied to the root element if `justify=\"center\"`. */\n    'justify-xs-center': {\n      justifyContent: 'center'\n    },\n\n    /* Styles applied to the root element if `justify=\"flex-end\"`. */\n    'justify-xs-flex-end': {\n      justifyContent: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-between\"`. */\n    'justify-xs-space-between': {\n      justifyContent: 'space-between'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-around\"`. */\n    'justify-xs-space-around': {\n      justifyContent: 'space-around'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-evenly\"`. */\n    'justify-xs-space-evenly': {\n      justifyContent: 'space-evenly'\n    }\n  }, generateGutter(theme, 'xs')), theme.breakpoints.keys.reduce(function (accumulator, key) {\n    // Use side effect over immutability for better performance.\n    generateGrid(accumulator, theme, key);\n    return accumulator;\n  }, {}));\n};\nvar Grid = React.forwardRef(function Grid(props, ref) {\n  var _props$alignContent = props.alignContent,\n      alignContent = _props$alignContent === void 0 ? 'stretch' : _props$alignContent,\n      _props$alignItems = props.alignItems,\n      alignItems = _props$alignItems === void 0 ? 'stretch' : _props$alignItems,\n      classes = props.classes,\n      classNameProp = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$container = props.container,\n      container = _props$container === void 0 ? false : _props$container,\n      _props$direction = props.direction,\n      direction = _props$direction === void 0 ? 'row' : _props$direction,\n      _props$item = props.item,\n      item = _props$item === void 0 ? false : _props$item,\n      _props$justify = props.justify,\n      justify = _props$justify === void 0 ? 'flex-start' : _props$justify,\n      _props$lg = props.lg,\n      lg = _props$lg === void 0 ? false : _props$lg,\n      _props$md = props.md,\n      md = _props$md === void 0 ? false : _props$md,\n      _props$sm = props.sm,\n      sm = _props$sm === void 0 ? false : _props$sm,\n      _props$spacing = props.spacing,\n      spacing = _props$spacing === void 0 ? 0 : _props$spacing,\n      _props$wrap = props.wrap,\n      wrap = _props$wrap === void 0 ? 'wrap' : _props$wrap,\n      _props$xl = props.xl,\n      xl = _props$xl === void 0 ? false : _props$xl,\n      _props$xs = props.xs,\n      xs = _props$xs === void 0 ? false : _props$xs,\n      _props$zeroMinWidth = props.zeroMinWidth,\n      zeroMinWidth = _props$zeroMinWidth === void 0 ? false : _props$zeroMinWidth,\n      other = _objectWithoutProperties(props, [\"alignContent\", \"alignItems\", \"classes\", \"className\", \"component\", \"container\", \"direction\", \"item\", \"justify\", \"lg\", \"md\", \"sm\", \"spacing\", \"wrap\", \"xl\", \"xs\", \"zeroMinWidth\"]);\n\n  var className = clsx(classes.root, classNameProp, container && [classes.container, spacing !== 0 && classes[\"spacing-xs-\".concat(String(spacing))]], item && classes.item, zeroMinWidth && classes.zeroMinWidth, direction !== 'row' && classes[\"direction-xs-\".concat(String(direction))], wrap !== 'wrap' && classes[\"wrap-xs-\".concat(String(wrap))], alignItems !== 'stretch' && classes[\"align-items-xs-\".concat(String(alignItems))], alignContent !== 'stretch' && classes[\"align-content-xs-\".concat(String(alignContent))], justify !== 'flex-start' && classes[\"justify-xs-\".concat(String(justify))], xs !== false && classes[\"grid-xs-\".concat(String(xs))], sm !== false && classes[\"grid-sm-\".concat(String(sm))], md !== false && classes[\"grid-md-\".concat(String(md))], lg !== false && classes[\"grid-lg-\".concat(String(lg))], xl !== false && classes[\"grid-xl-\".concat(String(xl))]);\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: className,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Grid.propTypes = {\n  /**\n   * Defines the `align-content` style property.\n   * It's applied for all screen sizes.\n   */\n  alignContent: PropTypes.oneOf(['stretch', 'center', 'flex-start', 'flex-end', 'space-between', 'space-around']),\n\n  /**\n   * Defines the `align-items` style property.\n   * It's applied for all screen sizes.\n   */\n  alignItems: PropTypes.oneOf(['flex-start', 'center', 'flex-end', 'stretch', 'baseline']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the component will have the flex *container* behavior.\n   * You should be wrapping *items* with a *container*.\n   */\n  container: PropTypes.bool,\n\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   */\n  direction: PropTypes.oneOf(['row', 'row-reverse', 'column', 'column-reverse']),\n\n  /**\n   * If `true`, the component will have the flex *item* behavior.\n   * You should be wrapping *items* with a *container*.\n   */\n  item: PropTypes.bool,\n\n  /**\n   * Defines the `justify-content` style property.\n   * It is applied for all screen sizes.\n   */\n  justify: PropTypes.oneOf(['flex-start', 'center', 'flex-end', 'space-between', 'space-around', 'space-evenly']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `lg` breakpoint and wider screens if not overridden.\n   */\n  lg: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `md` breakpoint and wider screens if not overridden.\n   */\n  md: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `sm` breakpoint and wider screens if not overridden.\n   */\n  sm: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the space between the type `item` component.\n   * It can only be used on a type `container` component.\n   */\n  spacing: PropTypes.oneOf(SPACINGS),\n\n  /**\n   * Defines the `flex-wrap` style property.\n   * It's applied for all screen sizes.\n   */\n  wrap: PropTypes.oneOf(['nowrap', 'wrap', 'wrap-reverse']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `xl` breakpoint and wider screens.\n   */\n  xl: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for all the screen sizes with the lowest priority.\n   */\n  xs: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * If `true`, it sets `min-width: 0` on the item.\n   * Refer to the limitations section of the documentation to better understand the use case.\n   */\n  zeroMinWidth: PropTypes.bool\n} : void 0;\nvar StyledGrid = withStyles(styles, {\n  name: 'MuiGrid'\n})(Grid);\n\nif (process.env.NODE_ENV !== 'production') {\n  var requireProp = requirePropFactory('Grid');\n  StyledGrid.propTypes = _extends(_extends({}, StyledGrid.propTypes), {}, {\n    alignContent: requireProp('container'),\n    alignItems: requireProp('container'),\n    direction: requireProp('container'),\n    justify: requireProp('container'),\n    lg: requireProp('item'),\n    md: requireProp('item'),\n    sm: requireProp('item'),\n    spacing: requireProp('container'),\n    wrap: requireProp('container'),\n    xs: requireProp('item'),\n    zeroMinWidth: requireProp('item')\n  });\n}\n\nexport default StyledGrid;","import React, {useEffect} from \"react\";\r\nimport {shallowEqual, useSelector} from \"react-redux\";\r\nimport {LoadingDialog} from \"../../../../../../_metronic/_partials/controls\";\r\n\r\nexport function EnquiriesLoadingDialog() {\r\n  const { isLoading } = useSelector(\r\n    state => ({ isLoading: state.enquiries.listLoading }),\r\n    shallowEqual\r\n  );\r\n  useEffect(() => {}, [isLoading]);\r\n  return <LoadingDialog isLoading={isLoading} text=\"Loading ...\" />;\r\n}\r\n","import axios from \"axios\";\r\nimport { API_URL } from '../../../../pages/helper/api'\r\n\r\nexport const PRODUCTS_URL = API_URL + \"enquiry\";\r\n\r\n// CREATE =>  POST: add a new enquiry to the server\r\nexport function createEnquiry(enquiry) {\r\n  return axios.post(PRODUCTS_URL+'/', { ...enquiry });\r\n}\r\n\r\n// READ\r\nexport function getAllEnquiries({pageNumber, filter}) {\r\n  return axios.get(PRODUCTS_URL,  {\r\n    params: {...filter, page:pageNumber}\r\n  });\r\n}\r\n\r\nexport function getEnquiryById(enquiryId) {\r\n  return axios.get(`${PRODUCTS_URL}/${enquiryId}`);\r\n}\r\n\r\n// Method from server should return QueryResultsModel(items: any[], totalsCount: number)\r\n// items => filtered/sorted result\r\nexport function findEnquiries(queryParams) {\r\n  return axios.post(`${PRODUCTS_URL}/find`, { queryParams });\r\n}\r\n\r\n// UPDATE => PUT: update the procuct on the server\r\nexport function updateEnquiry(enquiry) {\r\n  return axios.put(`${PRODUCTS_URL}/${enquiry.id}/`, { ...enquiry });\r\n}\r\n\r\n// UPDATE Status\r\nexport function updateStatusForEnquiries(ids, status) {\r\n  return axios.post(`${PRODUCTS_URL}/updateStatusForEnquiries`, {\r\n    ids,\r\n    status\r\n  });\r\n}\r\n\r\n// DELETE => delete the enquiry from the server\r\nexport function deleteEnquiry(enquiryId) {\r\n  return axios.delete(`${PRODUCTS_URL}/${enquiryId}`);\r\n}\r\n\r\n// DELETE Enquiries by ids\r\nexport function deleteEnquiries(ids) {\r\n  return axios.post(`${PRODUCTS_URL}/delete-all/`, { ids });\r\n}\r\n","import * as requestFromServer from \"./enquiriesCrud\";\r\nimport {enquiriesSlice, callTypes} from \"./enquiriesSlice\";\r\n\r\nconst {actions} = enquiriesSlice;\r\n\r\nexport const fetchEnquiries = queryParams => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.list }));\r\n  return requestFromServer\r\n    .getAllEnquiries(queryParams)\r\n    .then(response => {\r\n      const { count, results, next } = response.data;\r\n      let pageNumber = null;\r\n      if(next) {\r\n        let url = new URL(next);\r\n        pageNumber = url.searchParams.get('page') ;\r\n      }\r\n      dispatch(actions.enquiriesFetched({ count, results, pageNumber}));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't find enquiries\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.list }));\r\n    });\r\n};\r\n\r\nexport const fetchEnquiry = id => dispatch => {\r\n  if (!id) {\r\n    return dispatch(actions.enquiryFetched({ enquiryForEdit: undefined }));\r\n  }\r\n\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .getEnquiryById(id)\r\n    .then(response => {\r\n      const enquiry = {\r\n        ...response.data, \r\n        supplier:response.data.supplier ? response.data.supplier.id : \"\",\r\n        enquiry_manufacturer:response.data.enquiry_manufacturer ? response.data.enquiry_manufacturer.id : \"\",\r\n        enquiry_category:response.data.enquiry_category ? response.data.enquiry_category.id : \"\",\r\n      };\r\n\r\n      dispatch(actions.enquiryFetched({ enquiryForEdit: enquiry }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't find enquiry\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const deleteEnquiry = id => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .deleteEnquiry(id)\r\n    .then(response => {\r\n      dispatch(actions.enquiryDeleted({ id }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't delete enquiry\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const createEnquiry = enquiryForCreation => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .createEnquiry(enquiryForCreation)\r\n    .then(response => {\r\n      const { data } = response;\r\n      dispatch(actions.enquiryCreated({ enquiry:data }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't create enquiry\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const updateEnquiry = enquiry => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  console.log('proudct', enquiry);\r\n  return requestFromServer\r\n    .updateEnquiry(enquiry)\r\n    .then(() => {\r\n      dispatch(actions.enquiryUpdated({ enquiry }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't update enquiry\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const updateEnquiriesStatus = (ids, status) => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .updateStatusForEnquiries(ids, status)\r\n    .then(() => {\r\n      dispatch(actions.enquiriesStatusUpdated({ ids, status }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't update enquiries status\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const deleteEnquiries = ids => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .deleteEnquiries(ids)\r\n    .then(() => {\r\n      dispatch(actions.enquiriesDeleted({ ids }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't delete enquiries\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n","export const EnquiryStatusCssClasses = [\"danger\", \"success\", \"info\", \"\"];\r\nexport const EnquiryStatusTitles = [\"Inactive\", \"Active\"];\r\nexport const EnquiryConditionCssClasses = [\"success\", \"danger\", \"\"];\r\nexport const EnquiryConditionTitles = ['NE','NS', 'SV', 'AR', 'FN', 'US', 'RP'];\r\nexport const YES_NO_OPTIONS = ['YES', 'NO'];\r\nexport const UOM_CHOICES = ['CM', 'BOX', 'KG'];\r\nexport const defaultSorted = [{ dataField: \"id\", order: \"asc\" }];\r\nexport const sizePerPageList = [\r\n  { text: \"10\", value: 10 },\r\n  { text: \"25\", value: 25 },\r\n  { text: \"50\", value: 50 }\r\n];\r\nexport const initialFilter = {\r\n  filter: {\r\n    model: \"\",\r\n    manufacture: \"\",\r\n    VINCode: \"\"\r\n  },\r\n  sortOrder: \"asc\", // asc||desc\r\n  sortField: \"VINCode\",\r\n  pageNumber: 1,\r\n  pageSize: 10\r\n};\r\nexport const AVAILABLE_COLORS = [\r\n  \"Red\",\r\n  \"CadetBlue\",\r\n  \"Eagle\",\r\n  \"Gold\",\r\n  \"LightSlateGrey\",\r\n  \"RoyalBlue\",\r\n  \"Crimson\",\r\n  \"Blue\",\r\n  \"Sienna\",\r\n  \"Indigo\",\r\n  \"Green\",\r\n  \"Violet\",\r\n  \"GoldenRod\",\r\n  \"OrangeRed\",\r\n  \"Khaki\",\r\n  \"Teal\",\r\n  \"Purple\",\r\n  \"Orange\",\r\n  \"Pink\",\r\n  \"Black\",\r\n  \"DarkTurquoise\"\r\n];\r\n\r\nexport const AVAILABLE_MANUFACTURES = [\r\n  \"Pontiac\",\r\n  \"Kia\",\r\n  \"Lotus\",\r\n  \"Subaru\",\r\n  \"Jeep\",\r\n  \"Isuzu\",\r\n  \"Mitsubishi\",\r\n  \"Oldsmobile\",\r\n  \"Chevrolet\",\r\n  \"Chrysler\",\r\n  \"Audi\",\r\n  \"Suzuki\",\r\n  \"GMC\",\r\n  \"Cadillac\",\r\n  \"Infinity\",\r\n  \"Mercury\",\r\n  \"Dodge\",\r\n  \"Ram\",\r\n  \"Lexus\",\r\n  \"Lamborghini\",\r\n  \"Honda\",\r\n  \"Nissan\",\r\n  \"Ford\",\r\n  \"Hyundai\",\r\n  \"Saab\",\r\n  \"Toyota\"\r\n];\r\n","import React, { createContext, useContext, useState, useCallback } from \"react\";\r\nimport { isEqual, isFunction } from \"lodash\";\r\nimport { initialFilter } from \"./EnquiriesUIHelpers\";\r\n\r\nconst EnquiriesUIContext = createContext();\r\n\r\nexport function useEnquiriesUIContext() {\r\n  return useContext(EnquiriesUIContext);\r\n}\r\n\r\nexport const EnquiriesUIConsumer = EnquiriesUIContext.Consumer;\r\n\r\nexport function EnquiriesUIProvider({ enquiriesUIEvents, children }) {\r\n  const [queryParams, setQueryParamsBase] = useState(initialFilter);\r\n  const [ids, setIds] = useState([]);\r\n  const setQueryParams = useCallback((nextQueryParams) => {\r\n    setQueryParamsBase((prevQueryParams) => {\r\n      if (isFunction(nextQueryParams)) {\r\n        nextQueryParams = nextQueryParams(prevQueryParams);\r\n      }\r\n\r\n      if (isEqual(prevQueryParams, nextQueryParams)) {\r\n        return prevQueryParams;\r\n      }\r\n\r\n      return nextQueryParams;\r\n    });\r\n  }, []);\r\n\r\n  const value = {\r\n    queryParams,\r\n    setQueryParamsBase,\r\n    ids,\r\n    setIds,\r\n    setQueryParams,\r\n    newEnquiryButtonClick: enquiriesUIEvents.newEnquiryButtonClick,\r\n    openViewEnquiryPage:enquiriesUIEvents.openViewEnquiryPage,\r\n    openEditEnquiryPage: enquiriesUIEvents.openEditEnquiryPage,\r\n    openDeleteEnquiryDialog: enquiriesUIEvents.openDeleteEnquiryDialog,\r\n    openDeleteEnquiriesDialog: enquiriesUIEvents.openDeleteEnquiriesDialog,\r\n    openFetchEnquiriesDialog: enquiriesUIEvents.openFetchEnquiriesDialog,\r\n    openUpdateEnquiriesStatusDialog:\r\n      enquiriesUIEvents.openUpdateEnquiriesStatusDialog,\r\n  };\r\n\r\n  return (\r\n    <EnquiriesUIContext.Provider value={value}>\r\n      {children}\r\n    </EnquiriesUIContext.Provider>\r\n  );\r\n}\r\n","/* eslint-disable no-restricted-imports */\r\nimport React, { useEffect, useMemo } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport { ModalProgressBar } from \"../../../../../../_metronic/_partials/controls\";\r\nimport * as actions from \"../../../_redux/enquiries/enquiriesActions\";\r\nimport { useEnquiriesUIContext } from \"../EnquiriesUIContext\";\r\n\r\nexport function EnquiryDeleteDialog({ id, show, onHide }) {\r\n  // Enquiries UI Context\r\n  const enquiriesUIContext = useEnquiriesUIContext();\r\n  const enquiriesUIProps = useMemo(() => {\r\n    return {\r\n      setIds: enquiriesUIContext.setIds,\r\n      queryParams: enquiriesUIContext.queryParams,\r\n    };\r\n  }, [enquiriesUIContext]);\r\n\r\n  // Enquiries Redux state\r\n  const dispatch = useDispatch();\r\n  const { isLoading } = useSelector(\r\n    (state) => ({ isLoading: state.enquiries.actionsLoading }),\r\n    shallowEqual\r\n  );\r\n\r\n  // if !id we should close modal\r\n  useEffect(() => {\r\n    if (!id) {\r\n      onHide();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [id]);\r\n\r\n  // looking for loading/dispatch\r\n  useEffect(() => {}, [isLoading, dispatch]);\r\n\r\n  const deleteEnquiry = () => {\r\n    // server request for deleting enquiry by id\r\n    dispatch(actions.deleteEnquiry(id)).then(() => {\r\n      // refresh list after deletion\r\n      dispatch(actions.fetchEnquiries(enquiriesUIProps.queryParams));\r\n      // clear selections list\r\n      enquiriesUIProps.setIds([]);\r\n      // closing delete modal\r\n      onHide();\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      show={show}\r\n      onHide={onHide}\r\n      aria-labelledby=\"example-modal-sizes-title-lg\"\r\n    >\r\n      {isLoading && <ModalProgressBar variant=\"query\" />}\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n          Enquiry Delete\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        {!isLoading && (\r\n          <span>Are you sure to permanently delete this enquiry?</span>\r\n        )}\r\n        {isLoading && <span>Enquiry is deleting...</span>}\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            onClick={onHide}\r\n            className=\"btn btn-light btn-elevate\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <> </>\r\n          <button\r\n            type=\"button\"\r\n            onClick={deleteEnquiry}\r\n            className=\"btn btn-danger btn-elevate\"\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n","/* eslint-disable no-restricted-imports */\r\nimport React, { useEffect, useMemo } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport { ModalProgressBar } from \"../../../../../../_metronic/_partials/controls\";\r\nimport * as actions from \"../../../_redux/enquiries/enquiriesActions\";\r\nimport { useEnquiriesUIContext } from \"../EnquiriesUIContext\";\r\n\r\nexport function EnquiriesDeleteDialog({ show, onHide }) {\r\n  // Enquiries UI Context\r\n  const enquiriesUIContext = useEnquiriesUIContext();\r\n  const enquiriesUIProps = useMemo(() => {\r\n    return {\r\n      ids: enquiriesUIContext.ids,\r\n      setIds: enquiriesUIContext.setIds,\r\n      queryParams: enquiriesUIContext.queryParams,\r\n    };\r\n  }, [enquiriesUIContext]);\r\n\r\n  // Enquiries Redux state\r\n  const dispatch = useDispatch();\r\n  const { isLoading } = useSelector(\r\n    (state) => ({ isLoading: state.enquiries.actionsLoading }),\r\n    shallowEqual\r\n  );\r\n\r\n  // looking for loading/dispatch\r\n  useEffect(() => {}, [isLoading, dispatch]);\r\n\r\n  // if there weren't selected enquiries we should close modal\r\n  useEffect(() => {\r\n    if (!enquiriesUIProps.ids || enquiriesUIProps.ids.length === 0) {\r\n      onHide();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [enquiriesUIProps.ids]);\r\n\r\n  const deleteEnquiries = () => {\r\n    // server request for deleting enquiry by seleted ids\r\n    dispatch(actions.deleteEnquiries(enquiriesUIProps.ids)).then(() => {\r\n      // refresh list after deletion\r\n      dispatch(actions.fetchEnquiries(enquiriesUIProps.queryParams)).then(() => {\r\n        // clear selections list\r\n        enquiriesUIProps.setIds([]);\r\n        // closing delete modal\r\n        onHide();\r\n      });\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      show={show}\r\n      onHide={onHide}\r\n      aria-labelledby=\"example-modal-sizes-title-lg\"\r\n    >\r\n      {isLoading && <ModalProgressBar />}\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n          Enquiries Delete\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        {!isLoading && (\r\n          <span>Are you sure to permanently delete selected enquiries?</span>\r\n        )}\r\n        {isLoading && <span>Enquiries are deleting...</span>}\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            onClick={onHide}\r\n            className=\"btn btn-light btn-elevate\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <> </>\r\n          <button\r\n            type=\"button\"\r\n            onClick={deleteEnquiries}\r\n            className=\"btn btn-danger btn-elevate\"\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { useEffect, useMemo } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { shallowEqual, useSelector } from \"react-redux\";\r\nimport { EnquiryStatusCssClasses } from \"../EnquiriesUIHelpers\";\r\nimport { useEnquiriesUIContext } from \"../EnquiriesUIContext\";\r\n\r\nconst selectedEnquiries = (entities, ids) => {\r\n  const _enquiries = [];\r\n  ids.forEach((id) => {\r\n    const enquiry = entities.find((el) => el.id === id);\r\n    if (enquiry) {\r\n      _enquiries.push(enquiry);\r\n    }\r\n  });\r\n  return _enquiries;\r\n};\r\n\r\nexport function EnquiriesFetchDialog({ show, onHide }) {\r\n  // Enquiries UI Context\r\n  const enquiriesUIContext = useEnquiriesUIContext();\r\n  const enquiriesUIProps = useMemo(() => {\r\n    return {\r\n      ids: enquiriesUIContext.ids,\r\n      queryParams: enquiriesUIContext.queryParams,\r\n    };\r\n  }, [enquiriesUIContext]);\r\n\r\n  // Enquiries Redux state\r\n  const { enquiries } = useSelector(\r\n    (state) => ({\r\n      enquiries: selectedEnquiries(state.enquiries.entities, enquiriesUIProps.ids),\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  // if there weren't selected ids we should close modal\r\n  useEffect(() => {\r\n    if (!enquiriesUIProps.ids || enquiriesUIProps.ids.length === 0) {\r\n      onHide();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [enquiriesUIProps.ids]);\r\n\r\n  return (\r\n    <Modal\r\n      show={show}\r\n      onHide={onHide}\r\n      aria-labelledby=\"example-modal-sizes-title-lg\"\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n          Fetch selected elements\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <div className=\"list-timeline list-timeline-skin-light padding-30\">\r\n          <div className=\"list-timeline-items\">\r\n            {enquiries.map((enquiry) => (\r\n              <div className=\"list-timeline-item mb-3\" key={enquiry.id}>\r\n                <span className=\"list-timeline-text\">\r\n                  <span\r\n                    className={`label label-lg label-light-${\r\n                      EnquiryStatusCssClasses[enquiry.status]\r\n                    } label-inline`}\r\n                    style={{ width: \"60px\" }}\r\n                  >\r\n                    ID: {enquiry.id}\r\n                  </span>{\" \"}\r\n                  <span className=\"ml-5\">\r\n                    {enquiry.manufacture}, {enquiry.model}\r\n                  </span>\r\n                </span>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            onClick={onHide}\r\n            className=\"btn btn-light btn-elevate\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <> </>\r\n          <button\r\n            type=\"button\"\r\n            onClick={onHide}\r\n            className=\"btn btn-info btn-elevate\"\r\n          >\r\n            Ok\r\n          </button>\r\n        </div>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { useEffect, useState, useMemo } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport { EnquiryStatusCssClasses } from \"../EnquiriesUIHelpers\";\r\nimport * as actions from \"../../../_redux/enquiries/enquiriesActions\";\r\nimport { useEnquiriesUIContext } from \"../EnquiriesUIContext\";\r\n\r\nconst selectedEnquiries = (entities, ids) => {\r\n  const _enquiries = [];\r\n  ids.forEach((id) => {\r\n    const enquiry = entities.find((el) => el.id === id);\r\n    if (enquiry) {\r\n      _enquiries.push(enquiry);\r\n    }\r\n  });\r\n  return _enquiries;\r\n};\r\n\r\nexport function EnquiriesUpdateStatusDialog({ show, onHide }) {\r\n  // Enquiries UI Context\r\n  const enquiriesUIContext = useEnquiriesUIContext();\r\n  const enquiriesUIProps = useMemo(() => {\r\n    return {\r\n      ids: enquiriesUIContext.ids,\r\n      setIds: enquiriesUIContext.setIds,\r\n      queryParams: enquiriesUIContext.queryParams,\r\n    };\r\n  }, [enquiriesUIContext]);\r\n\r\n  // Enquiries Redux state\r\n  const { enquiries, isLoading } = useSelector(\r\n    (state) => ({\r\n      enquiries: selectedEnquiries(state.enquiries.entities, enquiriesUIProps.ids),\r\n      isLoading: state.enquiries.actionsLoading,\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  // if there weren't selected enquiries we should close modal\r\n  useEffect(() => {\r\n    if (enquiriesUIProps.ids || enquiriesUIProps.ids.length === 0) {\r\n      onHide();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [enquiriesUIProps.ids]);\r\n\r\n  const [status, setStatus] = useState(0);\r\n\r\n  const dispatch = useDispatch();\r\n  const updateStatus = () => {\r\n    // server request for updateing enquiry by ids\r\n    dispatch(actions.updateEnquiriesStatus(enquiriesUIProps.ids, status)).then(\r\n      () => {\r\n        // refresh list after deletion\r\n        dispatch(actions.fetchEnquiries(enquiriesUIProps.queryParams)).then(\r\n          () => {\r\n            // clear selections list\r\n            enquiriesUIProps.setIds([]);\r\n            // closing delete modal\r\n            onHide();\r\n          }\r\n        );\r\n      }\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      show={show}\r\n      onHide={onHide}\r\n      aria-labelledby=\"example-modal-sizes-title-lg\"\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n          Status has been updated for selected enquiries\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body className=\"overlay overlay-block cursor-default\">\r\n        {isLoading && (\r\n          <div className=\"overlay-layer bg-transparent\">\r\n            <div className=\"spinner spinner-lg spinner-warning\" />\r\n          </div>\r\n        )}\r\n        <div className=\"list-timeline list-timeline-skin-light padding-30\">\r\n          <div className=\"list-timeline-items\">\r\n            {enquiries.map((enquiry) => (\r\n              <div className=\"list-timeline-item mb-3\" key={enquiry.id}>\r\n                <span className=\"list-timeline-text\">\r\n                  <span\r\n                    className={`label label-lg label-light-${\r\n                      EnquiryStatusCssClasses[enquiry.status]\r\n                    } label-inline`}\r\n                    style={{ width: \"60px\" }}\r\n                  >\r\n                    ID: {enquiry.id}\r\n                  </span>{\" \"}\r\n                  <span className=\"ml-5\">\r\n                    {enquiry.manufacture}, {enquiry.model}\r\n                  </span>\r\n                </span>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </Modal.Body>\r\n      <Modal.Footer className=\"form\">\r\n        <div className=\"form-group\">\r\n          <select\r\n            className={`form-control ${EnquiryStatusCssClasses[status]}`}\r\n            value={status}\r\n            onChange={(e) => setStatus(+e.target.value)}\r\n          >\r\n            <option value=\"0\">Selling</option>\r\n            <option value=\"1\">Sold</option>\r\n          </select>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <button\r\n            type=\"button\"\r\n            onClick={onHide}\r\n            className=\"btn btn-light btn-elevate\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <> </>\r\n          <button\r\n            type=\"button\"\r\n            onClick={updateStatus}\r\n            className=\"btn btn-info btn-elevate\"\r\n          >\r\n            Update Status\r\n          </button>\r\n        </div>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { useMemo } from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport { isEqual } from \"lodash\";\r\nimport { useEnquiriesUIContext } from \"../EnquiriesUIContext\";\r\nimport {EnquiryConditionTitles, YES_NO_OPTIONS, UOM_CHOICES} from \"../EnquiriesUIHelpers\";\r\n\r\nconst prepareFilter = (queryParams, values) => {\r\n  const { searchText } = values;\r\n  const newQueryParams = { ...queryParams };\r\n  const filter = {};\r\n  // Filter by all fields\r\n  filter.search = searchText;\r\n\r\n  newQueryParams.filter = filter;\r\n  return newQueryParams;\r\n};\r\n\r\nexport function EnquiriesFilter({ listLoading }) {\r\n  // Enquiries UI Context\r\n  const enquiriesUIContext = useEnquiriesUIContext();\r\n  const enquiriesUIProps = useMemo(() => {\r\n    return {\r\n      setQueryParams: enquiriesUIContext.setQueryParams,\r\n      queryParams: enquiriesUIContext.queryParams,\r\n    };\r\n  }, [enquiriesUIContext]);\r\n\r\n  const applyFilter = (values) => {\r\n    const newQueryParams = prepareFilter(enquiriesUIProps.queryParams, values);\r\n    if (!isEqual(newQueryParams, enquiriesUIProps.queryParams)) {\r\n      newQueryParams.pageNumber = 1;\r\n      enquiriesUIProps.setQueryParams(newQueryParams);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Formik\r\n        initialValues={{\r\n          searchText: \"\", \r\n        }}\r\n        onSubmit={(values) => {\r\n          applyFilter(values);\r\n        }}\r\n      >\r\n        {({\r\n          values,\r\n          handleSubmit,\r\n          handleBlur,\r\n          handleChange,\r\n          setFieldValue,\r\n        }) => (\r\n          <form onSubmit={handleSubmit} className=\"form form-label-right\">\r\n            <div className=\"form-group row\">\r\n                        \r\n              <div className=\"col-lg-4\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"searchText\"\r\n                  placeholder=\"Search\"\r\n                  onBlur={handleBlur}\r\n                  value={values.searchText}\r\n                  onChange={(e) => {\r\n                    setFieldValue(\"searchText\", e.target.value);\r\n                    handleSubmit();\r\n                  }}\r\n                />\r\n                <small className=\"form-text text-muted\">\r\n                  <b>Search</b> in all fields\r\n                </small>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n}\r\n","/* eslint-disable no-script-url,jsx-a11y/anchor-is-valid */\r\nimport React from \"react\";\r\nimport { OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\nimport SVG from \"react-inlinesvg\";\r\nimport { toAbsoluteUrl } from \"../../../../../../../_metronic/_helpers\";\r\n\r\nexport const ActionsColumnFormatter = (\r\n  cellContent,\r\n  row,\r\n  rowIndex,\r\n  { openViewEnquiryPage, openDeleteEnquiryDialog }\r\n) => (\r\n  <>\r\n  <OverlayTrigger\r\n      overlay={<Tooltip id=\"inquiries-view-tooltip\">View Inquiry</Tooltip>}\r\n    >\r\n      <a\r\n        className=\"btn btn-icon btn-light btn-hover-info btn-sm\"\r\n        onClick={() => openViewEnquiryPage(row.id)}\r\n      >\r\n        <span className=\"svg-icon svg-icon-md svg-icon-info\">\r\n         <i className=\"text-info fa fa-eye\"></i>\r\n        </span>\r\n      </a>\r\n    </OverlayTrigger>{` `}\r\n    <OverlayTrigger\r\n      overlay={<Tooltip id=\"enquiries-delete-tooltip\">Delete enquiry</Tooltip>}\r\n    >\r\n      <a\r\n        className=\"btn btn-icon btn-light btn-hover-danger btn-sm\"\r\n        onClick={() => openDeleteEnquiryDialog(row.id)}\r\n      >\r\n        <span className=\"svg-icon svg-icon-md svg-icon-danger\">\r\n          <SVG src={toAbsoluteUrl(\"/static/media/svg/icons/General/Trash.svg\")} />\r\n        </span>\r\n      </a>\r\n    </OverlayTrigger>\r\n  </>\r\n);\r\n","import React from \"react\";\r\nimport {getDateFormat} from \"../../../../../../pages/helper/api\";\r\n\r\nexport const DateFormatter = (cellContent, row) => (\r\n  <>\r\n      {getDateFormat(row.created_at)}\r\n  </>\r\n);\r\n","import React from \"react\";\r\n\r\nexport const EmailFormatter = (cellContent, row) => (\r\n  <>\r\n  <a href={\"mailto:\" + row.email_address}>{row.email_address}</a>\r\n  </>\r\n);\r\n","// React bootstrap table next =>\r\n// DOCS: https://react-bootstrap-table.github.io/react-bootstrap-table2/docs/\r\n// STORYBOOK: https://react-bootstrap-table.github.io/react-bootstrap-table2/storybook/index.html\r\nimport React, { useEffect, useMemo } from \"react\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory, {\r\n  PaginationProvider,\r\n} from \"react-bootstrap-table2-paginator\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport * as actions from \"../../../_redux/enquiries/enquiriesActions\";\r\nimport * as uiHelpers from \"../EnquiriesUIHelpers\";\r\nimport {\r\n  getSelectRow,\r\n  getHandlerTableChange,\r\n  NoRecordsFoundMessage,\r\n  PleaseWaitMessage,\r\n  sortCaret,\r\n} from \"../../../../../../_metronic/_helpers\";\r\nimport * as columnFormatters from \"./column-formatters\";\r\nimport { Pagination } from \"../../../../../../_metronic/_partials/controls\";\r\nimport { useEnquiriesUIContext } from \"../EnquiriesUIContext\";\r\n\r\nexport function EnquiriesTable() {\r\n  // Enquiries UI Context\r\n  const enquiriesUIContext = useEnquiriesUIContext();\r\n  const enquiriesUIProps = useMemo(() => {\r\n    return {\r\n      ids: enquiriesUIContext.ids,\r\n      setIds: enquiriesUIContext.setIds,\r\n      queryParams: enquiriesUIContext.queryParams,\r\n      setQueryParams: enquiriesUIContext.setQueryParams,\r\n      openViewEnquiryPage:enquiriesUIContext.openViewEnquiryPage,\r\n      openDeleteEnquiryDialog: enquiriesUIContext.openDeleteEnquiryDialog,\r\n    };\r\n  }, [enquiriesUIContext]);\r\n\r\n  // Getting curret state of enquiries list from store (Redux)\r\n  const { currentState } = useSelector(\r\n    (state) => ({ currentState: state.enquiries }),\r\n    shallowEqual\r\n  );\r\n  const { totalCount, entities, listLoading, pageNumber } = currentState;\r\n  // Enquiries Redux state\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    // clear selections list\r\n    enquiriesUIProps.setIds([]);\r\n    // server call by queryParams\r\n    dispatch(actions.fetchEnquiries(enquiriesUIProps.queryParams));\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [enquiriesUIProps.queryParams, dispatch]);\r\n  // Table columns\r\n  const columns = [\r\n    {\r\n      dataField: \"email_address\",\r\n      text: \"Email\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      formatter: columnFormatters.EmailFormatter,\r\n    },\r\n    {\r\n      dataField: \"phone_number\",\r\n      text: \"Phone Number\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n    },\r\n    {\r\n      dataField: \"part_number.part_number\",\r\n      text: \"Part Number\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n    },\r\n    {\r\n      dataField: \"company.company_name\",\r\n      text: \"Company\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n    },\r\n    {\r\n      dataField: \"contact_person\",\r\n      text: \"Contact Person\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n    },\r\n    {\r\n      dataField: \"country.name\",\r\n      text: \"Country\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n    },\r\n    {\r\n      dataField: \"created_at\",\r\n      text: \"Date\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      formatter: columnFormatters.DateFormatter,\r\n\r\n    },\r\n    {\r\n      dataField: \"action\",\r\n      text: \"Actions\",\r\n      formatter: columnFormatters.ActionsColumnFormatter,\r\n      formatExtraData: {\r\n        openViewEnquiryPage:enquiriesUIProps.openViewEnquiryPage,\r\n        openDeleteEnquiryDialog: enquiriesUIProps.openDeleteEnquiryDialog,\r\n      },\r\n      classes: \"text-right pr-0\",\r\n      headerClasses: \"text-right pr-3\",\r\n      style: {\r\n        minWidth: \"100px\",\r\n      },\r\n    },\r\n  ];\r\n  // Table pagination properties\r\n  const paginationOptions = {\r\n    custom: true,\r\n    totalSize: totalCount,\r\n    sizePerPageList: uiHelpers.sizePerPageList,\r\n    sizePerPage: enquiriesUIProps.queryParams.pageSize,\r\n    page: pageNumber,\r\n    onPageChange: (page, sizePerPage) => {\r\n      console.log('enquiriesUIProps.queryParams', enquiriesUIProps.queryParams);\r\n      enquiriesUIProps.setQueryParams({...enquiriesUIProps.queryParams, pageNumber:pageNumber});\r\n     console.log('page', page);\r\n     console.log('sizePerPage', sizePerPage);\r\n   },\r\n   onSizePerPageChange: (page, sizePerPage) => {\r\n      // enquiriesUIProps.setQueryParams();\r\n     console.log('page', page);\r\n     console.log('sizePerPage', sizePerPage);\r\n   }\r\n  };\r\n  let data = [];\r\n  return (\r\n    <>\r\n      <PaginationProvider pagination={paginationFactory(paginationOptions)}>\r\n        {({ paginationProps, paginationTableProps }) => {\r\n          return (\r\n            <Pagination\r\n              isLoading={listLoading}\r\n              paginationProps={paginationProps}\r\n            >\r\n              <BootstrapTable\r\n                wrapperClasses=\"table-responsive\"\r\n                classes=\"table table-head-custom table-vertical-center overflow-hidden\"\r\n                bootstrap4\r\n                bordered={false}\r\n                remote\r\n                keyField=\"id\"\r\n                data= {entities}\r\n                columns={columns}\r\n                defaultSorted={uiHelpers.defaultSorted}\r\n                onTableChange={getHandlerTableChange(\r\n                  enquiriesUIProps.setQueryParams\r\n                )}\r\n                selectRow={getSelectRow({\r\n                  entities,\r\n                  ids: enquiriesUIProps.ids,\r\n                  setIds: enquiriesUIProps.setIds,\r\n                })}\r\n                {...paginationTableProps}\r\n              >\r\n                <PleaseWaitMessage entities={entities} />\r\n                <NoRecordsFoundMessage entities={entities} />\r\n              </BootstrapTable>\r\n            </Pagination>\r\n          );\r\n        }}\r\n      </PaginationProvider>\r\n    </>\r\n  );\r\n}\r\n","import React, { useMemo } from \"react\";\r\nimport { useEnquiriesUIContext } from \"../EnquiriesUIContext\";\r\n\r\nexport function EnquiriesGrouping() {\r\n  // Enquiries UI Context\r\n  const enquiriesUIContext = useEnquiriesUIContext();\r\n  const enquiriesUIProps = useMemo(() => {\r\n    return {\r\n      ids: enquiriesUIContext.ids,\r\n      setIds: enquiriesUIContext.setIds,\r\n      openDeleteEnquiriesDialog: enquiriesUIContext.openDeleteEnquiriesDialog,\r\n      openFetchEnquiriesDialog: enquiriesUIContext.openFetchEnquiriesDialog,\r\n      openUpdateEnquiriesStatusDialog:\r\n        enquiriesUIContext.openUpdateEnquiriesStatusDialog,\r\n    };\r\n  }, [enquiriesUIContext]);\r\n\r\n  return (\r\n    <div className=\"form\">\r\n      <div className=\"row align-items-center form-group-actions margin-top-20 margin-bottom-20\">\r\n        <div className=\"col-xl-12\">\r\n          <div className=\"form-group form-group-inline\">\r\n            <div className=\"form-label form-label-no-wrap\">\r\n              <label className=\"-font-bold font-danger-\">\r\n                <span>\r\n                  Selected records count: <b>{enquiriesUIProps.ids.length}</b>\r\n                </span>\r\n              </label>\r\n            </div>\r\n            <div>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-danger font-weight-bolder font-size-sm\"\r\n                onClick={enquiriesUIProps.openDeleteEnquiriesDialog}\r\n              >\r\n                <i className=\"fa fa-trash\"></i> Delete All\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, {useMemo} from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar,\r\n} from \"../../../../../_metronic/_partials/controls\";\r\nimport { EnquiriesFilter } from \"./enquiries-filter/EnquiriesFilter\";\r\nimport { EnquiriesTable } from \"./enquiries-table/EnquiriesTable\";\r\nimport { EnquiriesGrouping } from \"./enquiries-grouping/EnquiriesGrouping\";\r\nimport { useEnquiriesUIContext } from \"./EnquiriesUIContext\";\r\n\r\nexport function EnquiriesCard() {\r\n  const enquiriesUIContext = useEnquiriesUIContext();\r\n  const enquiriesUIProps = useMemo(() => {\r\n    return {\r\n      ids: enquiriesUIContext.ids,\r\n      queryParams: enquiriesUIContext.queryParams,\r\n      setQueryParams: enquiriesUIContext.setQueryParams,\r\n      newEnquiryButtonClick: enquiriesUIContext.newEnquiryButtonClick,\r\n      openDeleteEnquiriesDialog: enquiriesUIContext.openDeleteEnquiriesDialog,\r\n      openEditEnquiryPage: enquiriesUIContext.openEditEnquiryPage,\r\n      openViewEnquiryPage: enquiriesUIContext.openViewEnquiryPage,\r\n      openUpdateEnquiriesStatusDialog:\r\n        enquiriesUIContext.openUpdateEnquiriesStatusDialog,\r\n      openFetchEnquiriesDialog: enquiriesUIContext.openFetchEnquiriesDialog,\r\n    };\r\n  }, [enquiriesUIContext]);\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader title=\"Orders\">\r\n      </CardHeader>\r\n      <CardBody>\r\n        <EnquiriesFilter />\r\n        {enquiriesUIProps.ids.length > 0 && (\r\n          <>\r\n            <EnquiriesGrouping />\r\n          </>\r\n        )}\r\n        <EnquiriesTable />\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { EnquiriesLoadingDialog } from \"./enquiries-loading-dialog/EnquiriesLoadingDialog\";\r\nimport { EnquiryDeleteDialog } from \"./enquiry-delete-dialog/EnquiryDeleteDialog\";\r\nimport { EnquiriesDeleteDialog } from \"./enquiries-delete-dialog/EnquiriesDeleteDialog\";\r\nimport { EnquiriesFetchDialog } from \"./enquiries-fetch-dialog/EnquiriesFetchDialog\";\r\nimport { EnquiriesUpdateStatusDialog } from \"./enquiries-update-status-dialog/EnquiriesUpdateStatusDialog\";\r\nimport { EnquiriesCard } from \"./EnquiriesCard\";\r\nimport { EnquiriesUIProvider } from \"./EnquiriesUIContext\";\r\nimport {ADMIN_ROUTE} from '../../../../pages/helper/api'\r\n\r\nexport function EnquiriesPage({ history }) {\r\n  const enquiriesUIEvents = {\r\n    newEnquiryButtonClick: () => {\r\n      history.push(`/${ADMIN_ROUTE}/enquiries/new`);\r\n    },\r\n    openEditEnquiryPage: (id) => {\r\n      history.push(`/${ADMIN_ROUTE}/enquiries/${id}/edit`);\r\n    },\r\n    openViewEnquiryPage: (id) => {\r\n      history.push(`/${ADMIN_ROUTE}/enquiries/${id}/view`);\r\n    },\r\n    openDeleteEnquiryDialog: (id) => {\r\n      history.push(`/${ADMIN_ROUTE}/enquiries/${id}/delete`);\r\n    },\r\n    openDeleteEnquiriesDialog: () => {\r\n      history.push(`/${ADMIN_ROUTE}/enquiries/deleteEnquiries`);\r\n    },\r\n    openFetchEnquiriesDialog: () => {\r\n      history.push(`/${ADMIN_ROUTE}/enquiries/fetch`);\r\n    },\r\n    openUpdateEnquiriesStatusDialog: () => {\r\n      history.push(\"/\"+ADMIN_ROUTE+\"/enquiries/updateStatus\");\r\n    },\r\n  };\r\n\r\n  return (\r\n    <EnquiriesUIProvider enquiriesUIEvents={enquiriesUIEvents}>\r\n      <EnquiriesLoadingDialog />\r\n      <Route path={\"/\"+ADMIN_ROUTE+\"/enquiries/deleteEnquiries\"}>\r\n        {({ history, match }) => (\r\n          <EnquiriesDeleteDialog\r\n            show={match != null}\r\n            onHide={() => {\r\n              history.push(\"/\"+ADMIN_ROUTE+\"/enquiries\");\r\n            }}\r\n          />\r\n        )}\r\n      </Route>\r\n      <Route path={\"/\"+ADMIN_ROUTE+\"/enquiries/:id/delete\"}>\r\n        {({ history, match }) => (\r\n          <EnquiryDeleteDialog\r\n            show={match != null}\r\n            id={match && match.params.id}\r\n            onHide={() => {\r\n              history.push(\"/\"+ADMIN_ROUTE+\"/enquiries\");\r\n            }}\r\n          />\r\n        )}\r\n      </Route>\r\n      <Route path={\"/\"+ADMIN_ROUTE+\"/enquiries/fetch\"}>\r\n        {({ history, match }) => (\r\n          <EnquiriesFetchDialog\r\n            show={match != null}\r\n            onHide={() => {\r\n              history.push(\"/\"+ADMIN_ROUTE+\"/enquiries\");\r\n            }}\r\n          />\r\n        )}\r\n      </Route>\r\n      <Route path={\"/\"+ADMIN_ROUTE+\"/enquiries/updateStatus\"}>\r\n        {({ history, match }) => (\r\n          <EnquiriesUpdateStatusDialog\r\n            show={match != null}\r\n            onHide={() => {\r\n              history.push(\"/\"+ADMIN_ROUTE+\"/enquiries\");\r\n            }}\r\n          />\r\n        )}\r\n      </Route>\r\n      <EnquiriesCard />\r\n    </EnquiriesUIProvider>\r\n  );\r\n}\r\n","// Form is based on Formik\r\n// Data validation is based on Yup\r\n// Please, be familiar with article first:\r\n// https://hackernoon.com/react-form-validation-with-formik-and-yup-8b76bda62e10\r\nimport React, { useEffect, useState, useRef } from \"react\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { Input, Select as MSelect } from \"../../../../../../_metronic/_partials/controls\";\r\nimport Creatable from \"react-select/creatable\";\r\nimport { withAsyncPaginate, AsyncPaginate } from \"react-select-async-paginate\";\r\n\r\nimport Select from 'react-select';\r\nimport {\r\n  AVAILABLE_COLORS,\r\n  AVAILABLE_MANUFACTURES,\r\n  EnquiryStatusTitles,\r\n  YES_NO_OPTIONS,\r\n  UOM_CHOICES,\r\n  EnquiryConditionTitles,\r\n} from \"../EnquiriesUIHelpers\";\r\nimport { list, loadOptions, DROPDOWN_WAIT, post } from \"../../../../../pages/helper/api\";\r\n\r\nconst CreatableAsyncPaginate = withAsyncPaginate(Creatable);\r\n// Validation schema\r\nconst EnquiryEditSchema = Yup.object().shape({\r\n  part_number: Yup.string()\r\n    .min(2, \"Minimum 2 symbols\")\r\n    .max(50, \"Maximum 50 symbols\")\r\n    .required(\"Part number is required\"),\r\n  alt_part_number: Yup.string()\r\n    .min(2, \"Minimum 2 symbols\")\r\n    .max(50, \"Maximum 50 symbols\")\r\n    .required(\"Alt part number is required\"),\r\n  // enquiry_category: Yup.string(),\r\n  // supplier: Yup.string(),\r\n  // enquiry_manufacturer: Yup.string(),\r\n  // unit_price: Yup.number(),\r\n  // condition: Yup.string()\r\n  //   .min(2, \"Minimum 2 symbols\")\r\n  //   .max(50, \"Maximum 2 symbols\"),\r\n  // quantity: Yup.number()\r\n  //   .min(0, \"Quantity can'be negative\"),\r\n  // tag_date: Yup.date(),\r\n  // turn_around_time: Yup.string(),\r\n  // hazmat: Yup.string(),\r\n  // certification: Yup.string(),\r\n  // unit_of_measure: Yup.string(),\r\n  // hot_sale_item: Yup.string(),\r\n  // status: Yup.string(),\r\n});\r\n\r\nexport function EnquiryEditForm({\r\n  enquiry,\r\n  btnRef,\r\n  saveEnquiry,\r\n}) {\r\n\r\n  const [categories, setCategories] = useState([]);\r\n  const [manufacturers, setManufacturers] = useState([]);\r\n  const [suppliers, setSuppliers] = useState([]);\r\n  const [modelsLoaded, setModelsLoaded] = useState(false);\r\n\r\n  useEffect(() => {\r\n    loadModels();\r\n  }, []);\r\n\r\n  function loadModels() {\r\n    let models = {\r\n      'Manufacturer':{},\r\n      'Supplier':{},\r\n      'EnquiryCategory':{},\r\n    }\r\n    post('oas-models', {models:models}).then(function(response){\r\n      for(let opt in response.data){\r\n        response.data[opt].map((row, i) => {\r\n          response.data[opt][i].label = row.name ? row.name : row.company_name;\r\n          response.data[opt][i].value = row.id;\r\n        })\r\n      }\r\n\r\n      setCategories(response.data.EnquiryCategory);\r\n      setManufacturers(response.data.Manufacturer);\r\n      setSuppliers(response.data.Supplier);\r\n      setModelsLoaded(true);\r\n    })\r\n  }\r\n\r\n  function createCategory(option) {\r\n    post('enquiry-category', {name:option}).then(function(response){\r\n      setCategories([...categories, {label:response.name, value:response.id}]);\r\n    })\r\n  }\r\n\r\n  function createManfacturer(option) {\r\n    post('manufacturer', {name:option}).then(function(response){\r\n      setCategories([...manufacturers, {label:response.name, value:response.id}]);\r\n    })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Formik\r\n        enableReinitialize={true}\r\n        initialValues={enquiry}\r\n        validationSchema={EnquiryEditSchema}\r\n        onSubmit={(values) => {\r\n          saveEnquiry(values);\r\n        }}\r\n      >\r\n        {({ handleSubmit }) => (\r\n          <>\r\n            <Form className=\"form form-label-right\">\r\n              <div className=\"form-group row\">\r\n                <div className=\"col-lg-4\">\r\n                  <Field\r\n                    name=\"part_number\"\r\n                    component={Input}\r\n                    placeholder=\"e.g AB123\"\r\n                    label=\"Part Number\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-lg-4\">\r\n                  <Field\r\n                    name=\"alt_part_number\"\r\n                    component={Input}\r\n                    placeholder=\"e.g AB123\"\r\n                    label=\"Alternative Part Number\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-lg-4\">\r\n                  <label>Select Category</label>\r\n                  <CreatableAsyncPaginate\r\n                    debounceTimeout={!modelsLoaded ? DROPDOWN_WAIT : 0}\r\n                    name=\"enquiry_category\"\r\n                    onCreateOption={createCategory}\r\n                    isClearable = {true}\r\n                    loadOptions={(search, prevOptions) => loadOptions(search, prevOptions, categories, modelsLoaded)}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"form-group row\">\r\n                <div className=\"col-lg-4\">\r\n                  <label>Select Manufacturer</label>\r\n                  <CreatableAsyncPaginate \r\n                    debounceTimeout={!modelsLoaded ? DROPDOWN_WAIT : 0}\r\n                    isClearable = {true}\r\n                    name=\"enquiry_manufacturer\" \r\n                    onCreateOption={createManfacturer}\r\n                    loadOptions={(search, prevOptions) => loadOptions(search, prevOptions, manufacturers, modelsLoaded)}\r\n                  />\r\n                </div>\r\n                <div className=\"col-lg-4\">\r\n                  <label>Select Supplier</label>\r\n                  <AsyncPaginate \r\n                    debounceTimeout={!modelsLoaded ? DROPDOWN_WAIT : 0}\r\n                    isClearable = {true}  \r\n                    name=\"supplier\" \r\n                    loadOptions={(search, prevOptions) => loadOptions(search, prevOptions, suppliers, modelsLoaded)}\r\n                  />\r\n                </div>\r\n                <div className=\"col-lg-4\">\r\n                  <MSelect name=\"condition\" label=\"Condition\">\r\n                    {EnquiryConditionTitles.map((condition, index) => (\r\n                      <option key={condition} value={condition}>\r\n                        {condition}\r\n                      </option>\r\n                    ))}\r\n                  </MSelect>\r\n                </div>\r\n              </div>\r\n              <div className=\"form-group row\">\r\n                <div className=\"col-lg-4\">\r\n                  <Field\r\n                    name=\"quantity\"\r\n                    component={Input}\r\n                    placeholder=\"Default 0\"\r\n                    label=\"Quantity\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-lg-4\">\r\n                  <Field\r\n                    name=\"tag_date\"\r\n                    component={Input}\r\n                    placeholder=\"\"\r\n                    label=\"Tag Date\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-lg-4\">\r\n                  <Field\r\n                    name=\"turn_around_time\"\r\n                    component={Input}\r\n                    placeholder=\"\"\r\n                    label=\"Turn around time\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"form-group row\">\r\n                <div className=\"col-lg-4\">\r\n                  <MSelect name=\"hazmat\" label=\"Hazmat\">\r\n                    {YES_NO_OPTIONS.map((status, index) => (\r\n                      <option key={status} value={status}>\r\n                        {status}\r\n                      </option>\r\n                    ))}\r\n                  </MSelect>\r\n                </div>\r\n                <div className=\"col-lg-4\">\r\n                  <Field\r\n                    name=\"certification\"\r\n                    component={Input}\r\n                    placeholder=\"\"\r\n                    label=\"Certification\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-lg-4\">\r\n                  <MSelect name=\"unit_of_measure\" label=\"Unit of measure\">\r\n                    {UOM_CHOICES.map((status, index) => (\r\n                      <option key={status} value={status}>\r\n                        {status}\r\n                      </option>\r\n                    ))}\r\n                  </MSelect>\r\n                </div>\r\n              </div>\r\n              <div className=\"form-group row\">\r\n                <div className=\"col-lg-4\">\r\n                  <Field\r\n                    name=\"unit_price\"\r\n                    component={Input}\r\n                    placeholder=\"\"\r\n                    label=\"Unit price\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-lg-4\">\r\n                  <MSelect name=\"hot_sale_item\" label=\"Hot sale item\">\r\n                    {YES_NO_OPTIONS.map((status, index) => (\r\n                      <option key={status} value={status}>\r\n                        {status}\r\n                      </option>\r\n                    ))}\r\n                  </MSelect>\r\n                </div>\r\n                <div className=\"col-lg-4\">\r\n                  <MSelect name=\"status\" label=\"Status\">\r\n                    {EnquiryStatusTitles.map((status, index) => (\r\n                      <option key={status} value={index}>\r\n                        {status}\r\n                      </option>\r\n                    ))}\r\n                  </MSelect>\r\n                </div>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>Description</label>\r\n                <Field\r\n                  name=\"description\"\r\n                  as=\"textarea\"\r\n                  className=\"form-control\"\r\n                />\r\n              </div>\r\n              <button\r\n                type=\"submit\"\r\n                style={{ display: \"none\" }}\r\n                ref={btnRef}\r\n                onSubmit={() => handleSubmit()}\r\n              ></button>\r\n            </Form>\r\n          </>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n}\r\n","export const defaultSorted = [{ dataField: \"id\", order: \"asc\" }];\r\nexport const sizePerPageList = [\r\n  { text: \"1\", value: 1 },\r\n  { text: \"3\", value: 3 },\r\n  { text: \"5\", value: 5 },\r\n];\r\nexport const initialFilter = {\r\n  filter: {\r\n    value: \"\",\r\n  },\r\n  sortOrder: \"asc\", // asc||desc\r\n  sortField: \"name\",\r\n  pageNumber: 1,\r\n  pageSize: 5,\r\n};\r\n\r\nexport const SPECIFICATIONS_DICTIONARY = [\r\n  { id: 0, name: \"Seats\" },\r\n  { id: 1, name: \"Fuel Type\" },\r\n  { id: 2, name: \"Stock\" },\r\n  { id: 3, name: \"Door count\" },\r\n  { id: 4, name: \"Engine\" },\r\n  { id: 5, name: \"Transmission\" },\r\n  { id: 6, name: \"Drivetrain\" },\r\n  { id: 7, name: \"Combined MPG\" },\r\n  { id: 8, name: \"Warranty\" },\r\n  { id: 9, name: \"Wheels\" },\r\n];\r\n","/* eslint-disable no-unused-vars */\r\nimport React, {\r\n  useEffect,\r\n  useContext,\r\n  createContext,\r\n  useState,\r\n  useCallback,\r\n} from \"react\";\r\nimport { isEqual, isFunction } from \"lodash\";\r\nimport { initialFilter } from \"./SpecificationsUIHelper\";\r\n\r\nconst SpecificationsUIContext = createContext();\r\n\r\nexport function useSpecificationsUIContext() {\r\n  return useContext(SpecificationsUIContext);\r\n}\r\n\r\nexport const SpecificationsUIConsumer = SpecificationsUIContext.Consumer;\r\n\r\nexport function SpecificationsUIProvider({ currentEnquiryId, children }) {\r\n  const [enquiryId, setEnquiryId] = useState(currentEnquiryId);\r\n  const [queryParams, setQueryParamsBase] = useState(initialFilter);\r\n  const [ids, setIds] = useState([]);\r\n  const setQueryParams = useCallback((nextQueryParams) => {\r\n    setQueryParamsBase((prevQueryParams) => {\r\n      if (isFunction(nextQueryParams)) {\r\n        nextQueryParams = nextQueryParams(prevQueryParams);\r\n      }\r\n\r\n      if (isEqual(prevQueryParams, nextQueryParams)) {\r\n        return prevQueryParams;\r\n      }\r\n\r\n      return nextQueryParams;\r\n    });\r\n  }, []);\r\n  const [selectedId, setSelectedId] = useState(null);\r\n  const initSpecification = {\r\n    id: undefined,\r\n    value: \"\",\r\n    specId: 0,\r\n    carId: enquiryId,\r\n  };\r\n  useEffect(() => {\r\n    initSpecification.carId = currentEnquiryId;\r\n    initSpecification.enquiryId = currentEnquiryId;\r\n    setEnquiryId(currentEnquiryId);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [currentEnquiryId]);\r\n  const [\r\n    showEditSpecificationDialog,\r\n    setShowEditSpecificationDialog,\r\n    showViewSpecificationDialog,\r\n    setShowViewSpecificationDialog,\r\n  ] = useState(false);\r\n  const openNewSpecificationDialog = () => {\r\n    setSelectedId(undefined);\r\n    setShowEditSpecificationDialog(true);\r\n  };\r\n  const openEditSpecificationDialog = (id) => {\r\n    setSelectedId(id);\r\n    setShowEditSpecificationDialog(true);\r\n  };\r\n  const closeEditSpecificationDialog = () => {\r\n    setSelectedId(undefined);\r\n    setShowEditSpecificationDialog(false);\r\n  };\r\n  const openViewSpecificationDialog = (id) => {\r\n    setSelectedId(id);\r\n    setShowViewSpecificationDialog(true);\r\n  };\r\n  const closeViewSpecificationDialog = () => {\r\n    setSelectedId(undefined);\r\n    setShowViewSpecificationDialog(false);\r\n  }\r\n  const [\r\n    showDeleteSpecificationDialog,\r\n    setShowDeleteSpecificationDialog,\r\n  ] = useState(false);\r\n  const openDeleteSpecificationDialog = (id) => {\r\n    setSelectedId(id);\r\n    setShowDeleteSpecificationDialog(true);\r\n  };\r\n  const closeDeleteSpecificationDialog = () => {\r\n    setSelectedId(undefined);\r\n    setShowDeleteSpecificationDialog(false);\r\n  };\r\n  const [\r\n    showDeleteSpecificationsDialog,\r\n    setShowDeleteSpecificationsDialog,\r\n  ] = useState(false);\r\n  const openDeleteSpecificationsDialog = () => {\r\n    setShowDeleteSpecificationsDialog(true);\r\n  };\r\n  const closeDeleteSpecificationsDialog = () => {\r\n    setShowDeleteSpecificationsDialog(false);\r\n  };\r\n  const [\r\n    showFetchSpecificationsDialog,\r\n    setShowFetchSpecificationsDialog,\r\n  ] = useState(false);\r\n  const openFetchSpecificationsDialog = () => {\r\n    setShowFetchSpecificationsDialog(true);\r\n  };\r\n  const closeFetchSpecificationsDialog = () => {\r\n    setShowFetchSpecificationsDialog(false);\r\n  };\r\n  const value = {\r\n    ids,\r\n    setIds,\r\n    enquiryId,\r\n    setEnquiryId,\r\n    queryParams,\r\n    setQueryParams,\r\n    initSpecification,\r\n    selectedId,\r\n    showEditSpecificationDialog,\r\n    openEditSpecificationDialog,\r\n    showViewSpecificationDialog,\r\n    openViewSpecificationDialog,\r\n    openNewSpecificationDialog,\r\n    closeEditSpecificationDialog,\r\n    showDeleteSpecificationDialog,\r\n    openDeleteSpecificationDialog,\r\n    closeDeleteSpecificationDialog,\r\n    showDeleteSpecificationsDialog,\r\n    openDeleteSpecificationsDialog,\r\n    closeDeleteSpecificationsDialog,\r\n    showFetchSpecificationsDialog,\r\n    openFetchSpecificationsDialog,\r\n    closeFetchSpecificationsDialog,\r\n  };\r\n\r\n  return (\r\n    <SpecificationsUIContext.Provider value={value}>\r\n      {children}\r\n    </SpecificationsUIContext.Provider>\r\n  );\r\n}\r\n","// Form is based on Formik\r\n// Data validation is based on Yup\r\n// Please, be familiar with article first:\r\n// https://hackernoon.com/react-form-validation-with-formik-and-yup-8b76bda62e10\r\nimport React from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport {\r\n  Select,\r\n  Input,\r\n} from \"../../../../../../../_metronic/_partials/controls\";\r\nimport { SPECIFICATIONS_DICTIONARY } from \"../SpecificationsUIHelper\";\r\n\r\n// Validation schema\r\nconst SpecificationEditSchema = Yup.object().shape({\r\n  value: Yup.string()\r\n    .min(2, \"Minimum 2 symbols\")\r\n    .max(50, \"Maximum 50 symbols\")\r\n    .required(\"Value is required\"),\r\n  specId: Yup.number().required(\"Specification type is required\"),\r\n});\r\n\r\nexport function SpecificationEditForm({\r\n  saveSpecification,\r\n  specification,\r\n  actionsLoading,\r\n  onHide,\r\n}) {\r\n  return (\r\n    <>\r\n      <Formik\r\n        enableReinitialize={true}\r\n        initialValues={specification}\r\n        validationSchema={SpecificationEditSchema}\r\n        onSubmit={(values) => {\r\n          saveSpecification(values);\r\n        }}\r\n      >\r\n        {({ handleSubmit }) => (\r\n          <>\r\n            <Modal.Body className=\"overlay overlay-block cursor-default\">\r\n              {actionsLoading && (\r\n                <div className=\"overlay-layer bg-transparent\">\r\n                  <div className=\"spinner spinner-lg spinner-success\" />\r\n                </div>\r\n              )}\r\n              <Form className=\"form form-label-right\">\r\n                <div className=\"form-group row\">\r\n                  <div className=\"col-lg-12\">\r\n                    <Select name=\"specId\" label=\"Specification Type\">\r\n                      {SPECIFICATIONS_DICTIONARY.map((spec) => (\r\n                        <option key={spec.id} value={spec.id}>\r\n                          {spec.name}\r\n                        </option>\r\n                      ))}\r\n                    </Select>\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                  <div className=\"col-lg-12\">\r\n                    <Field\r\n                      name=\"value\"\r\n                      component={Input}\r\n                      placeholder=\"Value\"\r\n                      label=\"Value\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <button\r\n                type=\"button\"\r\n                onClick={onHide}\r\n                className=\"btn btn-light btn-elevate\"\r\n              >\r\n                Cancel\r\n              </button>\r\n              <> </>\r\n              <button\r\n                type=\"submit\"\r\n                onClick={() => handleSubmit()}\r\n                className=\"btn btn-info btn-elevate\"\r\n              >\r\n                Save\r\n              </button>\r\n            </Modal.Footer>\r\n          </>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n}\r\n","/* eslint-disable no-unused-vars */\r\nimport React, { useEffect, useContext, createContext, useState, useCallback } from \"react\";\r\nimport {isEqual, isFunction} from \"lodash\";\r\nimport {initialFilter} from \"./RemarksUIHelper\";\r\n\r\nconst RemarksUIContext = createContext();\r\n\r\nexport function useRemarksUIContext() {\r\n  return useContext(RemarksUIContext);\r\n}\r\n\r\nexport const RemarksUIConsumer = RemarksUIContext.Consumer;\r\n\r\nexport function RemarksUIProvider({ currentEnquiryId, children }) {\r\n  const [enquiryId, setEnquiryId] = useState(currentEnquiryId);\r\n  const [queryParams, setQueryParamsBase] = useState(initialFilter);\r\n  const [ids, setIds] = useState([]);\r\n  const setQueryParams = useCallback(nextQueryParams => {\r\n    setQueryParamsBase(prevQueryParams => {\r\n      if (isFunction(nextQueryParams)) {\r\n        nextQueryParams = nextQueryParams(prevQueryParams);\r\n      }\r\n\r\n      if (isEqual(prevQueryParams, nextQueryParams)) {\r\n        return prevQueryParams;\r\n      }\r\n\r\n      return nextQueryParams;\r\n    });\r\n  }, []);\r\n  const [selectedId, setSelectedId] = useState(null);\r\n  const [showEditRemarkDialog, setShowEditRemarkDialog] = useState(false);\r\n  const initRemark = {\r\n    id: undefined,\r\n    text: \"\",\r\n    type: 0,\r\n    dueDate: \"01/07/2020\",\r\n    carId: enquiryId\r\n  };\r\n  useEffect(()=> {\r\n    initRemark.enquiryId = currentEnquiryId;\r\n    initRemark.carId = currentEnquiryId;\r\n    setEnquiryId(currentEnquiryId);\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [currentEnquiryId]);\r\n  const openNewRemarkDialog = () => {\r\n    setSelectedId(undefined);\r\n    setShowEditRemarkDialog(true);\r\n  };\r\n  const openEditRemarkDialog = id => {\r\n    setSelectedId(id);\r\n    setShowEditRemarkDialog(true);\r\n  };\r\n  const closeEditRemarkDialog = () => {\r\n    setSelectedId(undefined);\r\n    setShowEditRemarkDialog(false);\r\n  };\r\n  const [showDeleteRemarkDialog, setShowDeleteRemarkDialog] = useState(false);\r\n  const openDeleteRemarkDialog = id => {\r\n    setSelectedId(id);\r\n    setShowDeleteRemarkDialog(true);\r\n  };\r\n  const closeDeleteRemarkDialog = () => {\r\n    setSelectedId(undefined);\r\n    setShowDeleteRemarkDialog(false);\r\n  };\r\n\r\n  const [showDeleteRemarksDialog, setShowDeleteRemarksDialog] = useState(false);\r\n  const openDeleteRemarksDialog = () => {\r\n    setShowDeleteRemarksDialog(true);\r\n  };\r\n  const closeDeleteRemarksDialog = () => {\r\n    setShowDeleteRemarksDialog(false);\r\n  };\r\n\r\n  const [showFetchRemarksDialog, setShowFetchRemarksDialog] = useState(false);\r\n  const openFetchRemarksDialog = () => {\r\n    setShowFetchRemarksDialog(true);\r\n  };\r\n  const closeFetchRemarksDialog = () => {\r\n    setShowFetchRemarksDialog(false);\r\n  };\r\n\r\n  const value = {\r\n    ids,\r\n    setIds,\r\n    enquiryId,\r\n    setEnquiryId,\r\n    queryParams,\r\n    setQueryParams,\r\n    initRemark,\r\n    selectedId,\r\n    showEditRemarkDialog,\r\n    openNewRemarkDialog,    \r\n    openEditRemarkDialog,\r\n    closeEditRemarkDialog,\r\n    showDeleteRemarkDialog,\r\n    openDeleteRemarkDialog,\r\n    closeDeleteRemarkDialog,\r\n    showDeleteRemarksDialog,\r\n    openDeleteRemarksDialog,\r\n    closeDeleteRemarksDialog,\r\n    openFetchRemarksDialog,\r\n    closeFetchRemarksDialog,\r\n    showFetchRemarksDialog\r\n  };\r\n  \r\n  return (\r\n    <RemarksUIContext.Provider value={value}>\r\n      {children}\r\n    </RemarksUIContext.Provider>\r\n  );\r\n}\r\n","// Form is based on Formik\r\n// Data validation is based on Yup\r\n// Please, be familiar with article first:\r\n// https://hackernoon.com/react-form-validation-with-formik-and-yup-8b76bda62e10\r\nimport React from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport {\r\n  Input,\r\n  Select,\r\n  DatePickerField,\r\n} from \"../../../../../../../_metronic/_partials/controls\";\r\n\r\n// Validation schema\r\nconst RemarkEditSchema = Yup.object().shape({\r\n  text: Yup.string()\r\n    .min(2, \"Minimum 2 symbols\")\r\n    .max(50, \"Maximum 50 symbols\")\r\n    .required(\"Text is required\"),\r\n  type: Yup.number().required(\"Type is required\"),\r\n  dueDate: Yup.mixed()\r\n    .nullable(false)\r\n    .required(\"Due date is required\"),\r\n});\r\n\r\nexport function RemarkEditForm({ saveRemark, remark, actionsLoading, onHide }) {\r\n  return (\r\n    <>\r\n      <Formik\r\n        enableReinitialize={true}\r\n        initialValues={remark}\r\n        validationSchema={RemarkEditSchema}\r\n        onSubmit={(values) => saveRemark(values)}\r\n      >\r\n        {({ handleSubmit }) => (\r\n          <>\r\n            <Modal.Body className=\"overlay overlay-block cursor-default\">\r\n              {actionsLoading && (\r\n                <div className=\"overlay-layer bg-transparent\">\r\n                  <div className=\"spinner spinner-lg spinner-success\" />\r\n                </div>\r\n              )}\r\n              <Form className=\"form form-label-right\">\r\n                <div className=\"form-group row\">\r\n                  <div className=\"col-lg-12\">\r\n                    <Field\r\n                      name=\"text\"\r\n                      component={Input}\r\n                      placeholder=\"Text\"\r\n                      label=\"Text\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                  <div className=\"col-lg-12\">\r\n                    <DatePickerField name=\"dueDate\" label=\"Due date\" />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                  <div className=\"col-lg-12\">\r\n                    <Select name=\"type\" label=\"Type\">\r\n                      <option value=\"0\">Info</option>\r\n                      <option value=\"1\">Note</option>\r\n                      <option value=\"2\">Reminder</option>\r\n                    </Select>\r\n                  </div>\r\n                </div>\r\n              </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <button\r\n                type=\"button\"\r\n                onClick={onHide}\r\n                className=\"btn btn-light btn-elevate\"\r\n              >\r\n                Cancel\r\n              </button>\r\n              <> </>\r\n              <button\r\n                type=\"submit\"\r\n                onClick={() => handleSubmit()}\r\n                className=\"btn btn-info btn-elevate\"\r\n              >\r\n                Save\r\n              </button>\r\n            </Modal.Footer>\r\n          </>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n}\r\n","/* eslint-disable no-script-url,jsx-a11y/anchor-is-valid,jsx-a11y/role-supports-aria-props */\r\nimport React, { useEffect, useState, useRef } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { shallowEqual, useSelector } from \"react-redux\";\r\nimport * as actions from \"../../../_redux/enquiries/enquiriesActions\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar,\r\n} from \"../../../../../../_metronic/_partials/controls\";\r\nimport { EnquiryEditForm } from \"./EnquiryEditForm\";\r\nimport { Specifications } from \"../enquiry-specifications/Specifications\";\r\nimport { SpecificationsUIProvider } from \"../enquiry-specifications/SpecificationsUIContext\";\r\nimport { useSubheader } from \"../../../../../../_metronic/layout\";\r\nimport { ModalProgressBar } from \"../../../../../../_metronic/_partials/controls\";\r\nimport { RemarksUIProvider } from \"../enquiry-remarks/RemarksUIContext\";\r\nimport { Remarks } from \"../enquiry-remarks/Remarks\";\r\nimport { ADMIN_ROUTE } from \"../../../../../pages/helper/api\";\r\n\r\nconst initEnquiry = {\r\n  id: undefined,\r\n  condition: \"\",\r\n  enquiry_manufacturer: \"\",\r\n  supplier: \"\",\r\n  enquiry_category: \"\",\r\n  part_number: \"\",\r\n  alt_part_number: \"\",\r\n  description: \"\",\r\n  tag_date: \"2021-12-12\",\r\n  status: 0,\r\n  hazmat: \"\",\r\n  unit_price: 0,\r\n  unit_of_measure:\"\",\r\n  quantity:0,\r\n  turn_around_time:\"\",\r\n  hot_sale_item:\"\",\r\n  certification:\"\"\r\n};\r\n\r\nexport function EnquiryEdit({\r\n  history,\r\n  match: {\r\n    params: { id },\r\n  },\r\n}) {\r\n  // Subheader\r\n  const suhbeader = useSubheader();\r\n\r\n  // Tabs\r\n  const [tab, setTab] = useState(\"basic\");\r\n  const [title, setTitle] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  // const layoutDispatch = useContext(LayoutContext.Dispatch);\r\n  const { actionsLoading, enquiryForEdit } = useSelector(\r\n    (state) => ({\r\n      actionsLoading: state.enquiries.actionsLoading,\r\n      enquiryForEdit: state.enquiries.enquiryForEdit,\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(actions.fetchEnquiry(id));\r\n  }, [id, dispatch]);\r\n\r\n  useEffect(() => {\r\n    let _title = id ? \"\" : \"New Enquiry\";\r\n    if (enquiryForEdit && id) {\r\n      _title = `Edit enquiry - ${enquiryForEdit.part_number}`;\r\n    }\r\n\r\n    setTitle(_title);\r\n    suhbeader.setTitle(_title);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [enquiryForEdit, id]);\r\n\r\n  const saveEnquiry = (values) => {\r\n      console.log('values', values);\r\n    \r\n    if (!id) {\r\n      dispatch(actions.createEnquiry(values)).then(() => backToEnquiriesList());\r\n    } else {\r\n\r\n      dispatch(actions.updateEnquiry(values)).then(() => backToEnquiriesList());\r\n    }\r\n  };\r\n\r\n  const btnRef = useRef();  \r\n  const saveEnquiryClick = () => {\r\n    if (btnRef && btnRef.current) {\r\n      btnRef.current.click();\r\n    }\r\n  };\r\n\r\n  const backToEnquiriesList = () => {\r\n    history.push(`/${ADMIN_ROUTE}/enquiries`);\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      {actionsLoading && <ModalProgressBar />}\r\n      <CardHeader title={title}>\r\n        <CardHeaderToolbar>\r\n          <button\r\n            type=\"button\"\r\n            onClick={backToEnquiriesList}\r\n            className=\"btn btn-light\"\r\n          >\r\n            <i className=\"fa fa-arrow-left\"></i>\r\n            Back\r\n          </button>\r\n          {`  `}\r\n          <button className=\"btn btn-light ml-2\">\r\n            <i className=\"fa fa-redo\"></i>\r\n            Reset\r\n          </button>\r\n          {`  `}\r\n          <button\r\n            type=\"submit\"\r\n            className=\"btn btn-info ml-2\"\r\n            onClick={saveEnquiryClick}\r\n          >\r\n            Save\r\n          </button>\r\n        </CardHeaderToolbar>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <div className=\"mt-5\">\r\n            <EnquiryEditForm\r\n              actionsLoading={actionsLoading}\r\n              enquiry={enquiryForEdit || initEnquiry}\r\n              btnRef={btnRef}\r\n              saveEnquiry={saveEnquiry}\r\n            />\r\n        </div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n}\r\n","/* eslint-disable no-script-url,jsx-a11y/anchor-is-valid,jsx-a11y/role-supports-aria-props */\r\nimport React, { useEffect, useState, useRef } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { shallowEqual, useSelector } from \"react-redux\";\r\nimport * as actions from \"../../../_redux/enquiries/enquiriesActions\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar,\r\n} from \"../../../../../../_metronic/_partials/controls\";\r\nimport { Specifications } from \"../enquiry-specifications/Specifications\";\r\nimport { SpecificationsUIProvider } from \"../enquiry-specifications/SpecificationsUIContext\";\r\nimport { useSubheader } from \"../../../../../../_metronic/layout\";\r\nimport { ModalProgressBar } from \"../../../../../../_metronic/_partials/controls\";\r\nimport { RemarksUIProvider } from \"../enquiry-remarks/RemarksUIContext\";\r\nimport { Remarks } from \"../enquiry-remarks/Remarks\";\r\nimport { ADMIN_ROUTE, STATIC_URL, getDateFormat } from \"../../../../../pages/helper/api\";\r\nimport {Paper, Grid} from \"@material-ui/core\";\r\n// import moment from \"moment\";\r\n\r\n\r\nexport function EnquiryView({\r\n  history,\r\n  match: {\r\n    params: { id },\r\n  },\r\n}) {\r\n  // Subheader\r\n  const suhbeader = useSubheader();\r\n\r\n  // Tabs\r\n  const [tab, setTab] = useState(\"basic\");\r\n  const [title, setTitle] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  // const layoutDispatch = useContext(LayoutContext.Dispatch);\r\n  const { actionsLoading, enquiry } = useSelector(\r\n    (state) => ({\r\n      actionsLoading: state.enquiries.actionsLoading,\r\n      enquiry: state.enquiries.enquiryForEdit,\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(actions.fetchEnquiry(id));\r\n  }, [id, dispatch]);\r\n\r\n  useEffect(() => {\r\n    let _title = id ? \"\" : \"View Enquiry\";\r\n    if (enquiry && id) {\r\n      _title = `View enquiry - ${enquiry?.email_address || enquiry?.part_number?.part_number}`;\r\n    }\r\n\r\n    setTitle(_title);\r\n    suhbeader.setTitle(_title);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [enquiry, id]);\r\n\r\n\r\n  const editEnquiryClick = () => {\r\n    history.push(`/${ADMIN_ROUTE}/enquiries/${enquiry.id}/edit`);\r\n  };\r\n\r\n  const backToEnquiriesList = () => {\r\n    history.push(`/${ADMIN_ROUTE}/enquiries`);\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      {actionsLoading && <ModalProgressBar />}\r\n      <CardHeader title={title}>\r\n        <CardHeaderToolbar>\r\n          <button\r\n            type=\"button\"\r\n            onClick={backToEnquiriesList}\r\n            className=\"btn btn-light\"\r\n          >\r\n            <i className=\"fa fa-arrow-left\"></i>\r\n            Back\r\n          </button>\r\n          \r\n        </CardHeaderToolbar>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <div className=\"mt-5\">\r\n          <Grid container spacing={3}>\r\n                <Grid item xs={12} md={9}>\r\n                    <div className=\"kt_section__detail\">\r\n                        <div className=\"row mb-4\">\r\n                            <div className=\"col-md-6 col-12\">\r\n                                <div className=\"kt_detail__item_title\">Email Address</div>\r\n                                <div>{enquiry?.email_address ? enquiry.email_address : '---'}</div>\r\n                            </div>\r\n                            <div className=\"col-md-6 col-12\">\r\n                                <div className=\"kt_detail__item_title\">Company</div>\r\n                                <div>{enquiry?.company?.company_name ? enquiry.company.company_name : '---'}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row mb-4\">\r\n                            <div className=\"col-md-6 col-12\">\r\n                                <div className=\"kt_detail__item_title\">Country</div>\r\n                                <div>{enquiry?.country?.name ? enquiry.country.name : '---'}</div>\r\n                            </div>\r\n                            <div className=\"col-md-6 col-12\">\r\n                                <div className=\"kt_detail__item_title\">Phone Number</div>\r\n                                <div>{enquiry?.phone_number ? enquiry.phone_number : '---'}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row mb-4\">\r\n                            <div className=\"col-md-6 col-12\">\r\n                                <div className=\"kt_detail__item_title\"> Inquiry Date</div>\r\n                                <div>{getDateFormat(enquiry?.created_at)}</div>\r\n                            </div>\r\n                        </div> <hr />\r\n                        <div className=\"row mb-4\">\r\n                            <div className=\"col-md-6 col-12\">\r\n                                <div className=\"kt_detail__item_title\">Part Number</div>\r\n                                <div>{enquiry?.part_number?.part_number ? enquiry.part_number.part_number : '---'}</div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </Grid>\r\n          </Grid>\r\n        </div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n}\r\n","import React, { Suspense } from \"react\";\r\nimport { Redirect, Switch } from \"react-router-dom\";\r\nimport { EnquiriesPage } from \"./EnquiriesPage\";\r\nimport { EnquiryEdit } from \"./enquiry-edit/EnquiryEdit\";\r\nimport { EnquiryView } from \"./enquiry-view/EnquiryView\"\r\nimport { LayoutSplashScreen, ContentRoute } from \"../../../../../_metronic/layout\";\r\nimport { ADMIN_ROUTE } from '../../../../pages/helper/api'\r\n\r\nexport default function EnquiriesPages() {\r\n  return (\r\n    <Suspense fallback={<LayoutSplashScreen />}>\r\n      <Switch>\r\n        <ContentRoute path={\"/\"+ADMIN_ROUTE+\"/enquiries/new\"} component={EnquiryEdit} />\r\n        <ContentRoute\r\n          path={\"/\"+ADMIN_ROUTE+\"/enquiries/:id/edit\"}\r\n          component={EnquiryEdit}\r\n        />\r\n        <ContentRoute\r\n          path={\"/\"+ADMIN_ROUTE+\"/enquiries/:id/view\"}\r\n          component={EnquiryView}\r\n        />\r\n        <ContentRoute path={\"/\"+ADMIN_ROUTE+'/enquiries'} component={EnquiriesPage} />\r\n      </Switch>\r\n    </Suspense>\r\n  );\r\n}\r\n"],"sourceRoot":""}